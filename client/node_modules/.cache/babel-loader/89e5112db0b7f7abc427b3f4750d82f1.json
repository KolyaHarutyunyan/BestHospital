{"ast":null,"code":"var _jsxFileName = \"/Users/eachbase5/Desktop/untitled folder/wellnessDaisy/client/src/fragments/fundingSource/createFundingSource/core/createFundingSource.js\",\n    _s = $RefreshSig$();\n\nimport { AddressInput, ValidationInput, SelectInput, CreateChancel } from \"@eachbase/components\";\nimport React, { useState, useDispatch } from \"react\";\nimport { CreateFoundingSourceHeader, FoundingSourceHeader } from \"./createFoundingSourceHeader\";\nimport { createFoundingSourceStyle } from \"./styles\";\nimport { EmailValidator, ErrorText } from \"@eachbase/utils\";\nimport { fundingSourceActions } from \"../../../../store\"; // import SelectInput from \"@material-ui/core/Select/SelectInput\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CreateFundingSource = ({\n  handleClose\n}) => {\n  _s();\n\n  const [error, setError] = useState(\"\");\n  const [inputs, setInputs] = useState({});\n  const classes = createFoundingSourceStyle();\n  const dispatch = useDispatch();\n\n  const handleCheck = bool => {\n    if (bool === true) {\n      setError(\"Not valid email\");\n    } else {\n      setError(\"\");\n    }\n  };\n\n  const handleChange = e => setInputs(prevState => ({ ...prevState,\n    [e.target.name]: e.target.value\n  }), error === e.target.name && setError(''));\n\n  const handleCreate = () => {\n    const data = {\n      \"name\": inputs.name,\n      \"email\": inputs.email,\n      \"phoneNumber\": inputs.phone,\n      'type': inputs.type,\n      'contact': inputs.contact,\n      'website': inputs.website,\n      \"address\": 'armenia yerevan',\n      \"status\": \"INACTIVE\" // fullAddress\n\n    };\n\n    if (inputs.name && inputs.email && inputs.phone && inputs.type && inputs.contact && inputs.website) {\n      dispatch(fundingSourceActions.createFundingSource(data));\n    } else {\n      setError(!inputs.name ? 'name' : !inputs.email ? 'email' : !inputs.phone ? 'phone' : !inputs.type ? 'type' : !inputs.contact ? 'contact' : !inputs.website ? 'website' : 'Input is not field');\n    }\n  };\n\n  const list = [{\n    name: 'first'\n  }, {\n    name: 'second'\n  }];\n  console.log(error, '9999999');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.createFoundingSource,\n    children: [/*#__PURE__*/_jsxDEV(CreateFoundingSourceHeader, {\n      handleClose: handleClose,\n      title: 'Add Funding Source'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.createFoundingSourceBody,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"space-between\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: 400\n          },\n          children: [/*#__PURE__*/_jsxDEV(ValidationInput, {\n            variant: \"outlined\",\n            sendBoolean: handleCheck,\n            onChange: handleChange,\n            value: inputs.name,\n            type: \"text\",\n            label: \"Funding Source Name*\",\n            name: \"name\",\n            typeError: error === 'name' && ErrorText.field\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ValidationInput // style={globalInputs.simpleInput}\n          , {\n            validator: EmailValidator,\n            variant: \"outlined\",\n            name: \"email\",\n            type: \"email\",\n            label: \"Email Address*\",\n            typeError: error === 'email' ? ErrorText.field : error === 'Not valid email' ? 'Not valid email' : '',\n            sendBoolean: handleCheck,\n            value: inputs.email,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ValidationInput, {\n            sendBoolean: handleCheck,\n            onChange: handleChange,\n            value: inputs.phone,\n            variant: \"outlined\",\n            type: \"number\",\n            label: \"Phone Number*\",\n            name: 'phone',\n            typeError: error === 'phone' && ErrorText.field\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(SelectInput // style={globalInputs.simpleInput}\n          , {\n            name: \"type\",\n            label: \"Type*\",\n            handleSelect: handleChange,\n            sendBoolean: handleCheck,\n            value: inputs.type,\n            list: list,\n            typeError: error === 'type' ? ErrorText.field : '' // type={'id'}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ValidationInput, {\n            sendBoolean: handleCheck,\n            onChange: handleChange,\n            value: inputs.contract,\n            variant: \"outlined\",\n            type: \"text\",\n            label: \"Contact Person\",\n            name: 'contract',\n            typeError: error === 'contract' && ErrorText.field\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ValidationInput, {\n            sendBoolean: handleCheck,\n            onChange: handleChange,\n            value: inputs.website,\n            variant: \"outlined\",\n            type: \"text\",\n            label: \"Website\",\n            name: 'website',\n            typeError: error === 'website' && ErrorText.field\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: 400\n          },\n          children: /*#__PURE__*/_jsxDEV(AddressInput, {\n            Value: \"Street Address*\",\n            flex: \"block\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: 'space-between'\n        },\n        children: /*#__PURE__*/_jsxDEV(CreateChancel // classes={globalInputs.buttonsStyle}\n        , {\n          create: \"Add\",\n          chancel: \"Cancel\",\n          onCreate: handleCreate,\n          onClose: handleClose,\n          buttonWidth: \"400px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CreateFundingSource, \"vk7BugkgWeLxreSKkLlJwO0YNNQ=\", false, function () {\n  return [useDispatch];\n});\n\n_c = CreateFundingSource;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateFundingSource\");","map":{"version":3,"sources":["/Users/eachbase5/Desktop/untitled folder/wellnessDaisy/client/src/fragments/fundingSource/createFundingSource/core/createFundingSource.js"],"names":["AddressInput","ValidationInput","SelectInput","CreateChancel","React","useState","useDispatch","CreateFoundingSourceHeader","FoundingSourceHeader","createFoundingSourceStyle","EmailValidator","ErrorText","fundingSourceActions","CreateFundingSource","handleClose","error","setError","inputs","setInputs","classes","dispatch","handleCheck","bool","handleChange","e","prevState","target","name","value","handleCreate","data","email","phone","type","contact","website","createFundingSource","list","console","log","createFoundingSource","createFoundingSourceBody","display","justifyContent","width","field","contract"],"mappings":"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","sourcesContent":["import { AddressInput, ValidationInput, SelectInput,  CreateChancel } from \"@eachbase/components\";\nimport React, { useState, useDispatch } from \"react\";\nimport {CreateFoundingSourceHeader, FoundingSourceHeader} from \"./createFoundingSourceHeader\";\nimport { createFoundingSourceStyle } from \"./styles\";\nimport { EmailValidator, ErrorText } from \"@eachbase/utils\";\nimport {fundingSourceActions} from \"../../../../store\";\n// import SelectInput from \"@material-ui/core/Select/SelectInput\";\n\nexport const CreateFundingSource = ({ handleClose }) => {\n    const [error, setError] = useState(\"\");\n    const [inputs, setInputs] = useState({});\n\n\n    const classes = createFoundingSourceStyle()\n    const dispatch = useDispatch()\n    const handleCheck = (bool) => {\n        if (bool === true) {\n            setError(\"Not valid email\");\n        } else {\n            setError(\"\");\n        }\n    };\n\n    const handleChange = e => setInputs(\n        prevState => ({ ...prevState, [e.target.name]: e.target.value }),\n        error === e.target.name && setError(''),\n    );\n\n\n    const handleCreate = () => {\n        const data = {\n            \"name\": inputs.name,\n            \"email\": inputs.email,\n            \"phoneNumber\": inputs.phone,\n            'type' : inputs.type,\n            'contact' : inputs.contact,\n            'website' : inputs.website,\n            \"address\": 'armenia yerevan',\n            \"status\": \"INACTIVE\"\n            // fullAddress\n        }\n        if (inputs.name && inputs.email && inputs.phone && inputs.type && inputs.contact && inputs.website) {\n            dispatch(fundingSourceActions.createFundingSource(data))\n        }\n        else {\n            setError(\n                !inputs.name ? 'name' :\n                    !inputs.email ? 'email' :\n                        !inputs.phone ? 'phone' :\n                        !inputs.type ? 'type' :\n                        !inputs.contact ? 'contact' :\n                        !inputs.website ? 'website' :\n                            'Input is not field'\n\n            )\n        }\n    }\n\n    const list = [\n        { name: 'first' },\n        { name: 'second' }\n    ]\n\n    console.log(error, '9999999');\n    return (\n        <div className={classes.createFoundingSource}>\n            <CreateFoundingSourceHeader handleClose={handleClose} title={'Add Funding Source'} />\n            <div className={classes.createFoundingSourceBody}>\n                <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                    <div style={{ width: 400 }}>\n                        <ValidationInput variant={\"outlined\"}\n                            sendBoolean={handleCheck}\n                            onChange={handleChange}\n                            value={inputs.name}\n                            type={\"text\"}\n                            label={\"Funding Source Name*\"}\n                            name='name'\n                            typeError={error === 'name' && ErrorText.field}\n                        />\n                        <ValidationInput\n                            // style={globalInputs.simpleInput}\n                            validator={EmailValidator}\n                            variant={\"outlined\"}\n                            name={\"email\"}\n                            type={\"email\"}\n                            label={\"Email Address*\"}\n                            typeError={error === 'email' ? ErrorText.field : error === 'Not valid email' ? 'Not valid email' : ''}\n                            sendBoolean={handleCheck}\n                            value={inputs.email}\n                            onChange={handleChange}\n                        />\n                        <ValidationInput\n                            sendBoolean={handleCheck}\n                            onChange={handleChange}\n                            value={inputs.phone}\n                            variant={\"outlined\"}\n                            type={\"number\"}\n                            label={\"Phone Number*\"}\n                            name={'phone'}\n                            typeError={error === 'phone' && ErrorText.field}\n                        />\n                        <SelectInput\n                            // style={globalInputs.simpleInput}\n                            name={\"type\"}\n                            label={\"Type*\"}\n                            handleSelect={handleChange}\n                            sendBoolean={handleCheck}\n                            value={inputs.type}\n                            list={list}\n                            typeError={error === 'type' ? ErrorText.field : ''}\n                        // type={'id'}\n                        />\n                        <ValidationInput\n                            sendBoolean={handleCheck}\n                            onChange={handleChange}\n                            value={inputs.contract}\n                            variant={\"outlined\"}\n                            type={\"text\"}\n                            label={\"Contact Person\"}\n                            name={'contract'}\n                            typeError={error === 'contract' && ErrorText.field}\n                        />\n                        <ValidationInput\n                            sendBoolean={handleCheck}\n                            onChange={handleChange}\n                            value={inputs.website}\n                            variant={\"outlined\"}\n                            type={\"text\"}\n                            label={\"Website\"}\n                            name={'website'}\n                            typeError={error === 'website' && ErrorText.field}\n                        />\n\n                    </div>\n                    <div style={{ width: 400 }}>\n                        <AddressInput Value='Street Address*' flex='block' />\n                    </div>\n                </div>\n                <div style={{ display: \"flex\", justifyContent: 'space-between' }}>\n\n                    {/* <button onClick={handleCreate}>click</button> */}\n                    {/* <button onClick={handleCreate}>click</button> */}\n                    {/* <AddModalButton handleClick={handleCreate} text={'Add'} styles={{width: '400px'}} /> */}\n                    <CreateChancel\n                        // classes={globalInputs.buttonsStyle}\n                        create={\"Add\"}\n                        chancel={\"Cancel\"}\n                        onCreate={handleCreate}\n                        onClose={handleClose}\n                        buttonWidth='400px'\n                    />\n                </div>\n            </div>\n\n        </div>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}