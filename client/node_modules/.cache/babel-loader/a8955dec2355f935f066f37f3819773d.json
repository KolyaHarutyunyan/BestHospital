{"ast":null,"code":"import { call, put, take, takeLatest } from \"redux-saga/effects\";\nimport { authService } from \"./offices.service\";\nimport { CREATE_OFFICE, GET_OFFICE_BY_ID, GET_OFFICE_BY_ID_SUCCESS, GET_OFFICES, GET_OFFICES_SUCCESS, EDIT_OFFICE, ACTIVATE_OFFICE, INACTIVATE_OFFICE } from \"./offices.types\";\nimport { httpRequestsOnErrorsActions } from \"../http_requests_on_errors\";\nimport { httpRequestsOnLoadActions } from \"../http_requests_on_load\";\n\nfunction* createOffice(action) {\n  try {\n    const res = yield call(authService.createOfficeService, action.payload.body);\n    window.location.replace('/fundingSource');\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nfunction* editOffice(action) {\n  try {\n    const res = yield call(authService.editOfficeService, action.payload.body);\n    window.location.replace('/fundingSource');\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nfunction* getOffice({\n  action,\n  type\n}) {\n  // yield put(httpRequestsOnErrorsActions.removeError(type));\n  // yield put(httpRequestsOnLoadActions.appendLoading(type));\n  try {\n    const res = yield call(authService.getOfficesService);\n    yield put({\n      type: GET_OFFICES_SUCCESS,\n      payload: res.data\n    }); // yield put(httpRequestsOnLoadActions.removeLoading(type));\n    // yield put(httpRequestsOnErrorsActions.removeError(type));\n  } catch (err) {\n    // yield put(httpRequestsOnLoadActions.removeLoading(type));\n    // yield put(httpRequestsOnErrorsActions.removeError(type));\n    console.log(err);\n  }\n}\n\nfunction* getOfficeById(action) {\n  try {\n    const res = yield call(authService.getOfficeByIdService, action.payload.id);\n    yield put({\n      type: GET_OFFICE_BY_ID_SUCCESS,\n      payload: res.data\n    });\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nfunction* activateOffice(action) {\n  try {\n    const res = yield call(authService.activateOfficeService, action.payload.id);\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nfunction* inactivateOffice(action) {\n  try {\n    const res = yield call(authService.inactivateOfficeService, action.payload.id);\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nexport const watchOffice = function* watchOfficeSaga() {\n  yield takeLatest(CREATE_OFFICE, createOffice);\n  yield takeLatest(EDIT_OFFICE, editOffice);\n  yield takeLatest(GET_OFFICES, getOffice);\n  yield takeLatest(GET_OFFICE_BY_ID, getOfficeById);\n  yield takeLatest(ACTIVATE_OFFICE, activateOffice);\n  yield takeLatest(INACTIVATE_OFFICE, inactivateOffice);\n};","map":{"version":3,"sources":["/Users/eachbase5/Desktop/untitled folder/wellnessDaisy/client/src/store/offices/offices.saga.js"],"names":["call","put","take","takeLatest","authService","CREATE_OFFICE","GET_OFFICE_BY_ID","GET_OFFICE_BY_ID_SUCCESS","GET_OFFICES","GET_OFFICES_SUCCESS","EDIT_OFFICE","ACTIVATE_OFFICE","INACTIVATE_OFFICE","httpRequestsOnErrorsActions","httpRequestsOnLoadActions","createOffice","action","res","createOfficeService","payload","body","window","location","replace","err","console","log","editOffice","editOfficeService","getOffice","type","getOfficesService","data","getOfficeById","getOfficeByIdService","id","activateOffice","activateOfficeService","inactivateOffice","inactivateOfficeService","watchOffice","watchOfficeSaga"],"mappings":"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","sourcesContent":["import { call, put, take, takeLatest } from \"redux-saga/effects\";\nimport { authService } from \"./offices.service\";\nimport {\n  CREATE_OFFICE,\n  GET_OFFICE_BY_ID,\n  GET_OFFICE_BY_ID_SUCCESS,\n  GET_OFFICES,\n  GET_OFFICES_SUCCESS,\n  EDIT_OFFICE,\n  ACTIVATE_OFFICE,\n  INACTIVATE_OFFICE,\n} from \"./offices.types\";\nimport {httpRequestsOnErrorsActions} from \"../http_requests_on_errors\";\nimport {httpRequestsOnLoadActions} from \"../http_requests_on_load\";\n\nfunction* createOffice(action) {\n  try {\n    const res = yield call( authService.createOfficeService, action.payload.body );\n    window.location.replace('/fundingSource')\n  } catch (err) {\n    console.log(err)\n  }\n}\n\n\nfunction* editOffice(action) {\n  try {\n    const res = yield call( authService.editOfficeService, action.payload.body );\n    window.location.replace('/fundingSource')\n  } catch (err) {\n    console.log(err)\n  }\n}\n\nfunction* getOffice({ action,type }) {\n\n  // yield put(httpRequestsOnErrorsActions.removeError(type));\n  // yield put(httpRequestsOnLoadActions.appendLoading(type));\n  try {\n    const res = yield call( authService.getOfficesService );\n    yield put({\n      type: GET_OFFICES_SUCCESS,\n      payload: res.data,\n    });\n    // yield put(httpRequestsOnLoadActions.removeLoading(type));\n    // yield put(httpRequestsOnErrorsActions.removeError(type));\n\n  } catch (err) {\n    // yield put(httpRequestsOnLoadActions.removeLoading(type));\n    // yield put(httpRequestsOnErrorsActions.removeError(type));\n    console.log(err)\n  }\n}\n\nfunction* getOfficeById(action) {\n  try {\n    const res = yield call( authService.getOfficeByIdService, action.payload.id );\n    yield put({\n      type: GET_OFFICE_BY_ID_SUCCESS,\n      payload: res.data,\n    });\n\n  } catch (err) {\n    console.log(err)\n  }\n}\n\nfunction* activateOffice(action) {\n  try {\n    const res = yield call( authService.activateOfficeService, action.payload.id );\n  } catch (err) {\n    console.log(err)\n  }\n}\n\nfunction* inactivateOffice(action) {\n  try {\n    const res = yield call( authService.inactivateOfficeService, action.payload.id );\n  } catch (err) {\n    console.log(err)\n  }\n}\n\n\n\nexport const watchOffice = function* watchOfficeSaga() {\n  yield takeLatest( CREATE_OFFICE, createOffice );\n  yield takeLatest( EDIT_OFFICE, editOffice );\n  yield takeLatest( GET_OFFICES, getOffice );\n  yield takeLatest( GET_OFFICE_BY_ID, getOfficeById );\n\n  yield takeLatest( ACTIVATE_OFFICE, activateOffice)\n  yield takeLatest( INACTIVATE_OFFICE, inactivateOffice)\n};\n"]},"metadata":{},"sourceType":"module"}