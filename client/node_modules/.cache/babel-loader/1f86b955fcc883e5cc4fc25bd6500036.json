{"ast":null,"code":"import { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport { Colors, Backgrounds } from \"@eachbase/utils\";\nimport StepConnector from \"@material-ui/core/StepConnector\";\nexport const stepStyles = makeStyles(() => ({\n  stepHeader: {\n    background: Backgrounds.headerLightBlue\n  },\n  stepBody: {\n    padding: '32px 40px 40px 40px'\n  },\n  buttonsContainer: {\n    marginTop: '6px'\n  }\n}));\nexport const useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%'\n  },\n  button: {\n    marginRight: theme.spacing(1)\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  },\n  step_label_root: {\n    fontSize: '16px',\n    color: `${Colors.TextSecondary}!important`,\n    lineHeight: '22px!important',\n    fontWeight: '600!important'\n  }\n}));\nexport const useColorlibStepIconStyles = makeStyles({\n  root: {\n    backgroundColor: '#ccc',\n    zIndex: 1,\n    color: '#fff',\n    width: 36,\n    height: 36,\n    display: 'flex',\n    borderRadius: '50%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    position: 'relative',\n    '&::after': {\n      content: `''`,\n      position: 'absolute',\n      left: '1px',\n      top: '1px',\n      width: '34px',\n      height: '34px',\n      backgroundColor: 'transparent',\n      borderRadius: '50%',\n      border: '1px solid white'\n    }\n  },\n  active: {\n    backgroundColor: '#347AF0'\n  },\n  completed: {\n    backgroundColor: '#347AF0'\n  }\n});\nexport const ColorlibConnector = withStyles({\n  alternativeLabel: {\n    top: 22,\n    left: 'calc(-50% + 38px)',\n    right: 'calc(50% + 38px)'\n  },\n  line: {\n    border: `1px dashed ${Colors.TextLight}`,\n    borderRadius: 'unset'\n  }\n})(StepConnector);","map":{"version":3,"sources":["/Users/eachbase5/Desktop/untitled folder/wellnessDaisy/client/src/components/steps/styles.js"],"names":["makeStyles","withStyles","Colors","Backgrounds","StepConnector","stepStyles","stepHeader","background","headerLightBlue","stepBody","padding","buttonsContainer","marginTop","useStyles","theme","root","width","button","marginRight","spacing","instructions","marginBottom","step_label_root","fontSize","color","TextSecondary","lineHeight","fontWeight","useColorlibStepIconStyles","backgroundColor","zIndex","height","display","borderRadius","justifyContent","alignItems","position","content","left","top","border","active","completed","ColorlibConnector","alternativeLabel","right","line","TextLight"],"mappings":"AAAA,SAAQA,UAAR,EAAoBC,UAApB,QAAqC,0BAArC;AACA,SAAQC,MAAR,EAAeC,WAAf,QAAiC,iBAAjC;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AAEA,OAAO,MAAMC,UAAU,GAAGL,UAAU,CAAC,OAAO;AACxCM,EAAAA,UAAU,EAAE;AACRC,IAAAA,UAAU,EAAEJ,WAAW,CAACK;AADhB,GAD4B;AAIxCC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,OAAO,EAAE;AADH,GAJ8B;AAOxCC,EAAAA,gBAAgB,EAAE;AACdC,IAAAA,SAAS,EAAE;AADG;AAPsB,CAAP,CAAD,CAA7B;AAYP,OAAO,MAAMC,SAAS,GAAGb,UAAU,CAAEc,KAAD,KAAY;AAC5CC,EAAAA,IAAI,EAAE;AACFC,IAAAA,KAAK,EAAE;AADL,GADsC;AAI5CC,EAAAA,MAAM,EAAE;AACJC,IAAAA,WAAW,EAAEJ,KAAK,CAACK,OAAN,CAAc,CAAd;AADT,GAJoC;AAO5CC,EAAAA,YAAY,EAAE;AACVR,IAAAA,SAAS,EAAEE,KAAK,CAACK,OAAN,CAAc,CAAd,CADD;AAEVE,IAAAA,YAAY,EAAEP,KAAK,CAACK,OAAN,CAAc,CAAd;AAFJ,GAP8B;AAW5CG,EAAAA,eAAe,EAAE;AACbC,IAAAA,QAAQ,EAAE,MADG;AAEbC,IAAAA,KAAK,EAAG,GAAEtB,MAAM,CAACuB,aAAc,YAFlB;AAGbC,IAAAA,UAAU,EAAE,gBAHC;AAIbC,IAAAA,UAAU,EAAE;AAJC;AAX2B,CAAZ,CAAD,CAA5B;AAmBP,OAAO,MAAMC,yBAAyB,GAAG5B,UAAU,CAAC;AAChDe,EAAAA,IAAI,EAAE;AACFc,IAAAA,eAAe,EAAE,MADf;AAEFC,IAAAA,MAAM,EAAE,CAFN;AAGFN,IAAAA,KAAK,EAAE,MAHL;AAIFR,IAAAA,KAAK,EAAE,EAJL;AAKFe,IAAAA,MAAM,EAAE,EALN;AAMFC,IAAAA,OAAO,EAAE,MANP;AAOFC,IAAAA,YAAY,EAAE,KAPZ;AAQFC,IAAAA,cAAc,EAAE,QARd;AASFC,IAAAA,UAAU,EAAE,QATV;AAUFC,IAAAA,QAAQ,EAAE,UAVR;AAWF,gBAAY;AACRC,MAAAA,OAAO,EAAG,IADF;AAERD,MAAAA,QAAQ,EAAE,UAFF;AAGRE,MAAAA,IAAI,EAAE,KAHE;AAIRC,MAAAA,GAAG,EAAE,KAJG;AAKRvB,MAAAA,KAAK,EAAE,MALC;AAMRe,MAAAA,MAAM,EAAE,MANA;AAORF,MAAAA,eAAe,EAAE,aAPT;AAQRI,MAAAA,YAAY,EAAE,KARN;AASRO,MAAAA,MAAM,EAAE;AATA;AAXV,GAD0C;AAwBhDC,EAAAA,MAAM,EAAE;AACJZ,IAAAA,eAAe,EAAE;AADb,GAxBwC;AA2BhDa,EAAAA,SAAS,EAAE;AACPb,IAAAA,eAAe,EAAE;AADV;AA3BqC,CAAD,CAA5C;AAgCP,OAAO,MAAMc,iBAAiB,GAAG1C,UAAU,CAAC;AACxC2C,EAAAA,gBAAgB,EAAE;AACdL,IAAAA,GAAG,EAAE,EADS;AAEdD,IAAAA,IAAI,EAAE,mBAFQ;AAGdO,IAAAA,KAAK,EAAE;AAHO,GADsB;AAOxCC,EAAAA,IAAI,EAAE;AACFN,IAAAA,MAAM,EAAG,cAAatC,MAAM,CAAC6C,SAAU,EADrC;AAEFd,IAAAA,YAAY,EAAE;AAFZ;AAPkC,CAAD,CAAV,CAW9B7B,aAX8B,CAA1B","sourcesContent":["import {makeStyles, withStyles} from \"@material-ui/core/styles\";\nimport {Colors,Backgrounds} from \"@eachbase/utils\";\nimport StepConnector from \"@material-ui/core/StepConnector\";\n\nexport const stepStyles = makeStyles(() => ({\n    stepHeader: {\n        background: Backgrounds.headerLightBlue,\n    },\n    stepBody: {\n        padding: '32px 40px 40px 40px'\n    },\n    buttonsContainer: {\n        marginTop: '6px'\n    }\n}));\n\nexport const useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    button: {\n        marginRight: theme.spacing(1),\n    },\n    instructions: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n    },\n    step_label_root: {\n        fontSize: '16px',\n        color: `${Colors.TextSecondary}!important`,\n        lineHeight: '22px!important',\n        fontWeight: '600!important',\n    }\n}));\n\nexport const useColorlibStepIconStyles = makeStyles({\n    root: {\n        backgroundColor: '#ccc',\n        zIndex: 1,\n        color: '#fff',\n        width: 36,\n        height: 36,\n        display: 'flex',\n        borderRadius: '50%',\n        justifyContent: 'center',\n        alignItems: 'center',\n        position: 'relative',\n        '&::after': {\n            content: `''`,\n            position: 'absolute',\n            left: '1px',\n            top: '1px',\n            width: '34px',\n            height: '34px',\n            backgroundColor: 'transparent',\n            borderRadius: '50%',\n            border: '1px solid white'\n        }\n    },\n    active: {\n        backgroundColor: '#347AF0'\n    },\n    completed: {\n        backgroundColor: '#347AF0',\n    }\n});\n\nexport const ColorlibConnector = withStyles({\n    alternativeLabel: {\n        top: 22,\n        left: 'calc(-50% + 38px)',\n        right: 'calc(50% + 38px)'\n    },\n\n    line: {\n        border: `1px dashed ${Colors.TextLight}`,\n        borderRadius: 'unset',\n    }\n})(StepConnector);\n\n"]},"metadata":{},"sourceType":"module"}