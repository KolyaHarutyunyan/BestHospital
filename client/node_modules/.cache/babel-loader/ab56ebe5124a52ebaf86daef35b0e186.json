{"ast":null,"code":"import axios from 'axios';\nimport { API_BASE } from '@eachbase/store';\nexport const initAxiosInterceptors = () => {\n  axios.interceptors.request.use(config => {\n    // config.url = `https://polotms.eachbase.com/api${config.url}`;\n    config.url = `http://localhost:8200/api${config.url}`;\n\n    if (config.auth) {\n      const token = localStorage.getItem('access-token');\n\n      if (!token) {\n        window.location.replace('/'); // router.push('/');\n\n        throw new Error('token not found');\n      }\n\n      config.headers = { ...config.headers,\n        'access-token': `${token}`\n      };\n    }\n\n    return config;\n  });\n  axios.interceptors.response.use(response => response, error => {\n    if (error.response.status === 401) {\n      localStorage.removeItem('access-token');\n      window.location.replace('/'); // router.push('/');\n    }\n\n    throw new Object({\n      data: error.response.data,\n      status: error.response.status\n    });\n  });\n};","map":{"version":3,"sources":["/Users/eachbase5/Desktop/untitled folder/wellnessDaisy/client/src/utils/hooks/axios.js"],"names":["axios","API_BASE","initAxiosInterceptors","interceptors","request","use","config","url","auth","token","localStorage","getItem","window","location","replace","Error","headers","response","error","status","removeItem","Object","data"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,QAAT,QAAyB,iBAAzB;AAEA,OAAO,MAAMC,qBAAqB,GAAG,MAAM;AACvCF,EAAAA,KAAK,CAACG,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CAAgCC,MAAD,IAAY;AACxC;AACCA,IAAAA,MAAM,CAACC,GAAP,GAAc,4BAA2BD,MAAM,CAACC,GAAI,EAApD;;AACA,QAAID,MAAM,CAACE,IAAX,EAAiB;AACb,YAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAd;;AACA,UAAI,CAACF,KAAL,EAAY;AACRG,QAAAA,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwB,GAAxB,EADQ,CAER;;AACA,cAAM,IAAIC,KAAJ,CAAU,iBAAV,CAAN;AACH;;AACDT,MAAAA,MAAM,CAACU,OAAP,GAAiB,EACb,GAAGV,MAAM,CAACU,OADG;AAEb,wBAAiB,GAAEP,KAAM;AAFZ,OAAjB;AAIH;;AACD,WAAOH,MAAP;AACH,GAhBD;AAkBAN,EAAAA,KAAK,CAACG,YAAN,CAAmBc,QAAnB,CAA4BZ,GAA5B,CACKY,QAAD,IAAcA,QADlB,EAEKC,KAAD,IAAW;AACP,QAAIA,KAAK,CAACD,QAAN,CAAeE,MAAf,KAA0B,GAA9B,EAAmC;AAC/BT,MAAAA,YAAY,CAACU,UAAb,CAAwB,cAAxB;AACAR,MAAAA,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwB,GAAxB,EAF+B,CAG/B;AACH;;AACD,UAAM,IAAIO,MAAJ,CAAW;AACbC,MAAAA,IAAI,EAAEJ,KAAK,CAACD,QAAN,CAAeK,IADR;AAEbH,MAAAA,MAAM,EAAED,KAAK,CAACD,QAAN,CAAeE;AAFV,KAAX,CAAN;AAIH,GAZL;AAcH,CAjCM","sourcesContent":["import axios from 'axios';\n\nimport { API_BASE } from '@eachbase/store';\n\nexport const initAxiosInterceptors = () => {\n    axios.interceptors.request.use((config) => {\n       // config.url = `https://polotms.eachbase.com/api${config.url}`;\n        config.url = `http://localhost:8200/api${config.url}`;\n        if (config.auth) {\n            const token = localStorage.getItem('access-token');\n            if (!token) {\n                window.location.replace('/')\n                // router.push('/');\n                throw new Error('token not found');\n            }\n            config.headers = {\n                ...config.headers,\n                'access-token': `${token}`,\n            };\n        }\n        return config;\n    });\n\n    axios.interceptors.response.use(\n        (response) => response,\n        (error) => {\n            if (error.response.status === 401) {\n                localStorage.removeItem('access-token');\n                window.location.replace('/')\n                // router.push('/');\n            }\n            throw new Object({\n                data: error.response.data,\n                status: error.response.status,\n            });\n        }\n    );\n};\n"]},"metadata":{},"sourceType":"module"}