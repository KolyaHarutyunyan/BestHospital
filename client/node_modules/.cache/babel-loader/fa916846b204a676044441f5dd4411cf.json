{"ast":null,"code":"var _jsxFileName = \"/Users/eachbase5/Desktop/untitled folder/wellnessDaisy/client/src/fragments/login/core/loginModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { authActions } from \"@eachbase/store\";\nimport { loginFragments } from \"./style\";\nimport { ErrMessage, PasswordInput, ValidationInput, SignIn } from \"@eachbase/components\";\nimport { EmailValidator } from \"@eachbase/utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const LoginModal = ({\n  handleForgot\n}) => {\n  _s();\n\n  const classes = loginFragments();\n  const dispatch = useDispatch();\n  const [login, setLogin] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(null);\n  const [validEmail, setValidEmail] = useState(false);\n  const {\n    loginErr,\n    loader\n  } = useSelector(state => ({\n    loginErr: state.auth.loginErr,\n    loader: state.auth.loader\n  }));\n\n  const logInRequest = () => {\n    const user = {\n      email: login,\n      password\n    };\n\n    if (validEmail === false && login && login !== \"Not valid email\" && password && password !== \"notMath\") {\n      dispatch(authActions.logIn(user));\n    } else {\n      if (!login) {\n        setError(\"notMathLogin\");\n      }\n\n      if (!password) {\n        setError(\"notMathPassword\");\n      }\n    }\n  };\n\n  const handleChange = ev => {\n    let {\n      name,\n      value\n    } = ev.target;\n    setError(null);\n\n    if (name === \"email\") {\n      setLogin(value);\n      dispatch(authActions.clearError());\n    } else if (name === \"password\") {\n      setPassword(value);\n      dispatch(authActions.clearError());\n    }\n  };\n\n  const handleCheck = bool => {\n    if (bool === true) {\n      setValidEmail(\"Not valid email\");\n    } else {\n      setValidEmail(false);\n    }\n  };\n\n  const NotMathEmail = loginErr === \"User with this email was not found\" ? \"User with this email was not found\" : error === \"notMathLogin\" ? \"Input is not field\" : validEmail === \"Not valid email\" ? \"Not valid email\" : \"\";\n  const NotMathPassword = loginErr === \"user password does not match\" ? \"User password does not match\" : error === \"notMathPassword\" ? \"Input is not field\" : \"\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.LoginModalWrapper,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Sign in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ValidationInput, {\n      validator: EmailValidator,\n      value: login,\n      onChange: handleChange,\n      sendBoolean: handleCheck,\n      typeError: NotMathEmail,\n      name: \"email\",\n      type: \"email\",\n      label: \"Email\",\n      id: \"email\",\n      autoComplete: \"current-email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PasswordInput, {\n      handleChangePassword: handleChange,\n      type: \"password\",\n      name: \"password\",\n      disabled: false,\n      value: password,\n      onChange: handleChange,\n      typeError: NotMathPassword,\n      placeholder: \"Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.LoginModalButtons,\n      children: [/*#__PURE__*/_jsxDEV(SignIn, {\n        loader: loader,\n        handleClick: logInRequest,\n        width: \"200px\",\n        text: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleForgot,\n        className: classes.LoginModalForgot,\n        children: [\" \", \"Forgot Password?\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginModal, \"RKINaZcDSPEyQyeBWfnm148w1JQ=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = LoginModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginModal\");","map":{"version":3,"sources":["/Users/eachbase5/Desktop/untitled folder/wellnessDaisy/client/src/fragments/login/core/loginModal.js"],"names":["React","useState","useDispatch","useSelector","authActions","loginFragments","ErrMessage","PasswordInput","ValidationInput","SignIn","EmailValidator","LoginModal","handleForgot","classes","dispatch","login","setLogin","password","setPassword","error","setError","validEmail","setValidEmail","loginErr","loader","state","auth","logInRequest","user","email","logIn","handleChange","ev","name","value","target","clearError","handleCheck","bool","NotMathEmail","NotMathPassword","LoginModalWrapper","LoginModalButtons","LoginModalForgot"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { authActions } from \"@eachbase/store\";\nimport { loginFragments } from \"./style\";\nimport {\n  ErrMessage,\n  PasswordInput,\n  ValidationInput,\n  SignIn,\n} from \"@eachbase/components\";\nimport { EmailValidator } from \"@eachbase/utils\";\n\nexport const LoginModal = ({ handleForgot }) => {\n  const classes = loginFragments();\n  const dispatch = useDispatch();\n  const [login, setLogin] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(null);\n  const [validEmail, setValidEmail] = useState(false);\n\n  const { loginErr, loader } = useSelector((state) => ({\n    loginErr: state.auth.loginErr,\n    loader: state.auth.loader,\n  }));\n\n  const logInRequest = () => {\n    const user = { email: login, password };\n    if (\n      validEmail === false &&\n      login &&\n      login !== \"Not valid email\" &&\n      password &&\n      password !== \"notMath\"\n    ) {\n      dispatch(authActions.logIn(user));\n    } else {\n      if (!login) {\n        setError(\"notMathLogin\");\n      }\n      if (!password) {\n        setError(\"notMathPassword\");\n      }\n    }\n  };\n\n  const handleChange = (ev) => {\n    let { name, value } = ev.target;\n    setError(null);\n\n    if (name === \"email\") {\n      setLogin(value);\n      dispatch(authActions.clearError());\n    } else if (name === \"password\") {\n      setPassword(value);\n      dispatch(authActions.clearError());\n    }\n  };\n\n  const handleCheck = (bool) => {\n    if (bool === true) {\n      setValidEmail(\"Not valid email\");\n    } else {\n      setValidEmail(false);\n    }\n  };\n\n  const NotMathEmail =\n    loginErr === \"User with this email was not found\"\n      ? \"User with this email was not found\"\n      : error === \"notMathLogin\"\n      ? \"Input is not field\"\n      : validEmail === \"Not valid email\"\n      ? \"Not valid email\"\n      : \"\";\n\n  const NotMathPassword =\n    loginErr === \"user password does not match\"\n      ? \"User password does not match\"\n      : error === \"notMathPassword\"\n      ? \"Input is not field\"\n      : \"\";\n\n  return (\n    <div className={classes.LoginModalWrapper}>\n      <p>Sign in</p>\n\n      <ValidationInput\n        validator={EmailValidator}\n        value={login}\n        onChange={handleChange}\n        sendBoolean={handleCheck}\n        typeError={NotMathEmail}\n        name={\"email\"}\n        type={\"email\"}\n        label={\"Email\"}\n        id={\"email\"}\n        autoComplete={\"current-email\"}\n      />\n\n      <PasswordInput\n        handleChangePassword={handleChange}\n        type={\"password\"}\n        name={\"password\"}\n        disabled={false}\n        value={password}\n        onChange={handleChange}\n        typeError={NotMathPassword}\n        placeholder={\"Password\"}\n      />\n\n      {/*<ErrMessage*/}\n      {/*  type={'login'}*/}\n      {/*  text={ NotMathPassword ? NotMathPassword : NotMathEmail ? NotMathEmail : '' }*/}\n      {/*/>*/}\n      <div className={classes.LoginModalButtons}>\n        <SignIn\n          loader={loader}\n          handleClick={logInRequest}\n          width={\"200px\"}\n          text={\"Sign In\"}\n        />\n\n        <button onClick={handleForgot} className={classes.LoginModalForgot}>\n          {\" \"}\n          Forgot Password?\n        </button>\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}