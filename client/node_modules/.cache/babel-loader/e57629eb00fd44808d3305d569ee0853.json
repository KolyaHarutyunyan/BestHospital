{"ast":null,"code":"var _jsxFileName = \"/Users/eachbase5/Desktop/untitled folder/wellnessDaisy/client/src/fragments/authorities/createAuthorities/core/createAuthoritiesInputs.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { EmailValidator, useGlobalStyles, useGlobalText, createInputsWrapper, ErrorText } from \"@eachbase/utils\";\nimport { AddressInput, CreateChancel, ValidationInput } from \"@eachbase/components\";\nimport { useDispatch } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CreateAuthoritiesInputs = ({}) => {\n  _s();\n\n  const globalStyle = useGlobalText();\n  const globalInputs = useGlobalStyles();\n  const globalScreens = createInputsWrapper();\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [fullAddress, setFullAddress] = useState('');\n  const [error, setError] = useState('');\n  const [phone, setPhone] = useState('');\n  const [mcNumber, setMcNumber] = useState('');\n  const [inputs, setInputs] = useState({});\n\n  const handleChange = e => setInputs(prevState => ({ ...prevState,\n    [e.target.name]: e.target.value\n  }), error === e.target.name && setError(''));\n\n  const handleChangePhone = ev => {\n    if (ev.target.name === 'mcNumber') {\n      if (ev.target.value.length <= 5) {\n        setMcNumber(ev.target.value);\n        error === 'mcNumber' && setError('');\n      }\n    } else {\n      if (ev.target.value.length <= 11) {\n        setPhone(ev.target.value);\n        error === 'phone' && setError('');\n      }\n    }\n  };\n\n  const handleCreate = () => {\n    const data = {\n      \"name\": inputs.name,\n      \"mcNumber\": mcNumber,\n      \"phoneNumber\": phone,\n      \"address\": fullAddress\n    };\n\n    if (inputs.name && mcNumber && phone && fullAddress) {// dispatch(officeActions.createFundingSource(data))\n    } else {\n      setError(!inputs.name ? 'name' : !mcNumber ? 'mcNumber' : !phone ? 'phone' : 'Input is not field');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: globalScreens.createInputsWrapper,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: globalStyle.title,\n      children: \"MC Authority Information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: globalScreens.basicInfo,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: globalStyle.smallText,\n        children: \"Basic Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: globalScreens.basicInfoInputs,\n        children: [/*#__PURE__*/_jsxDEV(ValidationInput, {\n          style: globalInputs.simpleInput,\n          variant: \"outlined\",\n          name: \"name\",\n          type: \"text\",\n          label: \"Name*\",\n          typeError: error === 'name' ? ErrorText.field : '',\n          onChange: handleChange,\n          value: inputs.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ValidationInput, {\n          style: globalInputs.simpleInput,\n          variant: \"outlined\",\n          name: \"mcNumber\",\n          label: \"MC Number*\",\n          type: 'number',\n          typeError: error === 'mcNumber' ? ErrorText.field : '',\n          onChange: handleChangePhone,\n          value: mcNumber\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ValidationInput, {\n          style: globalInputs.simpleInput,\n          variant: \"outlined\",\n          name: \"phone\",\n          label: \"Phone Number*\",\n          type: 'number',\n          typeError: error === 'phone' ? ErrorText.field : '',\n          onChange: handleChangePhone,\n          value: phone\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: globalScreens.basicInfo,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: globalStyle.smallText,\n        children: \"Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: globalScreens.basicInfoInputs,\n        children: /*#__PURE__*/_jsxDEV(AddressInput, {\n          handleSelectValue: setFullAddress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error === 'Input is not field' ? error : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CreateChancel, {\n      classes: globalInputs.buttonsStyle,\n      create: \"Create\",\n      chancel: \"Cancel\",\n      onCreate: handleCreate,\n      onClose: () => history.push('/authorities')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CreateAuthoritiesInputs, \"jYSiCfqmlm9EfPyipMekBox1VH0=\", false, function () {\n  return [useGlobalText, useGlobalStyles, useDispatch, useHistory];\n});\n\n_c = CreateAuthoritiesInputs;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateAuthoritiesInputs\");","map":{"version":3,"sources":["/Users/eachbase5/Desktop/untitled folder/wellnessDaisy/client/src/fragments/authorities/createAuthorities/core/createAuthoritiesInputs.js"],"names":["React","useState","useHistory","EmailValidator","useGlobalStyles","useGlobalText","createInputsWrapper","ErrorText","AddressInput","CreateChancel","ValidationInput","useDispatch","CreateAuthoritiesInputs","globalStyle","globalInputs","globalScreens","dispatch","history","fullAddress","setFullAddress","error","setError","phone","setPhone","mcNumber","setMcNumber","inputs","setInputs","handleChange","e","prevState","target","name","value","handleChangePhone","ev","length","handleCreate","data","title","basicInfo","smallText","basicInfoInputs","simpleInput","field","buttonsStyle","push"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  EmailValidator,\n  useGlobalStyles,\n  useGlobalText,\n  createInputsWrapper, ErrorText,\n} from \"@eachbase/utils\";\nimport { AddressInput, CreateChancel, ValidationInput } from \"@eachbase/components\";\nimport { useDispatch } from \"react-redux\";\n\nexport const CreateAuthoritiesInputs = ({ }) => {\n  const globalStyle = useGlobalText();\n  const globalInputs = useGlobalStyles();\n  const globalScreens = createInputsWrapper()\n  const dispatch = useDispatch()\n  const history = useHistory();\n  const [fullAddress, setFullAddress] =useState('')\n  const [error, setError] =useState('')\n  const [phone, setPhone] =useState('')\n  const [mcNumber, setMcNumber] =useState('')\n  const [inputs, setInputs] = useState({});\n\n  const handleChange = e => setInputs(prevState =>\n      ({ ...prevState, [e.target.name]: e.target.value }),\n    error === e.target.name && setError('')\n  );\n\n  const handleChangePhone =(ev) =>{\n    if(ev.target.name === 'mcNumber'){\n      if (ev.target.value.length <= 5) {\n        setMcNumber(ev.target.value)\n        error === 'mcNumber' && setError('')\n      }\n    }else {\n      if (ev.target.value.length <= 11) {\n        setPhone(ev.target.value)\n        error === 'phone' && setError('')\n      }\n    }\n  }\n\n  const handleCreate =()=> {\n\n\n    const data ={\n      \"name\": inputs.name,\n      \"mcNumber\": mcNumber,\n      \"phoneNumber\": phone,\n      \"address\": fullAddress\n    }\n    if(inputs.name && mcNumber && phone && fullAddress){\n      // dispatch(officeActions.createFundingSource(data))\n    }\n    else{\n      setError(\n        !inputs.name ? 'name' :\n          !mcNumber ? 'mcNumber' :\n            !phone ? 'phone' :\n                'Input is not field'\n      )\n    }\n  }\n\n  return (\n    <div className={globalScreens.createInputsWrapper}>\n      <p className={globalStyle.title}>MC Authority Information</p>\n\n      <div className={globalScreens.basicInfo}>\n        <p className={globalStyle.smallText}>Basic Information</p>\n        <div className={globalScreens.basicInfoInputs}>\n\n          <ValidationInput\n            style={globalInputs.simpleInput}\n            variant={\"outlined\"}\n            name={\"name\"}\n            type={\"text\"}\n            label={\"Name*\"}\n            typeError={error === 'name' ? ErrorText.field : ''}\n            onChange={ handleChange }\n            value={ inputs.name }\n          />\n\n          <ValidationInput\n            style={globalInputs.simpleInput}\n            variant={\"outlined\"}\n            name={\"mcNumber\"}\n            label={\"MC Number*\"}\n            type={'number'}\n            typeError={ error === 'mcNumber' ? ErrorText.field : ''}\n            onChange={ handleChangePhone }\n            value={ mcNumber }\n          />\n\n          <ValidationInput\n            style={globalInputs.simpleInput}\n            variant={\"outlined\"}\n            name={\"phone\"}\n            label={\"Phone Number*\"}\n            type={'number'}\n            typeError={ error === 'phone' ? ErrorText.field : ''}\n            onChange={ handleChangePhone }\n            value={ phone }\n          />\n\n        </div>\n      </div>\n\n      <div className={globalScreens.basicInfo}>\n        <p className={globalStyle.smallText}>Address</p>\n\n        <div className={globalScreens.basicInfoInputs}>\n          <AddressInput\n            handleSelectValue={setFullAddress}\n          />\n        </div>\n\n      </div>\n      <p>{error === 'Input is not field' ? error : ''}</p>\n      <CreateChancel\n        classes={globalInputs.buttonsStyle}\n        create={\"Create\"}\n        chancel={\"Cancel\"}\n        onCreate={ handleCreate }\n        onClose={  () => history.push('/authorities')}\n      />\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}