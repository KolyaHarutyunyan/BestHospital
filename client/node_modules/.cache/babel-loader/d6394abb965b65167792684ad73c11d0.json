{"ast":null,"code":"import { call, put, takeLatest } from \"redux-saga/effects\";\nimport { authService } from \"./fundingSource.service\";\nimport { CREATE_FUNDING_SOURCE, GET_FUNDING_SOURCE, GET_FUNDING_SOURCE_BY_ID, GET_FUNDING_SOURCE_BY_ID_SUCCESS, GET_FUNDING_SOURCE_SUCCESS, GET_FUNDING_SOURCE_SERVICE_BY_ID, GET_FUNDING_SOURCE_HISTORIES_BY_ID, GET_FUNDING_SOURCE_HISTORIES_BY_ID_SUCCESS, GET_FUNDING_SOURCE_SERVICE_BY_ID_SUCCESS } from \"./fundingSource.types\";\nimport { httpRequestsOnErrorsActions } from \"../http_requests_on_errors\";\nimport { httpRequestsOnLoadActions } from \"../http_requests_on_load\";\n\nfunction* createFundingSource(action) {\n  try {\n    const res = yield call(authService.createFundingSourceService, action.payload.body);\n    window.location.replace('/fundingSource');\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nfunction* getFundingSource({\n  action,\n  type\n}) {\n  yield put(httpRequestsOnErrorsActions.removeError(type));\n  yield put(httpRequestsOnLoadActions.appendLoading(type));\n\n  try {\n    const res = yield call(authService.getFundingSourceService);\n    yield put({\n      type: GET_FUNDING_SOURCE_SUCCESS,\n      payload: res.data\n    });\n    yield put(httpRequestsOnLoadActions.removeLoading(type));\n    yield put(httpRequestsOnErrorsActions.removeError(type));\n  } catch (err) {\n    yield put(httpRequestsOnLoadActions.removeLoading(type));\n    yield put(httpRequestsOnErrorsActions.removeError(type));\n    console.log(err);\n  }\n}\n\nfunction* getFundingSourceById(action) {\n  // yield put(httpRequestsOnErrorsActions.removeError(type));\n  // yield put(httpRequestsOnLoadActions.appendLoading(type));\n  console.log(action.payload, 'saga');\n\n  try {\n    const res = yield call(authService.getFoundingSourceById, action.payload);\n    yield put({\n      type: GET_FUNDING_SOURCE_BY_ID_SUCCESS,\n      payload: res.data\n    }); // yield put(httpRequestsOnLoadActions.removeLoading(type));\n    // yield put(httpRequestsOnErrorsActions.removeError(type));\n  } catch (error) {\n    // yield put(httpRequestsOnLoadActions.removeLoading(type));\n    // yield put(httpRequestsOnErrorsActions.removeError(type));\n    console.log(error);\n  }\n}\n\nfunction* getFundingSourceServicesById(action) {\n  console.log('service'); // yield put(httpRequestsOnErrorsActions.removeError(type));\n  // yield put(httpRequestsOnLoadActions.appendLoading(type));\n\n  try {\n    const res = yield call(authService.getFoundingSourceServiceById, action.payload);\n    yield put({\n      type: GET_FUNDING_SOURCE_SERVICE_BY_ID_SUCCESS,\n      payload: res.data\n    }); // yield put(httpRequestsOnLoadActions.removeLoading(type));\n    // yield put(httpRequestsOnErrorsActions.removeError(type));\n  } catch (error) {// yield put(httpRequestsOnLoadActions.removeLoading(type));\n    // yield put(httpRequestsOnErrorsActions.removeError(type));\n  }\n}\n\nfunction* getFundingSourceHistoriesById(action) {\n  // yield put(httpRequestsOnErrorsActions.removeError(type));\n  // yield put(httpRequestsOnLoadActions.appendLoading(type));\n  try {\n    const res = yield call(authService.getFundingSourceHistoriesById, action.payload);\n    yield put({\n      type: GET_FUNDING_SOURCE_HISTORIES_BY_ID_SUCCESS,\n      payload: res.data\n    }); // yield put(httpRequestsOnLoadActions.removeLoading(type));\n    // yield put(httpRequestsOnErrorsActions.removeError(type));\n  } catch (error) {\n    // yield put(httpRequestsOnLoadActions.removeLoading(type));\n    // yield put(httpRequestsOnErrorsActions.removeError(type));\n    console.log(error);\n  }\n}\n\nexport const watchFundingSource = function* watchFundingSourceSaga() {\n  yield takeLatest(CREATE_FUNDING_SOURCE, createFundingSource);\n  yield takeLatest(GET_FUNDING_SOURCE, getFundingSource);\n  yield takeLatest(GET_FUNDING_SOURCE_BY_ID, getFundingSourceById);\n  yield takeLatest(GET_FUNDING_SOURCE_SERVICE_BY_ID, getFundingSourceServicesById);\n  yield takeLatest(GET_FUNDING_SOURCE_HISTORIES_BY_ID, getFundingSourceHistoriesById);\n};","map":{"version":3,"sources":["/Users/eachbase5/Desktop/untitled folder/wellnessDaisy/client/src/store/fundingSource/fundingSource.saga.js"],"names":["call","put","takeLatest","authService","CREATE_FUNDING_SOURCE","GET_FUNDING_SOURCE","GET_FUNDING_SOURCE_BY_ID","GET_FUNDING_SOURCE_BY_ID_SUCCESS","GET_FUNDING_SOURCE_SUCCESS","GET_FUNDING_SOURCE_SERVICE_BY_ID","GET_FUNDING_SOURCE_HISTORIES_BY_ID","GET_FUNDING_SOURCE_HISTORIES_BY_ID_SUCCESS","GET_FUNDING_SOURCE_SERVICE_BY_ID_SUCCESS","httpRequestsOnErrorsActions","httpRequestsOnLoadActions","createFundingSource","action","res","createFundingSourceService","payload","body","window","location","replace","err","console","log","getFundingSource","type","removeError","appendLoading","getFundingSourceService","data","removeLoading","getFundingSourceById","getFoundingSourceById","error","getFundingSourceServicesById","getFoundingSourceServiceById","getFundingSourceHistoriesById","watchFundingSource","watchFundingSourceSaga"],"mappings":"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","sourcesContent":["import {call, put, takeLatest} from \"redux-saga/effects\";\nimport {authService} from \"./fundingSource.service\";\nimport {\n    CREATE_FUNDING_SOURCE,\n    GET_FUNDING_SOURCE,\n    GET_FUNDING_SOURCE_BY_ID,\n    GET_FUNDING_SOURCE_BY_ID_SUCCESS,\n    GET_FUNDING_SOURCE_SUCCESS,\n    GET_FUNDING_SOURCE_SERVICE_BY_ID,\n    GET_FUNDING_SOURCE_HISTORIES_BY_ID,\n    GET_FUNDING_SOURCE_HISTORIES_BY_ID_SUCCESS, GET_FUNDING_SOURCE_SERVICE_BY_ID_SUCCESS\n} from \"./fundingSource.types\";\nimport {httpRequestsOnErrorsActions} from \"../http_requests_on_errors\";\nimport {httpRequestsOnLoadActions} from \"../http_requests_on_load\";\n\nfunction* createFundingSource(action) {\n    try {\n        const res = yield call(authService.createFundingSourceService, action.payload.body);\n        window.location.replace('/fundingSource')\n    } catch (err) {\n        console.log(err)\n    }\n}\n\n\nfunction* getFundingSource({action, type}) {\n    yield put(httpRequestsOnErrorsActions.removeError(type));\n    yield put(httpRequestsOnLoadActions.appendLoading(type));\n    try {\n        const res = yield call(authService.getFundingSourceService);\n        yield put({\n            type: GET_FUNDING_SOURCE_SUCCESS,\n            payload: res.data,\n        });\n        yield put(httpRequestsOnLoadActions.removeLoading(type));\n        yield put(httpRequestsOnErrorsActions.removeError(type));\n\n\n    } catch (err) {\n        yield put(httpRequestsOnLoadActions.removeLoading(type));\n        yield put(httpRequestsOnErrorsActions.removeError(type));\n        console.log(err)\n    }\n}\nfunction* getFundingSourceById(action) {\n    // yield put(httpRequestsOnErrorsActions.removeError(type));\n    // yield put(httpRequestsOnLoadActions.appendLoading(type));\n    console.log(action.payload,'saga');\n\n    try {\n        const res = yield call(authService.getFoundingSourceById,action.payload);\n        yield put({\n            type: GET_FUNDING_SOURCE_BY_ID_SUCCESS,\n            payload: res.data,\n        });\n        // yield put(httpRequestsOnLoadActions.removeLoading(type));\n        // yield put(httpRequestsOnErrorsActions.removeError(type));\n\n\n    } catch (error) {\n        // yield put(httpRequestsOnLoadActions.removeLoading(type));\n        // yield put(httpRequestsOnErrorsActions.removeError(type));\n        console.log(error)\n    }\n}\n\nfunction* getFundingSourceServicesById(action) {\n    console.log( 'service')\n    // yield put(httpRequestsOnErrorsActions.removeError(type));\n    // yield put(httpRequestsOnLoadActions.appendLoading(type));\n    try {\n        const res = yield call(authService.getFoundingSourceServiceById, action.payload);\n        yield put({\n            type: GET_FUNDING_SOURCE_SERVICE_BY_ID_SUCCESS,\n            payload: res.data,\n        });\n        // yield put(httpRequestsOnLoadActions.removeLoading(type));\n        // yield put(httpRequestsOnErrorsActions.removeError(type));\n\n\n    } catch (error) {\n        // yield put(httpRequestsOnLoadActions.removeLoading(type));\n        // yield put(httpRequestsOnErrorsActions.removeError(type));\n    }\n}\nfunction* getFundingSourceHistoriesById(action) {\n    // yield put(httpRequestsOnErrorsActions.removeError(type));\n    // yield put(httpRequestsOnLoadActions.appendLoading(type));\n    try {\n        const res = yield call(authService.getFundingSourceHistoriesById, action.payload);\n        yield put({\n            type: GET_FUNDING_SOURCE_HISTORIES_BY_ID_SUCCESS,\n            payload: res.data,\n        });\n        // yield put(httpRequestsOnLoadActions.removeLoading(type));\n        // yield put(httpRequestsOnErrorsActions.removeError(type));\n\n\n    } catch (error) {\n        // yield put(httpRequestsOnLoadActions.removeLoading(type));\n        // yield put(httpRequestsOnErrorsActions.removeError(type));\n        console.log(error)\n    }\n}\n\nexport const watchFundingSource = function* watchFundingSourceSaga() {\n    yield takeLatest(CREATE_FUNDING_SOURCE, createFundingSource);\n    yield takeLatest(GET_FUNDING_SOURCE, getFundingSource);\n    yield takeLatest(GET_FUNDING_SOURCE_BY_ID, getFundingSourceById);\n    yield takeLatest(GET_FUNDING_SOURCE_SERVICE_BY_ID, getFundingSourceServicesById);\n    yield takeLatest(GET_FUNDING_SOURCE_HISTORIES_BY_ID, getFundingSourceHistoriesById);\n};\n"]},"metadata":{},"sourceType":"module"}