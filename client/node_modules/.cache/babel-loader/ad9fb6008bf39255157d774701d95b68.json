{"ast":null,"code":"var _jsxFileName = \"/Users/eachbase5/Desktop/untitled folder/wellnessDaisy/client/src/components/inputs/validationInput.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { inputsStyle } from \"./styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { ErrMessage } from \"../messages\";\nimport { InputMinLoader } from \"./inputMiniLoader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ValidationInput = ({\n  multiline,\n  style,\n  className,\n  autoComplete,\n  typeError,\n  Length,\n  disabled,\n  value,\n  type,\n  onChange,\n  name,\n  label,\n  validator,\n  sendBoolean,\n  variant,\n  loader,\n  styles,\n  ...props\n}) => {\n  _s();\n\n  const classes = inputsStyle();\n  const [validEmail, setValidEmail] = useState(false);\n\n  const chechValid = e => {\n    let Value = e.target.value;\n\n    if (Value.length >= 1) {\n      if (validator) {\n        if (validator.test(Value)) {\n          setValidEmail(false);\n          sendBoolean(false);\n        } else {\n          setValidEmail(true);\n          sendBoolean(true);\n        }\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style ? style : classes.SignInInput,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        style: { ...styles\n        },\n        className: className ? className : classes.inputTextField,\n        variant: variant,\n        label: label,\n        name: name,\n        type: type,\n        value: value,\n        InputLabelProps: {\n          shrink: type === 'date' ? true : !!value\n        },\n        id: \"standard-basic\",\n        autoComplete: autoComplete,\n        error: typeError,\n        disabled: disabled,\n        maxLength: Length,\n        onChange: ev => onChange(ev),\n        onFocus: () => setValidEmail(false),\n        onBlur: e => chechValid(e),\n        fullWidth: true,\n        multiline: multiline,\n        InputProps: {\n          endAdornment: loader && /*#__PURE__*/_jsxDEV(InputMinLoader, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ErrMessage, {\n        text: typeError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(ValidationInput, \"F9uGpYqHdcldjoZE1vAfC6z00Ns=\");\n\n_c = ValidationInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"ValidationInput\");","map":{"version":3,"sources":["/Users/eachbase5/Desktop/untitled folder/wellnessDaisy/client/src/components/inputs/validationInput.js"],"names":["React","useState","inputsStyle","TextField","ErrMessage","InputMinLoader","ValidationInput","multiline","style","className","autoComplete","typeError","Length","disabled","value","type","onChange","name","label","validator","sendBoolean","variant","loader","styles","props","classes","validEmail","setValidEmail","chechValid","e","Value","target","length","test","SignInInput","inputTextField","shrink","ev","endAdornment"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { inputsStyle } from \"./styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { ErrMessage } from \"../messages\";\nimport { InputMinLoader } from \"./inputMiniLoader\";\n\nexport const ValidationInput = ({\n  multiline, style, className, autoComplete,\n  typeError, Length, disabled,\n  value, type, onChange, name,\n  label, validator, sendBoolean, variant, loader, styles, ...props\n}) => {\n  const classes = inputsStyle();\n  const [validEmail, setValidEmail] = useState(false);\n\n  const chechValid = (e) => {\n    let Value = e.target.value;\n    if (Value.length >= 1) {\n      if (validator) {\n        if (validator.test(Value)) {\n          setValidEmail(false);\n          sendBoolean(false);\n        } else {\n          setValidEmail(true);\n          sendBoolean(true);\n        }\n      }\n    }\n  };\n\n  return (\n    <>\n      <div className={style ? style : classes.SignInInput}>\n        <TextField\n          style={{ ...styles }}\n          className={className ? className : classes.inputTextField}\n          variant={variant}\n          label={label}\n          name={name}\n          type={type}\n          value={value}\n          InputLabelProps={{\n            shrink: type === 'date' ? true : !!value,\n          }}\n          id=\"standard-basic\"\n          autoComplete={autoComplete}\n          error={typeError}\n          disabled={disabled}\n          maxLength={Length}\n          onChange={(ev) => onChange(ev)}\n          onFocus={() => setValidEmail(false)}\n          onBlur={(e) => chechValid(e)}\n          fullWidth\n          multiline={multiline}\n\n          InputProps={{\n            endAdornment: (\n              loader && <InputMinLoader />\n            )\n          }}\n        />\n        <ErrMessage text={typeError} />\n      </div>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}