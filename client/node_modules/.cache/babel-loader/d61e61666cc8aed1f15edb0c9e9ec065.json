{"ast":null,"code":"var _jsxFileName = \"/Users/eachbase5/Desktop/untitled folder/wellnessDaisy/client/src/fragments/humanResources/adminInfo/adminInfo.js\",\n    _s = $RefreshSig$();\n\nimport { CreateWrapperHead, InfoWrapper } from \"@eachbase/components\";\nimport { useDispatch } from \"react-redux\";\nimport { Images, useGlobalStyles, useGlobalText, AntSwitch } from \"@eachbase/utils\";\nimport React, { useEffect, useState } from \"react\";\nimport { adminActions } from \"@eachbase/store\";\nimport { CreateAdminInputs } from '../index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AdminInfo = ({\n  handleClose,\n  info\n}) => {\n  _s();\n\n  const globalStyle = useGlobalStyles();\n  const globalText = useGlobalText();\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [switchBoolean, setSwitchBoolean] = useState(info ? info.isActive : ' ');\n  const [adminName, setAdminName] = useState('');\n  const dispatch = useDispatch();\n  console.log(info, 'infoinfoinfoinfo');\n  useEffect(() => {\n    return () => {\n      dispatch(adminActions.clearAdminById());\n    };\n  }, []);\n\n  const handleSwitch = () => {\n    if (switchBoolean) {\n      dispatch(adminActions.inactivateAdmin(info.id));\n      setSwitchBoolean(false);\n    } else {\n      dispatch(dispatch(adminActions.activateAdmin(info.id)));\n      setSwitchBoolean(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(InfoWrapper, {\n      head: /*#__PURE__*/_jsxDEV(CreateWrapperHead, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: globalStyle.spaceBetween,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: globalStyle.centerItem,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: Images.humanResourcesYellow,\n              alt: \"authorityBlueFill\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: firstName && lastName ? `${firstName} ${lastName}` : firstName ? firstName : lastName ? lastName : `${info.firstName} ${info.lastName}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: globalStyle.centerItem,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: globalText.smallSwitchText,\n              children: switchBoolean === true ? 'Inactivate' : 'Activate'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(AntSwitch, {\n              onClick: handleSwitch,\n              checked: switchBoolean\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 32\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this),\n      body: /*#__PURE__*/_jsxDEV(CreateAdminInputs, {\n        handleChangeFirstName: setFirstName,\n        handleChangeLastName: setLastName,\n        handleChangeName: setAdminName,\n        info: info\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this),\n      parentLink: '/humanResources',\n      parent: 'Human Recources',\n      child: 'Person Info'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AdminInfo, \"urHPxP/4jT/gn24dLNR1LOVGtXc=\", false, function () {\n  return [useGlobalStyles, useGlobalText, useDispatch];\n});\n\n_c = AdminInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminInfo\");","map":{"version":3,"sources":["/Users/eachbase5/Desktop/untitled folder/wellnessDaisy/client/src/fragments/humanResources/adminInfo/adminInfo.js"],"names":["CreateWrapperHead","InfoWrapper","useDispatch","Images","useGlobalStyles","useGlobalText","AntSwitch","React","useEffect","useState","adminActions","CreateAdminInputs","AdminInfo","handleClose","info","globalStyle","globalText","firstName","setFirstName","lastName","setLastName","switchBoolean","setSwitchBoolean","isActive","adminName","setAdminName","dispatch","console","log","clearAdminById","handleSwitch","inactivateAdmin","id","activateAdmin","spaceBetween","centerItem","humanResourcesYellow","smallSwitchText"],"mappings":"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","sourcesContent":["import {CreateWrapperHead, InfoWrapper} from \"@eachbase/components\";\nimport {useDispatch} from \"react-redux\";\nimport {Images, useGlobalStyles, useGlobalText, AntSwitch} from \"@eachbase/utils\";\nimport React, {useEffect, useState} from \"react\";\nimport {adminActions} from \"@eachbase/store\";\nimport { CreateAdminInputs } from '../index'\n\n\nexport const AdminInfo = ({handleClose, info}) => {\n    const globalStyle = useGlobalStyles()\n    const globalText = useGlobalText()\n    const [firstName, setFirstName] =useState('')\n    const [lastName, setLastName] =useState('')\n    const [switchBoolean , setSwitchBoolean] = useState(info ? info.isActive : ' ')\n    const [adminName , setAdminName] = useState('')\n    const dispatch = useDispatch()\n\n\n\n\n    console.log(info,'infoinfoinfoinfo')\n    useEffect(() => {\n        return () => {\n            dispatch(adminActions.clearAdminById())\n        }\n    }, [])\n\n    const handleSwitch =()=>{     \n        if( switchBoolean ){\n            dispatch(adminActions.inactivateAdmin(info.id))\n            setSwitchBoolean(false)\n        }else{\n            dispatch(dispatch(adminActions.activateAdmin(info.id)))\n            setSwitchBoolean(true)\n        }\n    }\n\n    return (\n        <div>\n         <InfoWrapper\n                head={\n                    <CreateWrapperHead>\n                        <div className={globalStyle.spaceBetween}>\n                            <div className={globalStyle.centerItem}>\n                                <img src={Images.humanResourcesYellow} alt={\"authorityBlueFill\"}/>\n                                <p>{ firstName && lastName ? `${firstName} ${lastName}` :\n                                    firstName  ?  firstName  :\n                                        lastName ? lastName :\n                                            `${info.firstName} ${info.lastName}`}\n                                </p>\n                            </div>\n                            <div className={globalStyle.centerItem}>\n                                <span className={globalText.smallSwitchText}>{switchBoolean === true ? 'Inactivate' : 'Activate'}</span>\n                               <AntSwitch\n                                onClick={ handleSwitch }\n                                checked={ switchBoolean }\n                               />\n                            </div>\n                        </div>\n                    </CreateWrapperHead>\n                }\n                body={\n                    <CreateAdminInputs\n                        handleChangeFirstName = { setFirstName }\n                        handleChangeLastName = { setLastName }\n                        handleChangeName={setAdminName}\n                        info={info}\n                    />\n                   \n                }\n                parentLink={'/humanResources'}\n                parent={'Human Recources'}\n                child={'Person Info'}\n            />\n\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}