{"ast":null,"code":"var _jsxFileName = \"/Users/eachbase5/Desktop/untitled folder/wellnessDaisy/client/src/fragments/factoring/creareFactoring/core/createFactoringInputs.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { officeActions } from \"@eachbase/store\";\nimport { useHistory } from \"react-router-dom\";\nimport { Colors, CountryList, createInputsWrapper, EmailValidator, ErrorText, useGlobalStyles, useGlobalText } from \"@eachbase/utils\";\nimport { AddressInput, Circle, CreateChancel, Line, ValidationInput, EditSaveButtons, SelectInput } from \"@eachbase/components\";\nimport moment from \"moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CreateFactoringInputs = ({\n  handleChangeName,\n  info\n}) => {\n  _s();\n\n  const globalStyle = useGlobalText();\n  const globalInputs = useGlobalStyles();\n  const globalScreens = createInputsWrapper();\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [disables, setDisabled] = useState(!!info);\n  const [fullAddress, setFullAddress] = useState(info ? info.address.formattedAddress : '');\n  const [error, setError] = useState('');\n  const [phone, setPhone] = useState(info ? info.phoneNumber : '');\n  const [inputs, setInputs] = useState(info ? { ...info\n  } : {});\n\n  const handleChange = e => setInputs(prevState => ({ ...prevState,\n    [e.target.name]: e.target.value\n  }), error === e.target.name && setError(''), e.target.name === 'name' && handleChangeName(e.target.value));\n\n  const handleChangePhone = ev => {\n    if (ev.target.value.length <= 11) {\n      setPhone(ev.target.value);\n      error === 'phone' && setError('');\n    }\n  };\n\n  const handleCreate = () => {\n    const data = {\n      \"name\": inputs.name,\n      \"email\": inputs.email,\n      \"phoneNumber\": phone,\n      \"establishedDate\": new Date(inputs.establishedDate).getTime(),\n      \"address\": fullAddress\n    };\n    const editData = {\n      \"name\": inputs.name,\n      \"email\": inputs.email,\n      \"phoneNumber\": phone,\n      \"address\": fullAddress,\n      \"officeId\": info ? info.id : ''\n    };\n\n    if (inputs.name && inputs.email && phone && inputs.establishedDate && fullAddress) {\n      if (info) {\n        // dispatch(officeActions.editOffice(editData))\n        setDisabled(true);\n      } else {// dispatch(officeActions.createFundingSource(data))\n      }\n    } else {\n      setError(!inputs.company ? 'company' : !inputs.email ? 'email' : !phone ? 'phone' : !inputs.establishedDate ? 'date' : 'Input is not field');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: globalScreens.createInputsWrapper,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: globalInputs.spaceBetween,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: globalInputs.centerItem,\n        children: [info && /*#__PURE__*/_jsxDEV(Circle, {\n          number: 1,\n          back: Colors.ThemeOrange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 30\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: globalStyle.title,\n          children: \"Factoring Company Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), info && /*#__PURE__*/_jsxDEV(EditSaveButtons, {\n        handleChancel: () => setDisabled(true),\n        handleSetEdit: () => setDisabled(false),\n        handleSaveInfo: handleCreate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        width: '100%'\n      },\n      children: [info && /*#__PURE__*/_jsxDEV(Line, {\n        height: '281px'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: globalScreens.basicInfo,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: globalStyle.smallText,\n            children: \"Basic Information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: globalScreens.basicInfoInputs,\n            children: [/*#__PURE__*/_jsxDEV(ValidationInput, {\n              style: globalInputs.simpleInput,\n              variant: \"outlined\",\n              name: \"company\",\n              type: \"text\",\n              label: \"Company Name*\",\n              typeError: error === 'company' ? ErrorText.field : '',\n              onChange: handleChange,\n              value: inputs.company,\n              disabled: disables\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(ValidationInput, {\n              style: globalInputs.simpleInput,\n              variant: \"outlined\",\n              name: \"id\",\n              type: \"text\",\n              label: \"ID*\",\n              typeError: error === 'id' ? ErrorText.field : '',\n              onChange: handleChange,\n              value: inputs.id,\n              disabled: disables\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(ValidationInput, {\n              style: globalInputs.simpleInput,\n              variant: \"outlined\",\n              name: \"bank\",\n              type: \"text\",\n              label: \"Bank Name\",\n              typeError: error === 'bank' ? ErrorText.field : '',\n              onChange: handleChange,\n              value: inputs.bank,\n              disabled: disables\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(ValidationInput, {\n              style: globalInputs.simpleInput,\n              variant: \"outlined\",\n              name: \"account\",\n              type: \"text\",\n              label: \"Account Number\",\n              typeError: error === 'account' ? ErrorText.field : '',\n              onChange: handleChange,\n              value: inputs.account,\n              disabled: disables\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(ValidationInput, {\n              variant: \"outlined\",\n              name: \"routing\",\n              type: \"text\",\n              label: \"Routing Number\",\n              typeError: error === 'routing' ? ErrorText.field : '',\n              onChange: handleChange,\n              value: inputs.routing,\n              disabled: disables\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 22\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              width: '100%',\n              marginTop: '28px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(ValidationInput, {\n              style: globalInputs.simpleInput,\n              variant: \"outlined\",\n              name: \"phone\",\n              label: \"Phone Number*\",\n              type: 'number',\n              typeError: error === 'phone' ? ErrorText.field : '',\n              onChange: handleChangePhone,\n              value: phone,\n              disabled: disables\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(ValidationInput, {\n              style: globalInputs.simpleInput,\n              validator: EmailValidator,\n              variant: \"outlined\",\n              name: \"remittance\",\n              type: \"email\",\n              label: \"Remittance Email\",\n              typeError: error === 'remittance' ? ErrorText.field : error === 'Not valid email' ? 'Not valid email' : '',\n              sendBoolean: bool => bool === true ? setError(\"Not valid email\") : setError(''),\n              onChange: handleChange,\n              value: inputs.remittance,\n              disabled: disables\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(ValidationInput, {\n              style: globalInputs.simpleInput,\n              validator: EmailValidator,\n              variant: \"outlined\",\n              name: \"email\",\n              type: \"email\",\n              label: \"Email Address*\",\n              typeError: error === 'email' ? ErrorText.field : error === 'Not valid email' ? 'Not valid email' : '',\n              sendBoolean: bool => bool === true ? setError(\"Not valid email\") : setError(''),\n              onChange: handleChange,\n              value: inputs.email,\n              disabled: disables\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(SelectInput, {\n              name: \"payment\",\n              label: \"Payment Method\",\n              handleSelect: handleChange,\n              value: inputs.officeName,\n              list: ['officesListReserve'],\n              typeError: error === 'payment' ? ErrorText.field : '',\n              type: 'id'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: globalScreens.basicInfo,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: globalStyle.smallText,\n            children: \"Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: globalScreens.basicInfoInputs,\n            children: /*#__PURE__*/_jsxDEV(AddressInput, {\n              info: info,\n              handleSelectValue: setFullAddress,\n              disabled: disables\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error === 'Input is not field' ? error : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 13\n    }, this), !info && /*#__PURE__*/_jsxDEV(CreateChancel, {\n      classes: globalInputs.buttonsStyle,\n      create: \"Create\",\n      chancel: \"Cancel\",\n      onCreate: handleCreate,\n      onClose: () => history.push('/factoring')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CreateFactoringInputs, \"CiavWr/PFRkEjcojEU5vSoHwywc=\", false, function () {\n  return [useGlobalText, useGlobalStyles, useDispatch, useHistory];\n});\n\n_c = CreateFactoringInputs;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateFactoringInputs\");","map":{"version":3,"sources":["/Users/eachbase5/Desktop/untitled folder/wellnessDaisy/client/src/fragments/factoring/creareFactoring/core/createFactoringInputs.js"],"names":["React","useState","useDispatch","officeActions","useHistory","Colors","CountryList","createInputsWrapper","EmailValidator","ErrorText","useGlobalStyles","useGlobalText","AddressInput","Circle","CreateChancel","Line","ValidationInput","EditSaveButtons","SelectInput","moment","CreateFactoringInputs","handleChangeName","info","globalStyle","globalInputs","globalScreens","dispatch","history","disables","setDisabled","fullAddress","setFullAddress","address","formattedAddress","error","setError","phone","setPhone","phoneNumber","inputs","setInputs","handleChange","e","prevState","target","name","value","handleChangePhone","ev","length","handleCreate","data","email","Date","establishedDate","getTime","editData","id","company","spaceBetween","centerItem","ThemeOrange","title","display","width","basicInfo","smallText","basicInfoInputs","simpleInput","field","bank","account","routing","marginTop","bool","remittance","officeName","buttonsStyle","push"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport {useDispatch} from \"react-redux\";\nimport {officeActions} from \"@eachbase/store\";\nimport {useHistory} from \"react-router-dom\";\nimport {\n    Colors, CountryList,\n    createInputsWrapper,\n    EmailValidator, ErrorText,\n    useGlobalStyles,\n    useGlobalText\n} from \"@eachbase/utils\";\nimport {\n    AddressInput,\n    Circle,\n    CreateChancel,\n    Line,\n    ValidationInput,\n    EditSaveButtons,\n    SelectInput\n} from \"@eachbase/components\";\nimport moment from \"moment\";\n\nexport const CreateFactoringInputs = ({handleChangeName, info}) => {\n    const globalStyle = useGlobalText();\n    const globalInputs = useGlobalStyles();\n    const globalScreens = createInputsWrapper();\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const [disables, setDisabled] = useState( !!info)\n    const [fullAddress, setFullAddress] = useState(info ? info.address.formattedAddress : '')\n    const [error, setError] = useState('')\n    const [phone, setPhone] = useState(info ? info.phoneNumber : '')\n    const [inputs, setInputs] = useState(info ? { ...info } : {});\n\n    const handleChange = e => setInputs(prevState =>\n            ({...prevState, [e.target.name]: e.target.value,}),\n        error === e.target.name && setError(''),\n        e.target.name === 'name' && handleChangeName(e.target.value)\n    );\n\n    const handleChangePhone = (ev) => {\n        if (ev.target.value.length <= 11) {\n            setPhone(ev.target.value)\n            error === 'phone' && setError('')\n        }\n    }\n\n    const handleCreate = () => {\n        const data = {\n            \"name\": inputs.name,\n            \"email\": inputs.email,\n            \"phoneNumber\": phone,\n            \"establishedDate\": new Date(inputs.establishedDate).getTime(),\n            \"address\": fullAddress\n        };\n\n        const editData = {\n            \"name\": inputs.name,\n            \"email\": inputs.email,\n            \"phoneNumber\": phone, \n            \"address\": fullAddress ,\n            \"officeId\": info ? info.id : ''\n        };\n\n        if (inputs.name && inputs.email && phone && inputs.establishedDate && fullAddress) {\n            if(info){\n                // dispatch(officeActions.editOffice(editData))\n                setDisabled(true)\n            }else{\n             // dispatch(officeActions.createFundingSource(data))\n            }\n        } else {\n            setError(\n                !inputs.company ? 'company' :\n                       !inputs.email ? 'email' :\n                         !phone ? 'phone' :\n                           !inputs.establishedDate ? 'date' :\n                             'Input is not field'\n            )\n        }\n    }\n\n    return (\n        <div className={globalScreens.createInputsWrapper}>\n\n            <div className={globalInputs.spaceBetween}>\n                <div className={globalInputs.centerItem}>\n\n                    {info && <Circle number={1} back={Colors.ThemeOrange}/> }\n                   <p className={globalStyle.title}>Factoring Company Information</p>\n                </div>\n\n                {info &&\n                <EditSaveButtons\n                   handleChancel={() => setDisabled(true)}\n                   handleSetEdit={() => setDisabled(false)}\n                   handleSaveInfo={handleCreate}\n                />}\n            </div>\n\n\n\n            <div style={{display:'flex', width:'100%'}}>\n                {info &&  <Line height={'281px'}/> }\n\n            <div style={{width:'100%'}}>\n              <div  className={globalScreens.basicInfo}>\n                <p className={globalStyle.smallText}>Basic Information</p>\n                <div className={globalScreens.basicInfoInputs}>\n\n                    <ValidationInput\n                        style={globalInputs.simpleInput}\n                        variant={\"outlined\"}\n                        name={\"company\"}\n                        type={\"text\"}\n                        label={\"Company Name*\"}\n                        typeError={error === 'company' ? ErrorText.field : ''}\n                        onChange={handleChange}\n                        value={ inputs.company }\n                        disabled={disables}\n                    />\n\n                    <ValidationInput\n                        style={globalInputs.simpleInput}\n                        variant={\"outlined\"}\n                        name={\"id\"}\n                        type={\"text\"}\n                        label={\"ID*\"}\n                        typeError={error === 'id' ? ErrorText.field : ''}\n                        onChange={handleChange}\n                        value={ inputs.id }\n                        disabled={disables}\n                    />\n\n                    <ValidationInput\n                        style={globalInputs.simpleInput}\n                        variant={\"outlined\"}\n                        name={\"bank\"}\n                        type={\"text\"}\n                        label={\"Bank Name\"}\n                        typeError={error === 'bank' ? ErrorText.field : ''}\n                        onChange={handleChange}\n                        value={ inputs.bank }\n                        disabled={disables}\n                    />\n\n                    <ValidationInput\n                        style={globalInputs.simpleInput}\n                        variant={\"outlined\"}\n                        name={\"account\"}\n                        type={\"text\"}\n                        label={\"Account Number\"}\n                        typeError={error === 'account' ? ErrorText.field : ''}\n                        onChange={handleChange}\n                        value={ inputs.account }\n                        disabled={disables}\n                    />\n\n                     <ValidationInput\n                        variant={\"outlined\"}\n                        name={\"routing\"}\n                        type={\"text\"}\n                        label={\"Routing Number\"}\n                        typeError={error === 'routing' ? ErrorText.field : ''}\n                        onChange={handleChange}\n                        value={ inputs.routing }\n                        disabled={disables}\n                    />\n                </div>\n\n                  <div style={{display:'flex', width:'100%',marginTop:'28px'}}>\n                      <ValidationInput\n                          style={globalInputs.simpleInput}\n                          variant={\"outlined\"}\n                          name={\"phone\"}\n                          label={\"Phone Number*\"}\n                          type={'number'}\n                          typeError={error === 'phone' ? ErrorText.field : ''}\n                          onChange={handleChangePhone}\n                          value={phone}\n                          disabled={disables}\n                      />\n\n                  <ValidationInput\n                      style={globalInputs.simpleInput}\n                      validator={EmailValidator}\n                      variant={\"outlined\"}\n                      name={\"remittance\"}\n                      type={\"email\"}\n                      label={\"Remittance Email\"}\n                      typeError={error === 'remittance' ? ErrorText.field : error === 'Not valid email' ? 'Not valid email' : ''}\n                      sendBoolean={ (bool) => bool === true ? setError(\"Not valid email\") : setError('') }\n                      onChange={handleChange}\n                      value={inputs.remittance}\n                      disabled={disables}\n                  />\n\n                      <ValidationInput\n                          style={globalInputs.simpleInput}\n                          validator={EmailValidator}\n                          variant={\"outlined\"}\n                          name={\"email\"}\n                          type={\"email\"}\n                          label={\"Email Address*\"}\n                          typeError={error === 'email' ? ErrorText.field : error === 'Not valid email' ? 'Not valid email' : ''}\n                          sendBoolean={ (bool) => bool === true ? setError(\"Not valid email\") : setError('') }\n                          onChange={handleChange}\n                          value={inputs.email}\n                          disabled={disables}\n                      />\n\n                      <SelectInput\n                          name={\"payment\"}\n                          label={\"Payment Method\"}\n                          handleSelect={ handleChange }\n                          value={ inputs.officeName }\n                          list={ ['officesListReserve'] }\n                          typeError={error === 'payment' ? ErrorText.field : ''}\n                          type={'id'}\n                      />\n\n                  </div>\n            </div>\n\n            <div className={globalScreens.basicInfo}>\n                <p className={globalStyle.smallText}>Address</p>\n\n                <div className={globalScreens.basicInfoInputs}>\n                    <AddressInput\n                        info={info}\n                        handleSelectValue={setFullAddress}\n                        disabled={disables}\n                    />\n                </div>\n\n             </div>\n     </div>\n\n            </div>\n\n\n            <p>{error === 'Input is not field' ? error : ''}</p>\n            {!info &&\n            <CreateChancel\n                classes={globalInputs.buttonsStyle}\n                create={\"Create\"}\n                chancel={\"Cancel\"}\n                onCreate={handleCreate}\n                onClose={() => history.push('/factoring')}\n            />\n            }\n        </div>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}