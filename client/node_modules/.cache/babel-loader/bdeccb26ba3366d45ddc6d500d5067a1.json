{"ast":null,"code":"var _jsxFileName = \"/Users/eachbase5/Desktop/untitled folder/wellnessDaisy/client/src/fragments/carriers/createCarrier/core/createCarrierInputs.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { officeActions } from \"@eachbase/store\";\nimport { useHistory } from \"react-router-dom\";\nimport { Colors, createInputsWrapper, EmailValidator, ErrorText, useGlobalStyles, useGlobalText } from \"@eachbase/utils\";\nimport { AddressInput, Circle, CreateChancel, Line, ValidationInput, EditSaveButtons, SelectInput } from \"@eachbase/components\";\nimport moment from \"moment\";\nimport { RadioButtons } from \"./radioButtons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CreateCarrierInputs = ({\n  handleChangeName,\n  info\n}) => {\n  _s();\n\n  const globalStyle = useGlobalText();\n  const globalInputs = useGlobalStyles();\n  const globalScreens = createInputsWrapper();\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [disables, setDisabled] = useState(!!info);\n  const [fullAddress, setFullAddress] = useState(info ? info.address.formattedAddress : '');\n  const [error, setError] = useState('');\n  const [phone, setPhone] = useState(info ? info.phoneNumber : '');\n  const [inputs, setInputs] = useState(info ? { ...info\n  } : {});\n\n  const handleChange = e => setInputs(prevState => ({ ...prevState,\n    [e.target.name]: e.target.value\n  }), error === e.target.name && setError(''), e.target.name === 'name' && handleChangeName(e.target.value));\n\n  const handleChangePhone = ev => {\n    if (ev.target.value.length <= 11) {\n      setPhone(ev.target.value);\n      error === 'phone' && setError('');\n    }\n  };\n\n  const handleCreate = () => {\n    const data = {\n      \"name\": inputs.name,\n      \"email\": inputs.email,\n      \"phoneNumber\": phone,\n      \"establishedDate\": new Date(inputs.establishedDate).getTime(),\n      \"address\": fullAddress\n    };\n    const editData = {\n      \"name\": inputs.name,\n      \"email\": inputs.email,\n      \"phoneNumber\": phone,\n      \"address\": fullAddress,\n      \"officeId\": info ? info.id : ''\n    };\n\n    if (inputs.name && inputs.email && phone && inputs.establishedDate && fullAddress) {\n      if (info) {\n        dispatch(officeActions.editOffice(editData));\n        setDisabled(true);\n      } else {\n        dispatch(officeActions.createOffice(data));\n      }\n    } else {\n      setError(!inputs.name ? 'name' : !inputs.email ? 'email' : !phone ? 'phone' : !inputs.establishedDate ? 'date' : 'Input is not field');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: globalScreens.createInputsWrapper,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: globalInputs.spaceBetween,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: globalInputs.centerItem,\n        children: [info && /*#__PURE__*/_jsxDEV(Circle, {\n          number: 1,\n          back: Colors.ThemeOrange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 30\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: globalStyle.title,\n          children: \"Carrier Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), info && /*#__PURE__*/_jsxDEV(EditSaveButtons, {\n        handleChancel: () => setDisabled(true),\n        handleSetEdit: () => setDisabled(false),\n        handleSaveInfo: handleCreate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      children: [info && /*#__PURE__*/_jsxDEV(Line, {\n        height: '281px'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: globalScreens.basicInfo,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: globalStyle.smallText,\n            children: \"Basic Information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: globalScreens.basicInfoInputs,\n            children: [/*#__PURE__*/_jsxDEV(ValidationInput, {\n              style: globalInputs.simpleInput,\n              variant: \"outlined\",\n              name: \"name\",\n              type: \"text\",\n              label: \"First Name*\",\n              typeError: error === 'name' ? ErrorText.field : '',\n              onChange: handleChange,\n              value: inputs.name,\n              disabled: disables\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ValidationInput, {\n              style: globalInputs.simpleInput,\n              variant: \"outlined\",\n              name: \"last\",\n              type: \"text\",\n              label: \"Last Name*\",\n              typeError: error === 'last' ? ErrorText.field : '',\n              onChange: handleChange,\n              value: inputs.last,\n              disabled: disables\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ValidationInput, {\n              variant: \"outlined\",\n              name: \"establishedDate\",\n              type: \"date\",\n              typeError: error === 'date' ? ErrorText.field : '',\n              label: \"Date of Birth*\",\n              onChange: handleChange,\n              value: info ? moment(info.establishedDate).format('YYYY-MM-DD') : inputs.establishedDate,\n              disabled: disables\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: globalScreens.basicInfoInputs,\n            children: [/*#__PURE__*/_jsxDEV(ValidationInput, {\n              style: globalInputs.simpleInput,\n              variant: \"outlined\",\n              name: \"phone\",\n              label: \"Phone Number*\",\n              type: 'number',\n              typeError: error === 'phone' ? ErrorText.field : '',\n              onChange: handleChangePhone,\n              value: phone,\n              disabled: disables\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ValidationInput, {\n              style: globalInputs.simpleInput,\n              variant: \"outlined\",\n              name: \"second\",\n              label: \"Secondary Number\",\n              type: 'number',\n              typeError: error === 'second' ? ErrorText.field : '',\n              onChange: handleChangePhone,\n              value: phone,\n              disabled: disables\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ValidationInput, {\n              style: globalInputs.simpleInput,\n              variant: \"outlined\",\n              name: \"license\",\n              type: \"text\",\n              label: \"Driverâ€™s License*\",\n              typeError: error === 'license' ? ErrorText.field : '',\n              onChange: handleChange,\n              value: inputs.license,\n              disabled: disables\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(SelectInput, {\n              name: \"issuing\",\n              label: \"Issuing State*\",\n              handleSelect: handleChange,\n              value: inputs.issuing,\n              list: ['officesListReserve'],\n              typeError: error === 'issuing' ? ErrorText.field : '',\n              type: 'id'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: '48%'\n            },\n            className: globalScreens.basicInfoInputs,\n            children: [/*#__PURE__*/_jsxDEV(ValidationInput, {\n              style: globalInputs.simpleInput,\n              validator: EmailValidator,\n              variant: \"outlined\",\n              name: \"email\",\n              type: \"email\",\n              label: \"Email Address*\",\n              typeError: error === 'email' ? ErrorText.field : error === 'Not valid email' ? 'Not valid email' : '',\n              sendBoolean: bool => bool === true ? setError(\"Not valid email\") : setError(''),\n              onChange: handleChange,\n              value: inputs.email,\n              disabled: disables\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ValidationInput, {\n              validator: EmailValidator,\n              variant: \"outlined\",\n              name: \"remittancev\",\n              type: \"email\",\n              label: \"Remittancev Email*\",\n              typeError: error === 'remittancev' ? ErrorText.field : error === 'Not valid email' ? 'Not valid email' : '',\n              sendBoolean: bool => bool === true ? setError(\"Not valid email\") : setError(''),\n              onChange: handleChange,\n              value: inputs.remittancev,\n              disabled: disables\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: globalScreens.basicInfo,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: globalStyle.smallText,\n            children: \"Shipping Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: globalScreens.basicInfoInputs,\n            children: /*#__PURE__*/_jsxDEV(AddressInput, {\n              info: info,\n              handleSelectValue: setFullAddress,\n              disabled: disables\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: globalScreens.basicInfo,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: globalStyle.smallText,\n            children: \"Mailing Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(RadioButtons, {\n            disabled: !fullAddress\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: globalScreens.basicInfoInputs,\n            children: /*#__PURE__*/_jsxDEV(AddressInput, {\n              info: info,\n              handleSelectValue: setFullAddress,\n              disabled: disables\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error === 'Input is not field' ? error : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 13\n    }, this), !info && /*#__PURE__*/_jsxDEV(CreateChancel, {\n      classes: globalInputs.buttonsStyle,\n      create: \"Create\",\n      chancel: \"Cancel\",\n      onCreate: handleCreate,\n      onClose: () => history.push('/carriers')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CreateCarrierInputs, \"onLmmtXjWKhC9MItfHUYEhoUsGM=\", false, function () {\n  return [useGlobalText, useGlobalStyles, useDispatch, useHistory];\n});\n\n_c = CreateCarrierInputs;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateCarrierInputs\");","map":{"version":3,"sources":["/Users/eachbase5/Desktop/untitled folder/wellnessDaisy/client/src/fragments/carriers/createCarrier/core/createCarrierInputs.js"],"names":["React","useState","useDispatch","officeActions","useHistory","Colors","createInputsWrapper","EmailValidator","ErrorText","useGlobalStyles","useGlobalText","AddressInput","Circle","CreateChancel","Line","ValidationInput","EditSaveButtons","SelectInput","moment","RadioButtons","CreateCarrierInputs","handleChangeName","info","globalStyle","globalInputs","globalScreens","dispatch","history","disables","setDisabled","fullAddress","setFullAddress","address","formattedAddress","error","setError","phone","setPhone","phoneNumber","inputs","setInputs","handleChange","e","prevState","target","name","value","handleChangePhone","ev","length","handleCreate","data","email","Date","establishedDate","getTime","editData","id","editOffice","createOffice","spaceBetween","centerItem","ThemeOrange","title","display","width","basicInfo","smallText","basicInfoInputs","simpleInput","field","last","format","license","issuing","bool","remittancev","buttonsStyle","push"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport {useDispatch} from \"react-redux\";\nimport {officeActions} from \"@eachbase/store\";\nimport {useHistory} from \"react-router-dom\";\nimport {\n    Colors,\n    createInputsWrapper,\n    EmailValidator, ErrorText,\n    useGlobalStyles,\n    useGlobalText\n} from \"@eachbase/utils\";\nimport {\n    AddressInput,\n    Circle,\n    CreateChancel,\n    Line,\n    ValidationInput,\n    EditSaveButtons,\n    SelectInput\n} from \"@eachbase/components\";\nimport moment from \"moment\";\nimport {RadioButtons} from \"./radioButtons\";\n\nexport const CreateCarrierInputs = ({handleChangeName, info}) => {\n    const globalStyle = useGlobalText();\n    const globalInputs = useGlobalStyles();\n    const globalScreens = createInputsWrapper();\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const [disables, setDisabled] = useState(!!info)\n    const [fullAddress, setFullAddress] = useState(info ? info.address.formattedAddress : '')\n    const [error, setError] = useState('')\n    const [phone, setPhone] = useState(info ? info.phoneNumber : '')\n    const [inputs, setInputs] = useState(info ? {...info} : {});\n\n    const handleChange = e => setInputs(prevState =>\n            ({...prevState, [e.target.name]: e.target.value,}),\n        error === e.target.name && setError(''),\n        e.target.name === 'name' && handleChangeName(e.target.value)\n    );\n\n    const handleChangePhone = (ev) => {\n        if (ev.target.value.length <= 11) {\n            setPhone(ev.target.value)\n            error === 'phone' && setError('')\n        }\n    }\n\n    const handleCreate = () => {\n        const data = {\n            \"name\": inputs.name,\n            \"email\": inputs.email,\n            \"phoneNumber\": phone,\n            \"establishedDate\": new Date(inputs.establishedDate).getTime(),\n            \"address\": fullAddress\n        };\n\n        const editData = {\n            \"name\": inputs.name,\n            \"email\": inputs.email,\n            \"phoneNumber\": phone,\n            \"address\": fullAddress,\n            \"officeId\": info ? info.id : ''\n        };\n\n        if (inputs.name && inputs.email && phone && inputs.establishedDate && fullAddress) {\n            if (info) {\n                dispatch(officeActions.editOffice(editData))\n                setDisabled(true)\n            } else {\n                dispatch(officeActions.createOffice(data))\n            }\n        } else {\n            setError(\n                !inputs.name ? 'name' :\n                    !inputs.email ? 'email' :\n                        !phone ? 'phone' :\n                            !inputs.establishedDate ? 'date' :\n                                'Input is not field'\n            )\n        }\n    }\n\n    return (\n        <div className={globalScreens.createInputsWrapper}>\n\n            <div className={globalInputs.spaceBetween}>\n                <div className={globalInputs.centerItem}>\n\n                    {info && <Circle number={1} back={Colors.ThemeOrange}/>}\n                    <p className={globalStyle.title}>Carrier Information</p>\n                </div>\n\n                {info &&\n                <EditSaveButtons\n                    handleChancel={() => setDisabled(true)}\n                    handleSetEdit={() => setDisabled(false)}\n                    handleSaveInfo={handleCreate}\n                />}\n            </div>\n\n\n            <div style={{display: 'flex'}}>\n                {info && <Line height={'281px'}/>}\n                <div style={{width: '100%'}}>\n                    <div className={globalScreens.basicInfo}>\n                        <p className={globalStyle.smallText}>Basic Information</p>\n                        <div className={globalScreens.basicInfoInputs}>\n\n\n                            <ValidationInput\n                                style={globalInputs.simpleInput}\n                                variant={\"outlined\"}\n                                name={\"name\"}\n                                type={\"text\"}\n                                label={\"First Name*\"}\n                                typeError={error === 'name' ? ErrorText.field : ''}\n                                onChange={handleChange}\n                                value={inputs.name}\n                                disabled={disables}\n                            />\n                            <ValidationInput\n                                style={globalInputs.simpleInput}\n                                variant={\"outlined\"}\n                                name={\"last\"}\n                                type={\"text\"}\n                                label={\"Last Name*\"}\n                                typeError={error === 'last' ? ErrorText.field : ''}\n                                onChange={handleChange}\n                                value={inputs.last}\n                                disabled={disables}\n                            />\n                            <ValidationInput\n                                variant={\"outlined\"}\n                                name={\"establishedDate\"}\n                                type={\"date\"}\n                                typeError={error === 'date' ? ErrorText.field : ''}\n                                label={\"Date of Birth*\"}\n                                onChange={handleChange}\n                                value={info ? moment(info.establishedDate).format('YYYY-MM-DD') : inputs.establishedDate}\n                                disabled={disables}\n                            />\n\n                        </div>\n\n\n                        <div className={globalScreens.basicInfoInputs}>\n                            <ValidationInput\n                                style={globalInputs.simpleInput}\n                                variant={\"outlined\"}\n                                name={\"phone\"}\n                                label={\"Phone Number*\"}\n                                type={'number'}\n                                typeError={error === 'phone' ? ErrorText.field : ''}\n                                onChange={handleChangePhone}\n                                value={phone}\n                                disabled={disables}\n                            />\n\n                            <ValidationInput\n                                style={globalInputs.simpleInput}\n                                variant={\"outlined\"}\n                                name={\"second\"}\n                                label={\"Secondary Number\"}\n                                type={'number'}\n                                typeError={error === 'second' ? ErrorText.field : ''}\n                                onChange={handleChangePhone}\n                                value={phone}\n                                disabled={disables}\n                            />\n\n                            <ValidationInput\n                                style={globalInputs.simpleInput}\n                                variant={\"outlined\"}\n                                name={\"license\"}\n                                type={\"text\"}\n                                label={\"Driverâ€™s License*\"}\n                                typeError={error === 'license' ? ErrorText.field : ''}\n                                onChange={handleChange}\n                                value={inputs.license}\n                                disabled={disables}\n                            />\n\n                            <SelectInput\n                                name={\"issuing\"}\n                                label={\"Issuing State*\"}\n                                handleSelect={handleChange}\n                                value={inputs.issuing}\n                                list={['officesListReserve']}\n                                typeError={error === 'issuing' ? ErrorText.field : ''}\n                                type={'id'}\n                            />\n                        </div>\n\n                        <div style={{width: '48%'}} className={globalScreens.basicInfoInputs}>\n\n                            <ValidationInput\n                                style={globalInputs.simpleInput}\n                                validator={EmailValidator}\n                                variant={\"outlined\"}\n                                name={\"email\"}\n                                type={\"email\"}\n                                label={\"Email Address*\"}\n                                typeError={error === 'email' ? ErrorText.field : error === 'Not valid email' ? 'Not valid email' : ''}\n                                sendBoolean={(bool) => bool === true ? setError(\"Not valid email\") : setError('')}\n                                onChange={handleChange}\n                                value={inputs.email}\n                                disabled={disables}\n                            />\n                            <ValidationInput\n                                validator={EmailValidator}\n                                variant={\"outlined\"}\n                                name={\"remittancev\"}\n                                type={\"email\"}\n                                label={\"Remittancev Email*\"}\n                                typeError={error === 'remittancev' ? ErrorText.field : error === 'Not valid email' ? 'Not valid email' : ''}\n                                sendBoolean={(bool) => bool === true ? setError(\"Not valid email\") : setError('')}\n                                onChange={handleChange}\n                                value={inputs.remittancev}\n                                disabled={disables}\n                            />\n\n                        </div>\n                    </div>\n\n                    <div className={globalScreens.basicInfo}>\n                        <p className={globalStyle.smallText}>Shipping Address</p>\n\n                        <div className={globalScreens.basicInfoInputs}>\n                            <AddressInput\n                                info={info}\n                                handleSelectValue={setFullAddress}\n                                disabled={disables}\n                            />\n                        </div>\n\n                    </div>\n\n\n                    <div className={globalScreens.basicInfo}>\n                        <p className={globalStyle.smallText}>Mailing Address</p>\n\n\n\n\n                            <RadioButtons disabled={ !fullAddress }/>\n\n\n                        <div className={globalScreens.basicInfoInputs}>\n                            <AddressInput\n                                info={info}\n                                handleSelectValue={setFullAddress}\n                                disabled={disables}\n                            />\n                        </div>\n\n                    </div>\n                </div>\n\n            </div>\n\n\n            <p>{error === 'Input is not field' ? error : ''}</p>\n            {!info &&\n            <CreateChancel\n                classes={globalInputs.buttonsStyle}\n                create={\"Create\"}\n                chancel={\"Cancel\"}\n                onCreate={handleCreate}\n                onClose={() => history.push('/carriers')}\n            />\n            }\n        </div>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}