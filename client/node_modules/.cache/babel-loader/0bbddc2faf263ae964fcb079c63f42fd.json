{"ast":null,"code":"var _jsxFileName = \"/Users/eachbase5/Desktop/untitled folder/wellnessDaisy/client/src/fragments/humanResources/createAdmin/core/createAdminInputs.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { EmailValidator, useGlobalStyles, useGlobalText, createInputsWrapper, ErrorText, Colors } from \"@eachbase/utils\";\nimport { AddressInput, Circle, CreateChancel, EditSaveButtons, Line, ValidationInput } from \"@eachbase/components\";\nimport { useDispatch } from \"react-redux\";\nimport { adminActions } from \"@eachbase/store\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CreateAdminInputs = ({\n  handleChangeFirstName,\n  handleChangeLastName,\n  info\n}) => {\n  _s();\n\n  const globalStyle = useGlobalText();\n  const globalInputs = useGlobalStyles();\n  const globalScreens = createInputsWrapper();\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [disables, setDisabled] = useState(info ? true : false);\n  const [error, setError] = useState(\"\");\n  const [inputs, setInputs] = useState(info ? { ...info\n  } : {});\n  const [fullAddress, setFullAddress] = useState('');\n\n  const handleChange = e => setInputs(prevState => ({ ...prevState,\n    [e.target.name]: e.target.value\n  }), error === e.target.name && setError(''), e.target.name === 'firstName' && handleChangeFirstName(e.target.value), e.target.name === 'lastName' && handleChangeLastName(e.target.value));\n\n  const handleCheck = bool => {\n    if (bool === true) {\n      setError(\"Not valid email\");\n    } else {\n      setError(\"\");\n    }\n  };\n\n  const handleCreate = () => {\n    const data = {\n      \"firstName\": inputs.firstName,\n      \"lastName\": inputs.lastName,\n      \"username\": inputs.username,\n      \"email\": inputs.email,\n      \"phoneNumber\": '14842989314',\n      // \"phoneNumber\": inputs.phoneNumber,\n      \"ssn\": 0,\n      \"dl\": \"string\",\n      \"role\": \"Admin\",\n      \"address\": fullAddress\n    };\n    dispatch(adminActions.createAdmin(data));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: globalScreens.createInputsWrapper,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: globalInputs.spaceBetween,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: globalInputs.centerItem,\n        children: [info && /*#__PURE__*/_jsxDEV(Circle, {\n          number: 1,\n          back: Colors.ThemeYellow\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: globalStyle.title,\n          children: \"Person Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), info && /*#__PURE__*/_jsxDEV(EditSaveButtons, {\n        handleChancel: () => setDisabled(true),\n        handleSetEdit: () => setDisabled(false),\n        handleSaveInfo: handleCreate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      children: [info && /*#__PURE__*/_jsxDEV(Line, {\n        height: '281px'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: globalScreens.basicInfo,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: globalStyle.smallText,\n            children: \"Basic Information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: globalScreens.basicInfoInputs,\n              children: [/*#__PURE__*/_jsxDEV(ValidationInput, {\n                style: globalInputs.simpleInput,\n                variant: \"outlined\",\n                name: \"firstName\",\n                label: \"First Name*\",\n                value: inputs.firstName,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(ValidationInput, {\n                style: globalInputs.simpleInput,\n                variant: \"outlined\",\n                name: \"lastName\",\n                label: \"Last Name*\",\n                value: inputs.lastName,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(ValidationInput, {\n                style: globalInputs.simpleInput,\n                variant: \"outlined\",\n                name: \"username\",\n                label: \"Username\",\n                value: inputs.username,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(ValidationInput, {\n                variant: \"outlined\",\n                name: \"role\",\n                label: \"Role\",\n                value: inputs.role,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: globalScreens.basicInfoInputs,\n              children: [/*#__PURE__*/_jsxDEV(ValidationInput, {\n                style: globalInputs.simpleInput,\n                validator: EmailValidator,\n                variant: \"outlined\",\n                name: \"email\",\n                type: \"email\",\n                label: \"Email Address*\",\n                typeError: error === 'email' ? ErrorText.field : error === 'Not valid email' ? 'Not valid email' : '',\n                sendBoolean: handleCheck,\n                value: inputs.email,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(ValidationInput, {\n                style: globalInputs.simpleInput,\n                variant: \"outlined\",\n                name: \"phoneNumber\",\n                label: \"Phone Number*\",\n                type: 'number',\n                typeError: error === 'phone' ? ErrorText.field : '',\n                value: inputs.phoneNumber,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(ValidationInput, {\n                style: globalInputs.simpleInput,\n                variant: \"outlined\",\n                name: \"ssn\",\n                label: \"SSN\",\n                value: inputs.ssn,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(ValidationInput, {\n                variant: \"outlined\",\n                name: \"driverLicense\",\n                label: \"Driver License\",\n                value: inputs.driverLicense,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: globalScreens.basicInfo,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: globalStyle.smallText,\n            children: \"Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: globalScreens.basicInfoInputs,\n            children: /*#__PURE__*/_jsxDEV(AddressInput, {\n              handleSelectValue: setFullAddress\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), !info && /*#__PURE__*/_jsxDEV(CreateChancel, {\n      classes: globalInputs.buttonsStyle,\n      create: \"Create\",\n      chancel: \"Cancel\",\n      onCreate: handleCreate,\n      onClose: () => history.push(\"/humanResources\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CreateAdminInputs, \"y7H0hPL3JrHy0r4+YMKpIa5m8sw=\", false, function () {\n  return [useGlobalText, useGlobalStyles, useDispatch, useHistory];\n});\n\n_c = CreateAdminInputs;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateAdminInputs\");","map":{"version":3,"sources":["/Users/eachbase5/Desktop/untitled folder/wellnessDaisy/client/src/fragments/humanResources/createAdmin/core/createAdminInputs.js"],"names":["React","useState","useHistory","EmailValidator","useGlobalStyles","useGlobalText","createInputsWrapper","ErrorText","Colors","AddressInput","Circle","CreateChancel","EditSaveButtons","Line","ValidationInput","useDispatch","adminActions","CreateAdminInputs","handleChangeFirstName","handleChangeLastName","info","globalStyle","globalInputs","globalScreens","dispatch","history","disables","setDisabled","error","setError","inputs","setInputs","fullAddress","setFullAddress","handleChange","e","prevState","target","name","value","handleCheck","bool","handleCreate","data","firstName","lastName","username","email","createAdmin","spaceBetween","centerItem","ThemeYellow","title","display","width","basicInfo","smallText","basicInfoInputs","simpleInput","role","field","phoneNumber","ssn","driverLicense","buttonsStyle","push"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  EmailValidator,\n  useGlobalStyles,\n  useGlobalText,\n  createInputsWrapper, ErrorText, Colors\n} from \"@eachbase/utils\";\nimport {AddressInput, Circle, CreateChancel, EditSaveButtons, Line, ValidationInput} from \"@eachbase/components\";\nimport { useDispatch } from \"react-redux\";\nimport { adminActions } from \"@eachbase/store\";\n\nexport const CreateAdminInputs = ({ handleChangeFirstName, handleChangeLastName, info }) => {\n  const globalStyle = useGlobalText();\n  const globalInputs = useGlobalStyles();\n  const globalScreens = createInputsWrapper();\n  const dispatch = useDispatch()\n  const history = useHistory();\n  const [disables, setDisabled] = useState( info ? true : false)\n  const [error, setError] = useState(\"\");\n  const [inputs, setInputs] = useState(info ? { ...info } : {});\n\n\n  const [fullAddress, setFullAddress] =useState('')\n\n\n  const handleChange = e => setInputs(\n    prevState => ({ ...prevState, [e.target.name]: e.target.value }),\n          error === e.target.name && setError(''),\n          e.target.name === 'firstName' && handleChangeFirstName(e.target.value),\n          e.target.name === 'lastName' && handleChangeLastName(e.target.value),\n  );\n\n  const handleCheck = (bool) => {\n    if (bool === true) {\n      setError(\"Not valid email\");\n    } else {\n      setError(\"\");\n    }\n  };\n\n  const handleCreate =()=>{\n   const data ={\n     \"firstName\": inputs.firstName,\n     \"lastName\": inputs.lastName,\n     \"username\": inputs.username,\n     \"email\": inputs.email,\n     \"phoneNumber\": '14842989314',\n\n     // \"phoneNumber\": inputs.phoneNumber,\n     \"ssn\": 0,\n     \"dl\": \"string\",\n     \"role\": \"Admin\",\n     \"address\":fullAddress,\n   }\n\n    dispatch(adminActions.createAdmin(data))\n\n  }\n\n  return (\n    <div className={globalScreens.createInputsWrapper}>\n\n      <div className={globalInputs.spaceBetween}>\n        <div className={globalInputs.centerItem}>\n\n          {info && <Circle number={1} back={Colors.ThemeYellow}/> }\n          <p className={globalStyle.title}>Person Information</p>\n        </div>\n\n        {info &&\n        <EditSaveButtons\n            handleChancel={() => setDisabled(true)}\n            handleSetEdit={() => setDisabled(false)}\n            handleSaveInfo={handleCreate}\n        />\n\n        }\n\n      </div>\n\n      <div style={{display:'flex', }}>\n\n        {info &&  <Line height={'281px'}/> }\n\n        <div style={{ width:'100%'}}>\n\n        <div className={globalScreens.basicInfo}>\n        <p className={globalStyle.smallText}>Basic Information</p>\n\n        <div>\n          <div className={globalScreens.basicInfoInputs}>\n\n            <ValidationInput\n              style={globalInputs.simpleInput}\n              variant={\"outlined\"}\n              name={\"firstName\"}\n              label={\"First Name*\"}\n              value={inputs.firstName}\n              onChange={handleChange}\n            />\n            <ValidationInput\n              style={globalInputs.simpleInput}\n              variant={\"outlined\"}\n              name={\"lastName\"}\n              label={\"Last Name*\"}\n              value={inputs.lastName}\n              onChange={handleChange}\n            />\n            <ValidationInput\n              style={globalInputs.simpleInput}\n              variant={\"outlined\"}\n              name={\"username\"}\n              label={\"Username\"}\n              value={inputs.username}\n              onChange={handleChange}\n\n            />\n            <ValidationInput\n              variant={\"outlined\"}\n              name={\"role\"}\n              label={\"Role\"}\n              value={inputs.role}\n              onChange={handleChange}\n            />\n\n          </div>\n\n          <div className={globalScreens.basicInfoInputs}>\n            <ValidationInput\n              style={globalInputs.simpleInput}\n              validator={EmailValidator}\n              variant={\"outlined\"}\n              name={\"email\"}\n              type={\"email\"}\n              label={\"Email Address*\"}\n              typeError={error === 'email' ? ErrorText.field : error === 'Not valid email' ?  'Not valid email' : ''}\n              sendBoolean={ handleCheck }\n              value={inputs.email}\n              onChange={handleChange}\n            />\n\n            <ValidationInput\n              style={globalInputs.simpleInput}\n              variant={\"outlined\"}\n              name={\"phoneNumber\"}\n              label={\"Phone Number*\"}\n              type={'number'}\n              typeError={ error === 'phone' ? ErrorText.field : ''}\n              value={inputs.phoneNumber}\n              onChange={handleChange}\n            />\n\n\n            <ValidationInput\n              style={globalInputs.simpleInput}\n              variant={\"outlined\"}\n              name={\"ssn\"}\n              label={\"SSN\"}\n              value={inputs.ssn}\n              onChange={handleChange}\n            />\n\n            <ValidationInput\n              variant={\"outlined\"}\n              name={\"driverLicense\"}\n              label={\"Driver License\"}\n              value={inputs.driverLicense}\n              onChange={handleChange}\n            />\n\n          </div>\n\n\n        </div>\n      </div>\n\n      <div className={globalScreens.basicInfo}>\n        <p className={globalStyle.smallText}>Address</p>\n        <div className={globalScreens.basicInfoInputs}>\n          <AddressInput\n            handleSelectValue={setFullAddress}\n          />\n      </div>\n      </div>\n\n        </div>\n\n      </div>\n      {!info &&\n      <CreateChancel\n          classes={globalInputs.buttonsStyle}\n          create={\"Create\"}\n          chancel={\"Cancel\"}\n          onCreate={handleCreate}\n          onClose={() => history.push(\"/humanResources\")}\n      />\n      }\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}