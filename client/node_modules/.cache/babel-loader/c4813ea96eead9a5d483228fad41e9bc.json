{"ast":null,"code":"var _jsxFileName = \"/Users/eachbase5/Desktop/untitled folder/wellnessDaisy/client/src/components/card/notes.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Table, TableCell, TableContainer } from \"@material-ui/core\";\nimport { useGlobalStyles } from \"@eachbase/utils\";\nimport { TableBodyComponent, TableHeadComponent } from \"@eachbase/components\";\nimport { SearchAndFilter } from \"../inputs\";\nimport { useSelector } from \"react-redux\";\nimport { PaginationItem } from \"../pagination\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Notes = ({\n  headerTitles,\n  bodyTitles\n}) => {\n  _s();\n\n  const officesStyle = makeStyles(() => ({\n    thWidth: {\n      '&:last-child': {\n        width: '7%'\n      },\n      '&:nth-last-child(2)': {\n        width: '58%'\n      }\n    }\n  }));\n  const classes = officesStyle();\n  const globalStyle = useGlobalStyles();\n  const [page, setPage] = useState(1);\n  const {\n    officesList\n  } = useSelector(state => ({\n    officesList: state.offices.officesList,\n    httpOnLoad: state.httpOnLoad\n  }));\n\n  const changePage = number => {\n    setPage(number);\n  }; // const list = officesList && officesList.length && officesList[page - 1]\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: globalStyle.tableWrapper,\n    children: /*#__PURE__*/_jsxDEV(TableContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Table, {\n        className: globalStyle.table,\n        size: \"small\",\n        \"aria-label\": \"a dense table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHeadComponent, {\n          children: headerTitles && headerTitles.map((headerItem, index) => {\n            return /*#__PURE__*/_jsxDEV(TableCell, {\n              className: classes.thWidth,\n              children: /*#__PURE__*/_jsxDEV(SearchAndFilter, {\n                title: headerItem.title,\n                custom: headerItem.sortable\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 41\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 37\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableBodyComponent, {\n          children: bodyTitles && bodyTitles.map((item, index) => {\n            return /*#__PURE__*/_jsxDEV(TableCell, {\n              children: item.title\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 37\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PaginationItem, {\n        text: `Showing 30 to 30 of 200 entries`,\n        handleReturn: number => changePage(number),\n        page: page,\n        count: officesList.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Notes, \"kkI1ZIQNP8NxnwFYU7tn7VZ4jlk=\", false, function () {\n  return [useGlobalStyles, useSelector];\n});\n\n_c = Notes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Notes\");","map":{"version":3,"sources":["/Users/eachbase5/Desktop/untitled folder/wellnessDaisy/client/src/components/card/notes.js"],"names":["React","useState","Table","TableCell","TableContainer","useGlobalStyles","TableBodyComponent","TableHeadComponent","SearchAndFilter","useSelector","PaginationItem","makeStyles","Notes","headerTitles","bodyTitles","officesStyle","thWidth","width","classes","globalStyle","page","setPage","officesList","state","offices","httpOnLoad","changePage","number","tableWrapper","table","map","headerItem","index","title","sortable","item","length"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport {Table, TableCell, TableContainer} from \"@material-ui/core\";\nimport {useGlobalStyles} from \"@eachbase/utils\";\nimport {TableBodyComponent, TableHeadComponent} from \"@eachbase/components\";\n\nimport {SearchAndFilter} from \"../inputs\";\nimport {useSelector} from \"react-redux\";\nimport {PaginationItem} from \"../pagination\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nexport const Notes = ({headerTitles, bodyTitles}) => {\n\n    const officesStyle = makeStyles(() => ({\n        thWidth: {\n            '&:last-child': {\n                width: '7%'\n            },\n            '&:nth-last-child(2)': {\n                width: '58%'\n            },\n        },\n    }));\n\n    const classes = officesStyle()\n\n    const globalStyle = useGlobalStyles();\n\n    const [page, setPage] = useState(1);\n    const {officesList} = useSelector((state) => ({\n        officesList: state.offices.officesList,\n        httpOnLoad: state.httpOnLoad,\n    }));\n    const changePage = (number) => {\n        setPage(number);\n    };\n    // const list = officesList && officesList.length && officesList[page - 1]\n\n    return (\n        <div className={globalStyle.tableWrapper}>\n            <TableContainer>\n                <Table\n                    className={globalStyle.table}\n                    size=\"small\"\n                    aria-label=\"a dense table\"\n                >\n                    <TableHeadComponent>\n                        {\n                            headerTitles && headerTitles.map((headerItem, index) => {\n                                return (\n                                    <TableCell key={index} className={classes.thWidth}>\n                                        <SearchAndFilter title={headerItem.title} custom={headerItem.sortable}/>\n                                    </TableCell>\n                                )\n                            })\n                        }\n                    </TableHeadComponent>\n\n                    <TableBodyComponent>\n                        {\n                            bodyTitles && bodyTitles.map((item, index) => {\n                                return (\n                                    <TableCell key={index}>{item.title}</TableCell>\n                                )\n                            })\n                        }\n                    </TableBodyComponent>\n                </Table>\n                <PaginationItem\n                    text={`Showing 30 to 30 of 200 entries`}\n                    handleReturn={(number) => changePage(number)}\n                    page={page}\n                    count={officesList.length}\n                />\n            </TableContainer>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}