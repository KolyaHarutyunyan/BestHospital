{"ast":null,"code":"var _jsxFileName = \"/Users/eachbase5/Desktop/untitled folder/wellnessDaisy/client/src/fragments/staff/createStaff/core/createStaff.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { createStaffModalStyle } from \"./style\";\nimport { Steps, CloseButton } from \"@eachbase/components\";\nimport { useGlobalTextStyles } from \"@eachbase/utils\";\nimport { AddressInput, ValidationInput, SelectInput, CreateChancel } from \"@eachbase/components\";\nimport { EmailValidator, ErrorText } from \"@eachbase/utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst steps = ['General Info', 'Address', 'Other Details'];\nconst issuingStateList = [{\n  name: '1'\n}, {\n  name: '2'\n}];\nconst departmentList = [{\n  name: '3'\n}, {\n  name: '4'\n}];\nconst supervisorList = [{\n  name: '5'\n}, {\n  name: '6'\n}];\nconst residencyList = [{\n  name: '7'\n}, {\n  name: '8'\n}];\nconst genderList = [{\n  name: 'Male'\n}, {\n  name: 'Famele'\n}, {\n  name: 'Other'\n}];\nexport const CreateStaff = ({\n  handleClose\n}) => {\n  _s();\n\n  const [error, setError] = useState(\"\");\n  const [inputs, setInputs] = useState({});\n  console.log(inputs, 'inputs');\n  const classes = createStaffModalStyle();\n  const globalText = useGlobalTextStyles();\n\n  const handleCheck = bool => {\n    if (bool === true) {\n      setError(\"Not valid email\");\n    } else {\n      setError(\"\");\n    }\n  };\n\n  const handleChange = e => setInputs(prevState => ({ ...prevState,\n    [e.target.name]: e.target.value\n  }), error === e.target.name && setError(''));\n\n  const handleCreate = () => {\n    // const data = {\n    //     \"name\": inputs.name,\n    //     \"officeId\": inputs.officeName,\n    //     \"email\": inputs.email,\n    //     \"phoneNumber\": phone,\n    //     \"establishedDate\": new Date(inputs.date).getTime(),\n    //     \"address\": fullAddress\n    // }\n    if (inputs.firstName && inputs.middleName && inputs.lastName && inputs.primaryEmail && inputs.secondaryEmail && inputs.primaryPhoneNumber && inputs.secondaryPhoneNumber && inputs.driverLicense && inputs.issuingState && inputs.expirationDate && inputs.department && inputs.supervisor && inputs.residencyStatus && inputs.ssnNumber && inputs.gender && inputs.birthDate) {// dispatch(fundingSourceActions.createFundingSource(data))\n    } else {\n      setError(!inputs.firstName ? 'firstName' : !inputs.middleName ? 'middleNAme' : !inputs.lastName ? 'lastName' : !inputs.primaryEmail ? 'primaryEmail' : !inputs.secondaryEmail ? 'secondaryEmail' : !inputs.primaryPhoneNumber ? 'primaryPhoneNumber' : !inputs.secondaryPhoneNumber ? 'secondaryPhoneNumber' : !inputs.driverLicense ? 'driverLicense' : !inputs.issuingState ? 'issuingState' : !inputs.expirationDate ? 'expirationDate' : !inputs.department ? 'department' : !inputs.supervisor ? 'supervisor' : !inputs.residencyStatus ? 'residencyStatus' : !inputs.ssnNumber ? 'ssnNumber' : !inputs.gender ? 'gender' : !inputs.birthDate ? 'birthDate' : 'Input is not field');\n    }\n  };\n\n  const firstStep = /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ValidationInput, {\n      variant: \"outlined\",\n      sendBoolean: handleCheck,\n      onChange: handleChange,\n      value: inputs.firstName,\n      type: \"text\",\n      label: \"First Name*\",\n      name: \"firstName\",\n      typeError: error === 'firstName' && ErrorText.field\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ValidationInput, {\n      variant: \"outlined\",\n      sendBoolean: handleCheck,\n      onChange: handleChange,\n      value: inputs.middleName,\n      type: \"text\",\n      label: \"Middle Name*\",\n      name: \"middleName\",\n      typeError: error === 'middleName' && ErrorText.field\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ValidationInput, {\n      variant: \"outlined\",\n      sendBoolean: handleCheck,\n      onChange: handleChange,\n      value: inputs.lastName,\n      type: \"text\",\n      label: \"Last Name*\",\n      name: \"lastName\",\n      typeError: error === 'lastName' && ErrorText.field\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ValidationInput // style={globalInputs.simpleInput}\n    , {\n      validator: EmailValidator,\n      variant: \"outlined\",\n      name: \"primaryEmail\",\n      type: \"email\",\n      label: \"Primary Email*\",\n      typeError: error === 'primaryEmail' ? ErrorText.field : error === 'Not valid email' ? 'Not valid email' : '',\n      sendBoolean: handleCheck,\n      value: inputs.primaryEmail,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ValidationInput // style={globalInputs.simpleInput}\n    , {\n      validator: EmailValidator,\n      variant: \"outlined\",\n      name: \"secondaryEmail\",\n      type: \"email\",\n      label: \"Secondary Email*\",\n      typeError: error === 'secondaryEmail' ? ErrorText.field : error === 'Not valid email' ? 'Not valid email' : '',\n      sendBoolean: handleCheck,\n      value: inputs.secondaryEmail,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ValidationInput, {\n      sendBoolean: handleCheck,\n      onChange: handleChange,\n      value: inputs.primaryPhoneNumber,\n      variant: \"outlined\",\n      type: \"number\",\n      label: \"Primary Phone Number*\",\n      name: 'primaryPhoneNumber',\n      typeError: error === 'primaryPhoneNumber' && ErrorText.field\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ValidationInput, {\n      sendBoolean: handleCheck,\n      onChange: handleChange,\n      value: inputs.secondaryPhoneNumber,\n      variant: \"outlined\",\n      type: \"number\",\n      label: \"Secondary Phone Number*\",\n      name: 'secondaryPhoneNumber',\n      typeError: error === 'secondaryPhoneNumber' && ErrorText.field\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 9\n  }, this);\n\n  const secondStep = /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(AddressInput, {\n      Value: \"Street Address*\",\n      flex: \"block\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 9\n  }, this);\n\n  const thirdStep = /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: classes.otherDetailsTitle,\n      children: \"Driver License\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ValidationInput, {\n      variant: \"outlined\",\n      sendBoolean: handleCheck,\n      onChange: handleChange,\n      value: inputs.driverLicense,\n      type: \"text\",\n      label: \"Driver License*\",\n      name: \"driverLicense\",\n      typeError: error === 'driverLicense' && ErrorText.field\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.flexContainer,\n      children: [/*#__PURE__*/_jsxDEV(SelectInput, {\n        style: classes.selectMargin,\n        name: \"issuingState\",\n        label: \"Issuing State*\",\n        handleSelect: handleChange,\n        sendBoolean: handleCheck,\n        value: inputs.issuingState,\n        list: issuingStateList,\n        typeError: error === 'issuingState' ? ErrorText.field : '' // type={'id'}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ValidationInput, {\n        variant: \"outlined\",\n        sendBoolean: handleCheck,\n        onChange: handleChange,\n        value: inputs.expirationDate,\n        type: \"date\",\n        label: \"Expiration Date*\",\n        name: \"expirationDate\",\n        typeError: error === 'expirationDate' && ErrorText.field\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: `${classes.otherDetailsTitle} ${classes.titlePadding}`,\n      children: \"Other\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SelectInput, {\n      name: \"department\",\n      label: \"Department*\",\n      handleSelect: handleChange,\n      sendBoolean: handleCheck,\n      value: inputs.department,\n      list: departmentList,\n      typeError: error === 'department' ? ErrorText.field : '' // type={'id'}\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SelectInput, {\n      name: \"supervisor\",\n      label: \"Supervisor*\",\n      handleSelect: handleChange,\n      sendBoolean: handleCheck,\n      value: inputs.supervisor,\n      list: supervisorList,\n      typeError: error === 'supervisor' ? ErrorText.field : '' // type={'id'}\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SelectInput, {\n      name: \"residencyStatus\",\n      label: \"Residency Status*\",\n      handleSelect: handleChange,\n      sendBoolean: handleCheck,\n      value: inputs.residencyStatus,\n      list: residencyList,\n      typeError: error === 'residencyStatus' ? ErrorText.field : '' // type={'id'}\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ValidationInput, {\n      variant: \"outlined\",\n      sendBoolean: handleCheck,\n      onChange: handleChange,\n      value: inputs.ssnNumber,\n      type: \"number\",\n      label: \"SSN Number*\",\n      name: \"ssnNumber\",\n      typeError: error === 'ssnNumber' && ErrorText.field\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.flexContainer,\n      children: [/*#__PURE__*/_jsxDEV(SelectInput, {\n        style: classes.selectMargin,\n        name: \"gender\",\n        label: \"Gender*\",\n        handleSelect: handleChange,\n        sendBoolean: handleCheck,\n        value: inputs.gender,\n        list: genderList,\n        typeError: error === 'gender' ? ErrorText.field : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ValidationInput, {\n        variant: \"outlined\",\n        sendBoolean: handleCheck,\n        onChange: handleChange,\n        value: inputs.birthDate,\n        type: \"date\",\n        label: \"Date of Birth*\",\n        name: \"birthDate\",\n        typeError: error === 'birthDate' && ErrorText.field\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 198,\n    columnNumber: 9\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.modalDimensions,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: `${globalText.modalTitle} ${classes.modalTitle}`,\n      children: \"Add Staff Member\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.positionedButton,\n      children: /*#__PURE__*/_jsxDEV(CloseButton, {\n        handleCLic: handleClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Steps, {\n      firstStep: firstStep,\n      secondStep: secondStep,\n      thirdStep: thirdStep,\n      stepTitles: steps,\n      handleClose: handleClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 300,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CreateStaff, \"gNe6c7Mb2c943sLxdGXxmSRqaR0=\", false, function () {\n  return [useGlobalTextStyles];\n});\n\n_c = CreateStaff;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateStaff\");","map":{"version":3,"sources":["/Users/eachbase5/Desktop/untitled folder/wellnessDaisy/client/src/fragments/staff/createStaff/core/createStaff.js"],"names":["React","useState","createStaffModalStyle","Steps","CloseButton","useGlobalTextStyles","AddressInput","ValidationInput","SelectInput","CreateChancel","EmailValidator","ErrorText","steps","issuingStateList","name","departmentList","supervisorList","residencyList","genderList","CreateStaff","handleClose","error","setError","inputs","setInputs","console","log","classes","globalText","handleCheck","bool","handleChange","e","prevState","target","value","handleCreate","firstName","middleName","lastName","primaryEmail","secondaryEmail","primaryPhoneNumber","secondaryPhoneNumber","driverLicense","issuingState","expirationDate","department","supervisor","residencyStatus","ssnNumber","gender","birthDate","firstStep","field","secondStep","thirdStep","otherDetailsTitle","flexContainer","selectMargin","titlePadding","modalDimensions","modalTitle","positionedButton"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport {createStaffModalStyle} from \"./style\";\nimport {Steps, CloseButton} from \"@eachbase/components\";\nimport {useGlobalTextStyles} from \"@eachbase/utils\";\nimport {AddressInput, ValidationInput, SelectInput, CreateChancel} from \"@eachbase/components\";\nimport {EmailValidator, ErrorText} from \"@eachbase/utils\";\n\nconst steps = ['General Info', 'Address', 'Other Details']\n\nconst issuingStateList = [\n    {name: '1'},\n    {name: '2'}\n]\nconst departmentList = [\n    {name: '3'},\n    {name: '4'}\n]\nconst supervisorList = [\n    {name: '5'},\n    {name: '6'}\n]\nconst residencyList = [\n    {name: '7'},\n    {name: '8'}\n]\n\nconst genderList = [\n    {name: 'Male'},\n    {name: 'Famele'},\n    {name: 'Other'},\n]\n\nexport const CreateStaff = ({handleClose}) => {\n\n    const [error, setError] = useState(\"\");\n    const [inputs, setInputs] = useState({});\n\n    console.log(inputs,'inputs')\n\n    const classes = createStaffModalStyle()\n    const globalText = useGlobalTextStyles()\n\n    const handleCheck = (bool) => {\n        if (bool === true) {\n            setError(\"Not valid email\");\n        } else {\n            setError(\"\");\n        }\n    };\n    const handleChange = e => setInputs(\n        prevState => (\n            {\n                ...prevState,\n                [e.target.name]: e.target.value\n            }\n        ),\n        error === e.target.name && setError(''),\n    );\n    const handleCreate = () => {\n        // const data = {\n        //     \"name\": inputs.name,\n        //     \"officeId\": inputs.officeName,\n        //     \"email\": inputs.email,\n        //     \"phoneNumber\": phone,\n        //     \"establishedDate\": new Date(inputs.date).getTime(),\n        //     \"address\": fullAddress\n        // }\n        if (inputs.firstName &&\n            inputs.middleName &&\n            inputs.lastName &&\n            inputs.primaryEmail &&\n            inputs.secondaryEmail &&\n            inputs.primaryPhoneNumber &&\n            inputs.secondaryPhoneNumber &&\n            inputs.driverLicense &&\n            inputs.issuingState &&\n            inputs.expirationDate &&\n            inputs.department &&\n            inputs.supervisor &&\n            inputs.residencyStatus &&\n            inputs.ssnNumber &&\n            inputs.gender &&\n            inputs.birthDate\n        ) {\n            // dispatch(fundingSourceActions.createFundingSource(data))\n        } else {\n            setError(\n                !inputs.firstName ? 'firstName' :\n                    !inputs.middleName ? 'middleNAme' :\n                     !inputs.lastName ? 'lastName' :\n                      !inputs.primaryEmail ? 'primaryEmail' :\n                      !inputs.secondaryEmail ? 'secondaryEmail' :\n                      !inputs.primaryPhoneNumber ? 'primaryPhoneNumber' :\n                      !inputs.secondaryPhoneNumber ? 'secondaryPhoneNumber' :\n                       !inputs.driverLicense ? 'driverLicense' :\n                       !inputs.issuingState ? 'issuingState' :\n                       !inputs.expirationDate ? 'expirationDate' :\n                       !inputs.department ? 'department' :\n                        !inputs.supervisor ? 'supervisor' :\n                        !inputs.residencyStatus ? 'residencyStatus' :\n                        !inputs.ssnNumber ? 'ssnNumber' :\n                        !inputs.gender ? 'gender' :\n                        !inputs.birthDate ? 'birthDate' :\n                         'Input is not field'\n            )\n        }\n    }\n    const firstStep = (\n        <React.Fragment>\n            <ValidationInput\n                variant={\"outlined\"}\n                sendBoolean={handleCheck}\n                onChange={handleChange}\n                value={inputs.firstName}\n                type={\"text\"}\n                label={\"First Name*\"}\n                name='firstName'\n                typeError={error === 'firstName' && ErrorText.field}\n            />\n\n            <ValidationInput\n                variant={\"outlined\"}\n                sendBoolean={handleCheck}\n                onChange={handleChange}\n                value={inputs.middleName}\n                type={\"text\"}\n                label={\"Middle Name*\"}\n                name='middleName'\n                typeError={error === 'middleName' && ErrorText.field}\n            />\n\n            <ValidationInput\n                variant={\"outlined\"}\n                sendBoolean={handleCheck}\n                onChange={handleChange}\n                value={inputs.lastName}\n                type={\"text\"}\n                label={\"Last Name*\"}\n                name='lastName'\n                typeError={error === 'lastName' && ErrorText.field}\n            />\n\n            <ValidationInput\n                // style={globalInputs.simpleInput}\n                validator={EmailValidator}\n                variant={\"outlined\"}\n                name={\"primaryEmail\"}\n                type={\"email\"}\n                label={\"Primary Email*\"}\n                typeError={error === 'primaryEmail' ? ErrorText.field : error === 'Not valid email' ? 'Not valid email' : ''}\n                sendBoolean={handleCheck}\n                value={inputs.primaryEmail}\n                onChange={handleChange}\n            />\n\n            <ValidationInput\n                // style={globalInputs.simpleInput}\n                validator={EmailValidator}\n                variant={\"outlined\"}\n                name={\"secondaryEmail\"}\n                type={\"email\"}\n                label={\"Secondary Email*\"}\n                typeError={error === 'secondaryEmail' ? ErrorText.field : error === 'Not valid email' ? 'Not valid email' : ''}\n                sendBoolean={handleCheck}\n                value={inputs.secondaryEmail}\n                onChange={handleChange}\n            />\n            <ValidationInput\n                sendBoolean={handleCheck}\n                onChange={handleChange}\n                value={inputs.primaryPhoneNumber}\n                variant={\"outlined\"}\n                type={\"number\"}\n                label={\"Primary Phone Number*\"}\n                name={'primaryPhoneNumber'}\n                typeError={error === 'primaryPhoneNumber' && ErrorText.field}\n            />\n            <ValidationInput\n                sendBoolean={handleCheck}\n                onChange={handleChange}\n                value={inputs.secondaryPhoneNumber}\n                variant={\"outlined\"}\n                type={\"number\"}\n                label={\"Secondary Phone Number*\"}\n                name={'secondaryPhoneNumber'}\n                typeError={error === 'secondaryPhoneNumber' && ErrorText.field}\n            />\n        </React.Fragment>\n    )\n\n    const secondStep = (\n        <React.Fragment>\n            <AddressInput Value='Street Address*' flex='block'/>\n        </React.Fragment>\n    )\n\n    const thirdStep = (\n        <React.Fragment>\n            <p className={classes.otherDetailsTitle}>Driver License</p>\n            <ValidationInput\n                variant={\"outlined\"}\n                sendBoolean={handleCheck}\n                onChange={handleChange}\n                value={inputs.driverLicense}\n                type={\"text\"}\n                label={\"Driver License*\"}\n                name='driverLicense'\n                typeError={error === 'driverLicense' && ErrorText.field}\n            />\n            <div className={classes.flexContainer}>\n                <SelectInput\n                    style={classes.selectMargin}\n                    name={\"issuingState\"}\n                    label={\"Issuing State*\"}\n                    handleSelect={handleChange}\n                    sendBoolean={handleCheck}\n                    value={inputs.issuingState}\n                    list={issuingStateList}\n                    typeError={error === 'issuingState' ? ErrorText.field : ''}\n                    // type={'id'}\n                />\n                <ValidationInput\n                    variant={\"outlined\"}\n                    sendBoolean={handleCheck}\n                    onChange={handleChange}\n                    value={inputs.expirationDate}\n                    type={\"date\"}\n                    label={\"Expiration Date*\"}\n                    name='expirationDate'\n                    typeError={error === 'expirationDate' && ErrorText.field}\n                />\n            </div>\n            <p className={`${classes.otherDetailsTitle} ${classes.titlePadding}`}>Other</p>\n            <SelectInput\n                name={\"department\"}\n                label={\"Department*\"}\n                handleSelect={handleChange}\n                sendBoolean={handleCheck}\n                value={inputs.department}\n                list={departmentList}\n                typeError={error === 'department' ? ErrorText.field : ''}\n                // type={'id'}\n            />\n            <SelectInput\n                name={\"supervisor\"}\n                label={\"Supervisor*\"}\n                handleSelect={handleChange}\n                sendBoolean={handleCheck}\n                value={inputs.supervisor}\n                list={supervisorList}\n                typeError={error === 'supervisor' ? ErrorText.field : ''}\n                // type={'id'}\n            />\n            <SelectInput\n                name={\"residencyStatus\"}\n                label={\"Residency Status*\"}\n                handleSelect={handleChange}\n                sendBoolean={handleCheck}\n                value={inputs.residencyStatus}\n                list={residencyList}\n                typeError={error === 'residencyStatus' ? ErrorText.field : ''}\n                // type={'id'}\n            />\n            <ValidationInput\n                variant={\"outlined\"}\n                sendBoolean={handleCheck}\n                onChange={handleChange}\n                value={inputs.ssnNumber}\n                type={\"number\"}\n                label={\"SSN Number*\"}\n                name='ssnNumber'\n                typeError={error === 'ssnNumber' && ErrorText.field}\n            />\n            <div className={classes.flexContainer}>\n                <SelectInput\n                    style={classes.selectMargin}\n                    name={\"gender\"}\n                    label={\"Gender*\"}\n                    handleSelect={handleChange}\n                    sendBoolean={handleCheck}\n                    value={inputs.gender}\n                    list={genderList}\n                    typeError={error === 'gender' ? ErrorText.field : ''}\n                />\n                <ValidationInput\n                    variant={\"outlined\"}\n                    sendBoolean={handleCheck}\n                    onChange={handleChange}\n                    value={inputs.birthDate}\n                    type={\"date\"}\n                    label={\"Date of Birth*\"}\n                    name='birthDate'\n                    typeError={error === 'birthDate' && ErrorText.field}\n                />\n            </div>\n        </React.Fragment>\n    )\n\n    return (\n        <div className={classes.modalDimensions}>\n            <h1 className={`${globalText.modalTitle} ${classes.modalTitle}`}>Add Staff Member</h1>\n            <div className={classes.positionedButton}>\n                <CloseButton handleCLic={handleClose}/>\n            </div>\n            <Steps\n                firstStep={firstStep}\n                secondStep={secondStep}\n                thirdStep={thirdStep}\n                stepTitles={steps}\n                handleClose={handleClose}/>\n        </div>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}