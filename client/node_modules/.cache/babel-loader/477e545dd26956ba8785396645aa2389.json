{"ast":null,"code":"var _jsxFileName = \"/Users/eachbase5/Desktop/untitled folder/wellnessDaisy/client/src/fragments/fundingSource/officeInfo/core/payment.js\",\n    _s = $RefreshSig$();\n\nimport { CircleAndTitle, Line, ValidationInput } from '@eachbase/components';\nimport { Colors, useGlobalStyles, ErrorText } from '@eachbase/utils';\nimport { officesInfoFragments } from './index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Payment = ({}) => {\n  _s();\n\n  const classes = officesInfoFragments();\n  const globalInputs = useGlobalStyles();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(CircleAndTitle, {\n      number: 3,\n      back: Colors.ThemeOrange,\n      title: 'Payment Information'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.lineWrapper,\n      children: [/*#__PURE__*/_jsxDEV(Line, {\n        height: '105px'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.inputsWrapper,\n        children: [/*#__PURE__*/_jsxDEV(ValidationInput, {\n          style: globalInputs.simpleInput,\n          variant: \"outlined\",\n          name: \"paid\",\n          type: \"text\",\n          label: \"Paid As\" // typeError={error === 'paid' ? ErrorText.field : ''}\n          // onChange={handleChange}\n          // value={ inputs.paid }\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ValidationInput, {\n          style: globalInputs.simpleInput,\n          variant: \"outlined\",\n          name: \"tax\",\n          type: \"text\",\n          label: \"Tax ID\" // typeError={error === 'tax' ? ErrorText.field : ''}\n          // onChange={handleChange}\n          // value={ inputs.tax }\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(ValidationInput, {\n          style: globalInputs.simpleInput,\n          variant: \"outlined\",\n          name: \"filling\",\n          type: \"text\",\n          label: \"Filling Type\" // typeError={error === 'filling' ? ErrorText.field : ''}\n          // onChange={handleChange}\n          // value={ inputs.filling }\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(ValidationInput, {\n          style: globalInputs.simpleInput,\n          variant: \"outlined\",\n          name: \"routing\",\n          type: \"text\",\n          label: \"Routing Number\" // typeError={error === 'routing' ? ErrorText.field : ''}\n          // onChange={handleChange}\n          // value={ inputs.routing }\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(ValidationInput, {\n          style: globalInputs.simpleInput,\n          variant: \"outlined\",\n          name: \"account\",\n          type: \"text\",\n          label: \"Account Number\" // typeError={error === 'account' ? ErrorText.field : ''}\n          // onChange={handleChange}\n          // value={ inputs.account }\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Payment, \"np0rjy1n/LFwCLr6hJ8Xs/fjfyY=\", false, function () {\n  return [useGlobalStyles];\n});\n\n_c = Payment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Payment\");","map":{"version":3,"sources":["/Users/eachbase5/Desktop/untitled folder/wellnessDaisy/client/src/fragments/fundingSource/officeInfo/core/payment.js"],"names":["CircleAndTitle","Line","ValidationInput","Colors","useGlobalStyles","ErrorText","officesInfoFragments","Payment","classes","globalInputs","ThemeOrange","lineWrapper","inputsWrapper","simpleInput"],"mappings":";;;AAAA,SAASA,cAAT,EAAyBC,IAAzB,EAA+BC,eAA/B,QAAsD,sBAAtD;AACA,SAASC,MAAT,EAAiBC,eAAjB,EAAkCC,SAAlC,QAAmD,iBAAnD;AACA,SAASC,oBAAT,QAAqC,SAArC;;AAEA,OAAO,MAAMC,OAAO,GAAE,CAAC,EAAD,KAAM;AAAA;;AAExB,QAAMC,OAAO,GAAGF,oBAAoB,EAApC;AACA,QAAMG,YAAY,GAAGL,eAAe,EAApC;AACA,sBAEI;AAAA,4BACE,QAAC,cAAD;AAAgB,MAAA,MAAM,EAAE,CAAxB;AAA2B,MAAA,IAAI,EAAED,MAAM,CAACO,WAAxC;AAAqD,MAAA,KAAK,EAAE;AAA5D;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAK,MAAA,SAAS,EAAEF,OAAO,CAACG,WAAxB;AAAA,8BACU,QAAC,IAAD;AAAM,QAAA,MAAM,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA,cADV,eAGU;AAAK,QAAA,SAAS,EAAEH,OAAO,CAACI,aAAxB;AAAA,gCAEA,QAAC,eAAD;AACI,UAAA,KAAK,EAAEH,YAAY,CAACI,WADxB;AAEI,UAAA,OAAO,EAAE,UAFb;AAGI,UAAA,IAAI,EAAE,MAHV;AAII,UAAA,IAAI,EAAE,MAJV;AAKI,UAAA,KAAK,EAAE,SALX,CAMI;AACA;AACA;;AARJ;AAAA;AAAA;AAAA;AAAA,gBAFA,eAYC,QAAC,eAAD;AACG,UAAA,KAAK,EAAEJ,YAAY,CAACI,WADvB;AAEG,UAAA,OAAO,EAAE,UAFZ;AAGG,UAAA,IAAI,EAAE,KAHT;AAIG,UAAA,IAAI,EAAE,MAJT;AAKG,UAAA,KAAK,EAAE,QALV,CAMG;AACA;AACA;;AARH;AAAA;AAAA;AAAA;AAAA,gBAZD,eAsBC,QAAC,eAAD;AACG,UAAA,KAAK,EAAEJ,YAAY,CAACI,WADvB;AAEG,UAAA,OAAO,EAAE,UAFZ;AAGG,UAAA,IAAI,EAAE,SAHT;AAIG,UAAA,IAAI,EAAE,MAJT;AAKG,UAAA,KAAK,EAAE,cALV,CAMG;AACA;AACA;;AARH;AAAA;AAAA;AAAA;AAAA,gBAtBD,eAgCC,QAAC,eAAD;AACG,UAAA,KAAK,EAAEJ,YAAY,CAACI,WADvB;AAEG,UAAA,OAAO,EAAE,UAFZ;AAGG,UAAA,IAAI,EAAE,SAHT;AAIG,UAAA,IAAI,EAAE,MAJT;AAKG,UAAA,KAAK,EAAE,gBALV,CAMG;AACA;AACA;;AARH;AAAA;AAAA;AAAA;AAAA,gBAhCD,eA0CC,QAAC,eAAD;AACG,UAAA,KAAK,EAAEJ,YAAY,CAACI,WADvB;AAEG,UAAA,OAAO,EAAE,UAFZ;AAGG,UAAA,IAAI,EAAE,SAHT;AAIG,UAAA,IAAI,EAAE,MAJT;AAKG,UAAA,KAAK,EAAE,gBALV,CAMG;AACA;AACA;;AARH;AAAA;AAAA;AAAA;AAAA,gBA1CD;AAAA;AAAA;AAAA;AAAA;AAAA,cAHV;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAkEH,CAtEM;;GAAMN,O;UAGYH,e;;;KAHZG,O","sourcesContent":["import { CircleAndTitle, Line, ValidationInput } from '@eachbase/components'\nimport { Colors, useGlobalStyles, ErrorText } from '@eachbase/utils'\nimport { officesInfoFragments } from './index'\n\nexport const Payment =({})=>{\n\n    const classes = officesInfoFragments() \n    const globalInputs = useGlobalStyles()\n    return(\n\n        <div>\n          <CircleAndTitle number={3} back={Colors.ThemeOrange} title={'Payment Information'}/>\n\n\n          <div className={classes.lineWrapper}>\n                    <Line height={'105px'}/>\n\n                    <div className={classes.inputsWrapper}>\n                   \n                    <ValidationInput\n                        style={globalInputs.simpleInput}\n                        variant={\"outlined\"}\n                        name={\"paid\"}\n                        type={\"text\"}\n                        label={\"Paid As\"}\n                        // typeError={error === 'paid' ? ErrorText.field : ''}\n                        // onChange={handleChange}\n                        // value={ inputs.paid }\n                    />\n                     <ValidationInput\n                        style={globalInputs.simpleInput}\n                        variant={\"outlined\"}\n                        name={\"tax\"}\n                        type={\"text\"}\n                        label={\"Tax ID\"}\n                        // typeError={error === 'tax' ? ErrorText.field : ''}\n                        // onChange={handleChange}\n                        // value={ inputs.tax }\n                    />\n                     <ValidationInput\n                        style={globalInputs.simpleInput}\n                        variant={\"outlined\"}\n                        name={\"filling\"}\n                        type={\"text\"}\n                        label={\"Filling Type\"}\n                        // typeError={error === 'filling' ? ErrorText.field : ''}\n                        // onChange={handleChange}\n                        // value={ inputs.filling }\n                    />\n                     <ValidationInput\n                        style={globalInputs.simpleInput}\n                        variant={\"outlined\"}\n                        name={\"routing\"}\n                        type={\"text\"}\n                        label={\"Routing Number\"}\n                        // typeError={error === 'routing' ? ErrorText.field : ''}\n                        // onChange={handleChange}\n                        // value={ inputs.routing }\n                    />\n                     <ValidationInput\n                        style={globalInputs.simpleInput}\n                        variant={\"outlined\"}\n                        name={\"account\"}\n                        type={\"text\"}\n                        label={\"Account Number\"}\n                        // typeError={error === 'account' ? ErrorText.field : ''}\n                        // onChange={handleChange}\n                        // value={ inputs.account }\n                    />\n                        \n                        </div> \n                    </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}