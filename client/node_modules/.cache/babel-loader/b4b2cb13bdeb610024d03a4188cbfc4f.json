{"ast":null,"code":"import { GET_FUNDING_SOURCE_BY_ID_SUCCESS, GET_FUNDING_SOURCE_SUCCESS, GET_FUNDING_SOURCE_SERVICE_BY_ID_SUCCESS } from \"./fundingSource.types\";\nimport { paginate } from \"@eachbase/utils\";\nconst initialState = {\n  fundingSourceList: [],\n  fundingSourceItem: null\n};\nexport const fundingSourceReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_FUNDING_SOURCE_SUCCESS:\n      return { ...state,\n        fundingSourceList: paginate(action.payload, 10)\n      };\n\n    case GET_FUNDING_SOURCE_BY_ID_SUCCESS:\n      return { ...state,\n        fundingSourceItem: action.payload\n      };\n\n    case GET_FUNDING_SOURCE_SERVICE_BY_ID_SUCCESS:\n      return { ...state,\n        fundingSourceService: action.payload\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/eachbase5/Desktop/untitled folder/wellnessDaisy/client/src/store/fundingSource/fundingSource.reducer.js"],"names":["GET_FUNDING_SOURCE_BY_ID_SUCCESS","GET_FUNDING_SOURCE_SUCCESS","GET_FUNDING_SOURCE_SERVICE_BY_ID_SUCCESS","paginate","initialState","fundingSourceList","fundingSourceItem","fundingSourceReducer","state","action","type","payload","fundingSourceService"],"mappings":"AAAA,SAAQA,gCAAR,EAA0CC,0BAA1C,EAAsEC,wCAAtE,QAAqH,uBAArH;AACA,SAAQC,QAAR,QAAuB,iBAAvB;AAGA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,iBAAiB,EAAC,EADC;AAEnBC,EAAAA,iBAAiB,EAAE;AAFA,CAArB;AAKA,OAAO,MAAMC,oBAAoB,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AACpE,UAASA,MAAM,CAACC,IAAhB;AAEE,SAAMT,0BAAN;AACE,aAAO,EACL,GAAGO,KADE;AAELH,QAAAA,iBAAiB,EAAEF,QAAQ,CAAEM,MAAM,CAACE,OAAT,EAAmB,EAAnB;AAFtB,OAAP;;AAKF,SAAMX,gCAAN;AACE,aAAO,EACL,GAAGQ,KADE;AAELF,QAAAA,iBAAiB,EAAEG,MAAM,CAACE;AAFrB,OAAP;;AAKA,SAAMT,wCAAN;AACA,aAAO,EACL,GAAGM,KADE;AAELI,QAAAA,oBAAoB,EAAGH,MAAM,CAACE;AAFzB,OAAP;;AAOF;AACE,aAAOH,KAAP;AAvBJ;AAyBD,CA1BM","sourcesContent":["import {GET_FUNDING_SOURCE_BY_ID_SUCCESS, GET_FUNDING_SOURCE_SUCCESS, GET_FUNDING_SOURCE_SERVICE_BY_ID_SUCCESS} from \"./fundingSource.types\";\nimport {paginate} from \"@eachbase/utils\";\n\n\nconst initialState = {\n  fundingSourceList:[],\n  fundingSourceItem :null\n};\n\nexport const fundingSourceReducer = (state = initialState, action) => {\n  switch ( action.type ) {\n\n    case  GET_FUNDING_SOURCE_SUCCESS:\n      return {\n        ...state,\n        fundingSourceList: paginate((action.payload), 10),\n      }\n\n    case  GET_FUNDING_SOURCE_BY_ID_SUCCESS:\n      return {\n        ...state,\n        fundingSourceItem: action.payload,\n      }\n\n      case  GET_FUNDING_SOURCE_SERVICE_BY_ID_SUCCESS:\n      return {\n        ...state,\n        fundingSourceService : action.payload\n      }\n\n\n\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}