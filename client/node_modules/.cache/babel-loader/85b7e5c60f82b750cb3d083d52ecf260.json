{"ast":null,"code":"var _jsxFileName = \"/Users/eachbase5/Desktop/untitled folder/wellnessDaisy/client/src/components/screens/messageScreen.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { screensStyle } from \"./styles\";\nimport { CheckCircle, HighlightOff } from \"@material-ui/icons\";\nimport { Colors, Images } from \"@eachbase/utils\";\nimport { useDispatch } from \"react-redux\";\nimport { authActions } from \"@eachbase/store\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MessageScreen = ({\n  type\n}) => {\n  _s();\n\n  const classes = screensStyle();\n  const dispatch = useDispatch();\n\n  const handleTry = () => {\n    dispatch(authActions.tryAgain());\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.messageScreenWrapper,\n    children: type === true ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.messageScreenModal,\n      children: [/*#__PURE__*/_jsxDEV(CheckCircle, {\n        style: {\n          width: \"48px\",\n          height: \"48px\",\n          color: Colors.ThemeGreen\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: classes.messageScreenText,\n        children: \"Success\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: classes.messageScreenResponse,\n        children: [\"We have sent you a recovery email.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), \" Please check it.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.errMessageScreenModal,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        style: {\n          width: \"48px\",\n          height: \"48px\"\n        },\n        src: Images.error,\n        alt: \"error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: classes.messageScreenText,\n        children: \"Oops!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: classes.messageScreenResponse,\n        children: [\"Sorry we were unable to send you a \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 48\n        }, this), \" recovery email. Please try again.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleTry,\n        className: classes.messageButton,\n        children: \"Try Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MessageScreen, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = MessageScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"MessageScreen\");","map":{"version":3,"sources":["/Users/eachbase5/Desktop/untitled folder/wellnessDaisy/client/src/components/screens/messageScreen.js"],"names":["React","screensStyle","CheckCircle","HighlightOff","Colors","Images","useDispatch","authActions","MessageScreen","type","classes","dispatch","handleTry","tryAgain","messageScreenWrapper","messageScreenModal","width","height","color","ThemeGreen","messageScreenText","messageScreenResponse","errMessageScreenModal","error","messageButton"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,UAA7B;AACA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,oBAA1C;AACA,SAASC,MAAT,EAAiBC,MAAjB,QAA+B,iBAA/B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,WAAT,QAA4B,iBAA5B;;AAEA,OAAO,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAAA;;AACzC,QAAMC,OAAO,GAAGT,YAAY,EAA5B;AACA,QAAMU,QAAQ,GAAGL,WAAW,EAA5B;;AAEA,QAAMM,SAAS,GAAG,MAAM;AACtBD,IAAAA,QAAQ,CAACJ,WAAW,CAACM,QAAZ,EAAD,CAAR;AACD,GAFD;;AAGA,sBACE;AAAK,IAAA,SAAS,EAAEH,OAAO,CAACI,oBAAxB;AAAA,cACGL,IAAI,KAAK,IAAT,gBACC;AAAK,MAAA,SAAS,EAAEC,OAAO,CAACK,kBAAxB;AAAA,8BACE,QAAC,WAAD;AACE,QAAA,KAAK,EAAE;AACLC,UAAAA,KAAK,EAAE,MADF;AAELC,UAAAA,MAAM,EAAE,MAFH;AAGLC,UAAAA,KAAK,EAAEd,MAAM,CAACe;AAHT;AADT;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AAAG,QAAA,SAAS,EAAET,OAAO,CAACU,iBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,eASE;AAAG,QAAA,SAAS,EAAEV,OAAO,CAACW,qBAAtB;AAAA,sEAEE;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,gBAgBC;AAAK,MAAA,SAAS,EAAEX,OAAO,CAACY,qBAAxB;AAAA,8BACE;AACE,QAAA,KAAK,EAAE;AACLN,UAAAA,KAAK,EAAE,MADF;AAELC,UAAAA,MAAM,EAAE;AAFH,SADT;AAKE,QAAA,GAAG,EAAEZ,MAAM,CAACkB,KALd;AAME,QAAA,GAAG,EAAE;AANP;AAAA;AAAA;AAAA;AAAA,cADF,eASE;AAAG,QAAA,SAAS,EAAEb,OAAO,CAACU,iBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF,eAUE;AAAG,QAAA,SAAS,EAAEV,OAAO,CAACW,qBAAtB;AAAA,uEACqC;AAAA;AAAA;AAAA;AAAA,gBADrC;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF,eAcE;AAAQ,QAAA,OAAO,EAAET,SAAjB;AAA4B,QAAA,SAAS,EAAEF,OAAO,CAACc,aAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AAjBJ;AAAA;AAAA;AAAA;AAAA,UADF;AAuCD,CA9CM;;GAAMhB,a;UAEMF,W;;;KAFNE,a","sourcesContent":["import React from \"react\";\nimport { screensStyle } from \"./styles\";\nimport { CheckCircle, HighlightOff } from \"@material-ui/icons\";\nimport { Colors, Images } from \"@eachbase/utils\";\nimport { useDispatch } from \"react-redux\";\nimport { authActions } from \"@eachbase/store\";\n\nexport const MessageScreen = ({ type }) => {\n  const classes = screensStyle();\n  const dispatch = useDispatch();\n\n  const handleTry = () => {\n    dispatch(authActions.tryAgain());\n  };\n  return (\n    <div className={classes.messageScreenWrapper}>\n      {type === true ? (\n        <div className={classes.messageScreenModal}>\n          <CheckCircle\n            style={{\n              width: \"48px\",\n              height: \"48px\",\n              color: Colors.ThemeGreen,\n            }}\n          />\n          <p className={classes.messageScreenText}>Success</p>\n          <p className={classes.messageScreenResponse}>\n            We have sent you a recovery email.\n            <br /> Please check it.\n          </p>\n        </div>\n      ) : (\n        <div className={classes.errMessageScreenModal}>\n          <img\n            style={{\n              width: \"48px\",\n              height: \"48px\",\n            }}\n            src={Images.error}\n            alt={\"error\"}\n          />\n          <p className={classes.messageScreenText}>Oops!</p>\n          <p className={classes.messageScreenResponse}>\n            Sorry we were unable to send you a <br /> recovery email. Please try\n            again.\n          </p>\n          <button onClick={handleTry} className={classes.messageButton}>\n            Try Again\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}