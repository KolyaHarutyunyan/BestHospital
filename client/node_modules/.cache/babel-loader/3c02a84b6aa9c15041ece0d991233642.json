{"ast":null,"code":"var _jsxFileName = \"/Users/eachbase5/Desktop/untitled folder/wellnessDaisy/client/src/root/routerSwitcher.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport { MenuBar } from \"@eachbase/fragments\";\nimport { useSelector } from \"react-redux\";\nimport { LoginPage } from \"../pages\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const RouterSwitcher = ({}) => {\n  _s();\n\n  const {\n    accessToken\n  } = useSelector(state => ({\n    accessToken: state.auth.accessToken,\n    isAuthenticated: state.auth.isAuthenticated\n  }));\n  const Token = accessToken ? accessToken : localStorage.getItem(\"access-token\");\n\n  if (window.location.href.length > 150) {\n    localStorage.setItem(\"Reset\", window.location.href);\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MenuBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RouterSwitcher, \"HRSd7qaooXK7PNmoMomDdWduwSE=\", false, function () {\n  return [useSelector];\n});\n\n_c = RouterSwitcher;\n\nvar _c;\n\n$RefreshReg$(_c, \"RouterSwitcher\");","map":{"version":3,"sources":["/Users/eachbase5/Desktop/untitled folder/wellnessDaisy/client/src/root/routerSwitcher.js"],"names":["React","Redirect","Route","Switch","MenuBar","useSelector","LoginPage","RouterSwitcher","accessToken","state","auth","isAuthenticated","Token","localStorage","getItem","window","location","href","length","setItem"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,KAAnB,EAA0BC,MAA1B,QAAwC,kBAAxC;AACA,SAASC,OAAT,QAAwB,qBAAxB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,SAAT,QAA0B,UAA1B;;AAEA,OAAO,MAAMC,cAAc,GAAG,CAAC,EAAD,KAAQ;AAAA;;AACpC,QAAM;AAAEC,IAAAA;AAAF,MAAkBH,WAAW,CAAEI,KAAD,KAAY;AAC9CD,IAAAA,WAAW,EAAEC,KAAK,CAACC,IAAN,CAAWF,WADsB;AAE9CG,IAAAA,eAAe,EAAEF,KAAK,CAACC,IAAN,CAAWC;AAFkB,GAAZ,CAAD,CAAnC;AAKA,QAAMC,KAAK,GAAGJ,WAAW,GACrBA,WADqB,GAErBK,YAAY,CAACC,OAAb,CAAqB,cAArB,CAFJ;;AAIA,MAAIC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,MAArB,GAA8B,GAAlC,EAAuC;AACrCL,IAAAA,YAAY,CAACM,OAAb,CAAqB,OAArB,EAA8BJ,MAAM,CAACC,QAAP,CAAgBC,IAA9C;AACD;;AAED,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,2BAOI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAPJ;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CA1BM;;GAAMV,c;UACaF,W;;;KADbE,c","sourcesContent":["import React from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport { MenuBar } from \"@eachbase/fragments\";\nimport { useSelector } from \"react-redux\";\nimport { LoginPage } from \"../pages\";\n\nexport const RouterSwitcher = ({}) => {\n  const { accessToken } = useSelector((state) => ({\n    accessToken: state.auth.accessToken,\n    isAuthenticated: state.auth.isAuthenticated,\n  }));\n\n  const Token = accessToken\n    ? accessToken\n    : localStorage.getItem(\"access-token\");\n\n  if (window.location.href.length > 150) {\n    localStorage.setItem(\"Reset\", window.location.href);\n  }\n\n  return (\n    <React.Fragment>\n      {/*{!Token ? (*/}\n      {/*  <Switch>*/}\n      {/*    <Route path=\"/login\" exact component={LoginPage} />*/}\n      {/*    <Redirect to={\"/login\"} />*/}\n      {/*  </Switch>*/}\n      {/*) : (*/}\n        <MenuBar />\n      {/*)}*/}\n    </React.Fragment>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}