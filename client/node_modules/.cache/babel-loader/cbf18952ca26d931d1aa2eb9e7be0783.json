{"ast":null,"code":"import { call, put, takeLatest } from \"redux-saga/effects\";\nimport { authService } from \"./admin.service\";\nimport { ACTIVATE_ADMIN, CREATE_ADMIN, GET_ADMIN_BY_ID, GET_ADMIN_BY_ID_SUCCESS, GET_ADMINS, GET_ADMINS_SUCCESS, INACTIVATE_ADMIN } from \"./admin.types\";\nimport { httpRequestsOnErrorsActions } from \"../http_requests_on_errors\";\nimport { httpRequestsOnLoadActions } from \"../http_requests_on_load\";\n\nfunction* createAdmin(action) {\n  try {\n    const res = yield call(authService.createAdminService, action.payload.body);\n    window.location.replace('/humanResources');\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nfunction* getAdmins({\n  action,\n  type\n}) {\n  yield put(httpRequestsOnErrorsActions.removeError(type));\n  yield put(httpRequestsOnLoadActions.appendLoading(type));\n\n  try {\n    const res = yield call(authService.getAdminsService);\n    yield put({\n      type: GET_ADMINS_SUCCESS,\n      payload: res.data.reverse()\n    });\n    yield put(httpRequestsOnLoadActions.removeLoading(type));\n    yield put(httpRequestsOnErrorsActions.removeError(type));\n  } catch (err) {\n    yield put(httpRequestsOnLoadActions.removeLoading(type));\n    yield put(httpRequestsOnErrorsActions.removeError(type));\n    console.log(err);\n  }\n}\n\nfunction* getAdminById(action) {\n  try {\n    const res = yield call(authService.getAdminByIdService, action.payload.adminId);\n    yield put({\n      type: GET_ADMIN_BY_ID_SUCCESS,\n      payload: res.data\n    });\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nfunction* activateAdmin(action) {\n  try {\n    const res = yield call(authService.activateAdminService, action.payload);\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nfunction* inactivateAdmin(action) {\n  try {\n    const res = yield call(authService.inactivateAdminService, action.payload);\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nexport const watchAdmin = function* watchAdminSaga() {\n  yield takeLatest(CREATE_ADMIN, createAdmin);\n  yield takeLatest(GET_ADMINS, getAdmins); // yield takeLatest( GET_ADMIN_BY_ID, getAdminById );\n\n  yield takeLatest(ACTIVATE_ADMIN, activateAdmin);\n  yield takeLatest(INACTIVATE_ADMIN, inactivateAdmin);\n};","map":{"version":3,"sources":["/Users/eachbase5/Desktop/untitled folder/wellnessDaisy/client/src/store/admin/admin.saga.js"],"names":["call","put","takeLatest","authService","ACTIVATE_ADMIN","CREATE_ADMIN","GET_ADMIN_BY_ID","GET_ADMIN_BY_ID_SUCCESS","GET_ADMINS","GET_ADMINS_SUCCESS","INACTIVATE_ADMIN","httpRequestsOnErrorsActions","httpRequestsOnLoadActions","createAdmin","action","res","createAdminService","payload","body","window","location","replace","err","console","log","getAdmins","type","removeError","appendLoading","getAdminsService","data","reverse","removeLoading","getAdminById","getAdminByIdService","adminId","activateAdmin","activateAdminService","inactivateAdmin","inactivateAdminService","watchAdmin","watchAdminSaga"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,UAApB,QAAsC,oBAAtC;AACA,SAASC,WAAT,QAA4B,iBAA5B;AACA,SACEC,cADF,EAEEC,YAFF,EAEgBC,eAFhB,EAEiCC,uBAFjC,EAE0DC,UAF1D,EAEsEC,kBAFtE,EAE0FC,gBAF1F,QAIO,eAJP;AAKA,SAAQC,2BAAR,QAA0C,4BAA1C;AACA,SAAQC,yBAAR,QAAwC,0BAAxC;;AAEA,UAAUC,WAAV,CAAsBC,MAAtB,EAA8B;AAC5B,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMf,IAAI,CAAEG,WAAW,CAACa,kBAAd,EAAkCF,MAAM,CAACG,OAAP,CAAeC,IAAjD,CAAtB;AACAC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwB,iBAAxB;AACD,GAHD,CAGE,OAAOC,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF;;AAED,UAAUG,SAAV,CAAoB;AAACX,EAAAA,MAAD;AAASY,EAAAA;AAAT,CAApB,EAAoC;AAClC,QAAMzB,GAAG,CAACU,2BAA2B,CAACgB,WAA5B,CAAwCD,IAAxC,CAAD,CAAT;AACA,QAAMzB,GAAG,CAACW,yBAAyB,CAACgB,aAA1B,CAAwCF,IAAxC,CAAD,CAAT;;AACA,MAAI;AACF,UAAMX,GAAG,GAAG,MAAMf,IAAI,CAAEG,WAAW,CAAC0B,gBAAd,CAAtB;AACA,UAAM5B,GAAG,CAAC;AACRyB,MAAAA,IAAI,EAAEjB,kBADE;AAERQ,MAAAA,OAAO,EAAEF,GAAG,CAACe,IAAJ,CAASC,OAAT;AAFD,KAAD,CAAT;AAIA,UAAM9B,GAAG,CAACW,yBAAyB,CAACoB,aAA1B,CAAwCN,IAAxC,CAAD,CAAT;AACA,UAAMzB,GAAG,CAACU,2BAA2B,CAACgB,WAA5B,CAAwCD,IAAxC,CAAD,CAAT;AAED,GATD,CASE,OAAOJ,GAAP,EAAY;AACZ,UAAMrB,GAAG,CAACW,yBAAyB,CAACoB,aAA1B,CAAwCN,IAAxC,CAAD,CAAT;AACA,UAAMzB,GAAG,CAACU,2BAA2B,CAACgB,WAA5B,CAAwCD,IAAxC,CAAD,CAAT;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF;;AAED,UAAUW,YAAV,CAAuBnB,MAAvB,EAA+B;AAC7B,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMf,IAAI,CAAEG,WAAW,CAAC+B,mBAAd,EAAmCpB,MAAM,CAACG,OAAP,CAAekB,OAAlD,CAAtB;AACA,UAAMlC,GAAG,CAAC;AACRyB,MAAAA,IAAI,EAAEnB,uBADE;AAERU,MAAAA,OAAO,EAAEF,GAAG,CAACe;AAFL,KAAD,CAAT;AAKD,GAPD,CAOE,OAAOR,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF;;AACD,UAAUc,aAAV,CAAwBtB,MAAxB,EAAgC;AAC9B,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMf,IAAI,CAAEG,WAAW,CAACkC,oBAAd,EAAoCvB,MAAM,CAACG,OAA3C,CAAtB;AACD,GAFD,CAEE,OAAOK,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF;;AACD,UAAUgB,eAAV,CAA0BxB,MAA1B,EAAkC;AAChC,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMf,IAAI,CAAEG,WAAW,CAACoC,sBAAd,EAAsCzB,MAAM,CAACG,OAA7C,CAAtB;AACD,GAFD,CAEE,OAAOK,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF;;AAED,OAAO,MAAMkB,UAAU,GAAG,UAAUC,cAAV,GAA2B;AACnD,QAAMvC,UAAU,CAAEG,YAAF,EAAgBQ,WAAhB,CAAhB;AACA,QAAMX,UAAU,CAAEM,UAAF,EAAciB,SAAd,CAAhB,CAFmD,CAGnD;;AAEA,QAAMvB,UAAU,CAAEE,cAAF,EAAkBgC,aAAlB,CAAhB;AACA,QAAMlC,UAAU,CAAEQ,gBAAF,EAAoB4B,eAApB,CAAhB;AAED,CARM","sourcesContent":["import { call, put, takeLatest } from \"redux-saga/effects\";\nimport { authService } from \"./admin.service\";\nimport {\n  ACTIVATE_ADMIN,\n  CREATE_ADMIN, GET_ADMIN_BY_ID, GET_ADMIN_BY_ID_SUCCESS, GET_ADMINS, GET_ADMINS_SUCCESS, INACTIVATE_ADMIN,\n\n} from \"./admin.types\";\nimport {httpRequestsOnErrorsActions} from \"../http_requests_on_errors\";\nimport {httpRequestsOnLoadActions} from \"../http_requests_on_load\";\n\nfunction* createAdmin(action) {\n  try {\n    const res = yield call( authService.createAdminService, action.payload.body );\n    window.location.replace('/humanResources')\n  } catch (err) {\n    console.log(err)\n  }\n}\n\nfunction* getAdmins({action, type}) {\n  yield put(httpRequestsOnErrorsActions.removeError(type));\n  yield put(httpRequestsOnLoadActions.appendLoading(type));\n  try {\n    const res = yield call( authService.getAdminsService);\n    yield put({\n      type: GET_ADMINS_SUCCESS,\n      payload: res.data.reverse(),\n    });\n    yield put(httpRequestsOnLoadActions.removeLoading(type));\n    yield put(httpRequestsOnErrorsActions.removeError(type));\n\n  } catch (err) {\n    yield put(httpRequestsOnLoadActions.removeLoading(type));\n    yield put(httpRequestsOnErrorsActions.removeError(type));\n    console.log(err)\n  }\n}\n\nfunction* getAdminById(action) {\n  try {\n    const res = yield call( authService.getAdminByIdService, action.payload.adminId );\n    yield put({\n      type: GET_ADMIN_BY_ID_SUCCESS,\n      payload: res.data,\n    });\n\n  } catch (err) {\n    console.log(err)\n  }\n}\nfunction* activateAdmin(action) {\n  try {\n    const res = yield call( authService.activateAdminService, action.payload );\n  } catch (err) {\n    console.log(err)\n  }\n}\nfunction* inactivateAdmin(action) {\n  try {\n    const res = yield call( authService.inactivateAdminService, action.payload );\n  } catch (err) {\n    console.log(err)\n  }\n}\n\nexport const watchAdmin = function* watchAdminSaga() {\n  yield takeLatest( CREATE_ADMIN, createAdmin );\n  yield takeLatest( GET_ADMINS, getAdmins );\n  // yield takeLatest( GET_ADMIN_BY_ID, getAdminById );\n\n  yield takeLatest( ACTIVATE_ADMIN, activateAdmin );\n  yield takeLatest( INACTIVATE_ADMIN, inactivateAdmin );\n\n};\n"]},"metadata":{},"sourceType":"module"}