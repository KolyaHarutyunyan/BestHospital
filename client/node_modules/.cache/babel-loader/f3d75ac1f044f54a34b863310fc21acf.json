{"ast":null,"code":"import { API_BASE } from '../constants';\nimport axios from \"axios\";\nconst path = `${API_BASE}`;\nconst token = localStorage.getItem('access-token');\nexport const authService = {\n  signIn: body => axios.post('/authn/signin', body),\n  logOut: () => axios.post(`/authn/logout`, {}, {\n    auth: true\n  }),\n  getLink: email => axios.get(`/auth/forgotPassword/${email}`),\n  resetPass: passwords => {\n    let endpoint = `${path}/auth/resetPassword`;\n    const res = axios.post(endpoint, {\n      \"newPassword\": passwords.newPassword,\n      \"confirmation\": passwords.confirmation\n    }, {\n      headers: {\n        'reset-token': passwords.token\n      }\n    });\n    return res;\n  },\n  changePasswordService: data => axios.post('/authn/changePassword', data, {\n    auth: true\n  }),\n  checkUser: id => axios.get(`/authn/${id}`)\n};","map":{"version":3,"sources":["/Users/eachbase5/Desktop/untitled folder/wellnessDaisy/client/src/store/auth/auth.service.js"],"names":["API_BASE","axios","path","token","localStorage","getItem","authService","signIn","body","post","logOut","auth","getLink","email","get","resetPass","passwords","endpoint","res","newPassword","confirmation","headers","changePasswordService","data","checkUser","id"],"mappings":"AAAA,SAASA,QAAT,QAAyB,cAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,IAAI,GAAI,GAAEF,QAAS,EAAzB;AACA,MAAMG,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAd;AAEA,OAAO,MAAMC,WAAW,GAAG;AAEvBC,EAAAA,MAAM,EAAGC,IAAD,IAAUP,KAAK,CAACQ,IAAN,CAAW,eAAX,EAA4BD,IAA5B,CAFK;AAIvBE,EAAAA,MAAM,EAAE,MAAMT,KAAK,CAACQ,IAAN,CAAa,eAAb,EAA6B,EAA7B,EAAgC;AAAEE,IAAAA,IAAI,EAAC;AAAP,GAAhC,CAJS;AAMvBC,EAAAA,OAAO,EAAGC,KAAD,IAAWZ,KAAK,CAACa,GAAN,CAAW,wBAAuBD,KAAM,EAAxC,CANG;AAQvBE,EAAAA,SAAS,EAAGC,SAAD,IAAe;AACtB,QAAIC,QAAQ,GAAI,GAAEf,IAAK,qBAAvB;AACA,UAAMgB,GAAG,GAAGjB,KAAK,CAACQ,IAAN,CAAWQ,QAAX,EAEV;AACE,qBAAeD,SAAS,CAACG,WAD3B;AAEE,sBAAgBH,SAAS,CAACI;AAF5B,KAFU,EAMZ;AAAEC,MAAAA,OAAO,EAAE;AAAE,uBAAeL,SAAS,CAACb;AAA3B;AAAX,KANY,CAAZ;AAQA,WAAOe,GAAP;AACH,GAnBsB;AAqBvBI,EAAAA,qBAAqB,EAAGC,IAAD,IAAStB,KAAK,CAACQ,IAAN,CAAW,uBAAX,EAAoCc,IAApC,EAA0C;AAACZ,IAAAA,IAAI,EAAC;AAAN,GAA1C,CArBT;AAuBvBa,EAAAA,SAAS,EAAGC,EAAD,IAAOxB,KAAK,CAACa,GAAN,CAAW,UAASW,EAAG,EAAvB;AAvBK,CAApB","sourcesContent":["import { API_BASE } from '../constants';\nimport axios from \"axios\";\n\nconst path = `${API_BASE}`;\nconst token = localStorage.getItem('access-token')\n\nexport const authService = {\n\n    signIn: (body) => axios.post('/authn/signin', body),\n\n    logOut: () => axios.post( `/authn/logout`, {},{ auth:true }),\n\n    getLink: (email) => axios.get(`/auth/forgotPassword/${email}` ),\n\n    resetPass: (passwords) => {\n        let endpoint = `${path}/auth/resetPassword`;\n        const res = axios.post(endpoint,\n\n          {\n            \"newPassword\": passwords.newPassword,\n            \"confirmation\": passwords.confirmation\n        },\n        { headers: { 'reset-token': passwords.token } },\n        );\n        return res;\n    },\n\n    changePasswordService: (data)=> axios.post('/authn/changePassword', data, {auth:true}),\n\n    checkUser :(id)=> axios.get(`/authn/${id}`)\n\n};\n"]},"metadata":{},"sourceType":"module"}