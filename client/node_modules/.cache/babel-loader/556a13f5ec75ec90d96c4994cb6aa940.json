{"ast":null,"code":"import { LOG_IN, LOG_IN_SUCCESS, LOG_IN_FAIL, CLEAR_ERROR, GET_RECOVERY_LINK, GET_RECOVERY_LINK_SUCCESS, GET_RECOVERY_LINK_TRY_AGAIN, GET_RECOVERY_LINK_FAIL, RESET_PASSWORD_SUCCESS, RESET_PASSWORD_CLEAR } from './auth.types';\nconst initialState = {\n  accessToke: null,\n  permissions: '',\n  isAuthenticated: false,\n  loginErr: null,\n  loader: false,\n  admin: null,\n  getLinkLoading: false,\n  getLinkSuccess: null,\n  resetSuccess: false,\n  closeResetSuccess: null\n};\nexport const authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOG_IN:\n      return { ...state,\n        loader: true\n      };\n\n    case LOG_IN_SUCCESS:\n      return { ...state,\n        admin: action.payload.data.permissions,\n        accessToke: action.payload.data.token,\n        permissions: action.payload.data.permissions,\n        loader: false\n      };\n\n    case LOG_IN_FAIL:\n      return { ...state,\n        loginErr: action.payload,\n        loader: false\n      };\n\n    case GET_RECOVERY_LINK:\n      return { ...state,\n        getLinkLoading: true\n      };\n\n    case GET_RECOVERY_LINK_SUCCESS:\n      return { ...state,\n        getLinkLoading: false,\n        getLinkSuccess: true\n      };\n\n    case GET_RECOVERY_LINK_FAIL:\n      return { ...state,\n        getLinkLoading: false,\n        getLinkSuccess: false\n      };\n\n    case GET_RECOVERY_LINK_TRY_AGAIN:\n      return { ...state,\n        getLinkSuccess: null\n      };\n\n    case RESET_PASSWORD_SUCCESS:\n      return { ...state,\n        resetSuccess: true,\n        closeResetSuccess: 'close'\n      };\n\n    case RESET_PASSWORD_CLEAR:\n      return { ...state,\n        resetSuccess: false,\n        closeResetSuccess: 'close'\n      };\n\n    case CLEAR_ERROR:\n      return { ...state,\n        loginErr: []\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/eachbase5/Desktop/untitled folder/wellnessDaisy/client/src/store/auth/auth.reducer.js"],"names":["LOG_IN","LOG_IN_SUCCESS","LOG_IN_FAIL","CLEAR_ERROR","GET_RECOVERY_LINK","GET_RECOVERY_LINK_SUCCESS","GET_RECOVERY_LINK_TRY_AGAIN","GET_RECOVERY_LINK_FAIL","RESET_PASSWORD_SUCCESS","RESET_PASSWORD_CLEAR","initialState","accessToke","permissions","isAuthenticated","loginErr","loader","admin","getLinkLoading","getLinkSuccess","resetSuccess","closeResetSuccess","authReducer","state","action","type","payload","data","token"],"mappings":"AAAA,SACEA,MADF,EAEEC,cAFF,EAGEC,WAHF,EAIEC,WAJF,EAKEC,iBALF,EAMEC,yBANF,EAOEC,2BAPF,EAQEC,sBARF,EASEC,sBATF,EAUEC,oBAVF,QAWO,cAXP;AAaA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAC,IADQ;AAEnBC,EAAAA,WAAW,EAAC,EAFO;AAGnBC,EAAAA,eAAe,EAAE,KAHE;AAInBC,EAAAA,QAAQ,EAAE,IAJS;AAKnBC,EAAAA,MAAM,EAAE,KALW;AAMnBC,EAAAA,KAAK,EAAE,IANY;AAQnBC,EAAAA,cAAc,EAAE,KARG;AASnBC,EAAAA,cAAc,EAAE,IATG;AAUnBC,EAAAA,YAAY,EAAE,KAVK;AAWnBC,EAAAA,iBAAiB,EAAC;AAXC,CAArB;AAcA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGZ,YAAT,EAAuBa,MAAvB,KAAkC;AAC3D,UAASA,MAAM,CAACC,IAAhB;AAEE,SAAMxB,MAAN;AACE,aAAO,EACL,GAAGsB,KADE;AAELP,QAAAA,MAAM,EAAE;AAFH,OAAP;;AAKF,SAAKd,cAAL;AACE,aAAO,EACL,GAAGqB,KADE;AAELN,QAAAA,KAAK,EAAEO,MAAM,CAACE,OAAP,CAAeC,IAAf,CAAoBd,WAFtB;AAGLD,QAAAA,UAAU,EAAEY,MAAM,CAACE,OAAP,CAAeC,IAAf,CAAoBC,KAH3B;AAILf,QAAAA,WAAW,EAAEW,MAAM,CAACE,OAAP,CAAeC,IAAf,CAAoBd,WAJ5B;AAKLG,QAAAA,MAAM,EAAE;AALH,OAAP;;AAQF,SAAKb,WAAL;AACE,aAAO,EACL,GAAGoB,KADE;AAELR,QAAAA,QAAQ,EAAES,MAAM,CAACE,OAFZ;AAGLV,QAAAA,MAAM,EAAE;AAHH,OAAP;;AAMF,SAAKX,iBAAL;AACE,aAAO,EACL,GAAGkB,KADE;AAELL,QAAAA,cAAc,EAAE;AAFX,OAAP;;AAKF,SAAKZ,yBAAL;AACE,aAAO,EACL,GAAGiB,KADE;AAELL,QAAAA,cAAc,EAAE,KAFX;AAGLC,QAAAA,cAAc,EAAE;AAHX,OAAP;;AAMF,SAAKX,sBAAL;AACE,aAAO,EACL,GAAGe,KADE;AAELL,QAAAA,cAAc,EAAE,KAFX;AAGLC,QAAAA,cAAc,EAAE;AAHX,OAAP;;AAMF,SAAKZ,2BAAL;AACE,aAAO,EACL,GAAGgB,KADE;AAELJ,QAAAA,cAAc,EAAE;AAFX,OAAP;;AAKF,SAAKV,sBAAL;AACE,aAAO,EACL,GAAGc,KADE;AAELH,QAAAA,YAAY,EAAE,IAFT;AAGLC,QAAAA,iBAAiB,EAAC;AAHb,OAAP;;AAMF,SAAKX,oBAAL;AACE,aAAO,EACL,GAAGa,KADE;AAELH,QAAAA,YAAY,EAAE,KAFT;AAGLC,QAAAA,iBAAiB,EAAC;AAHb,OAAP;;AAMF,SAAKjB,WAAL;AACE,aAAO,EACL,GAAGmB,KADE;AAELR,QAAAA,QAAQ,EAAE;AAFL,OAAP;;AAKF;AACE,aAAOQ,KAAP;AAvEJ;AAyED,CA1EM","sourcesContent":["import {\n  LOG_IN,\n  LOG_IN_SUCCESS,\n  LOG_IN_FAIL,\n  CLEAR_ERROR,\n  GET_RECOVERY_LINK,\n  GET_RECOVERY_LINK_SUCCESS,\n  GET_RECOVERY_LINK_TRY_AGAIN,\n  GET_RECOVERY_LINK_FAIL,\n  RESET_PASSWORD_SUCCESS,\n  RESET_PASSWORD_CLEAR\n} from './auth.types';\n\nconst initialState = {\n  accessToke:null,\n  permissions:'',\n  isAuthenticated: false,\n  loginErr: null,\n  loader: false,\n  admin: null,\n\n  getLinkLoading: false,\n  getLinkSuccess: null,\n  resetSuccess: false,\n  closeResetSuccess:null\n};\n\nexport const authReducer = (state = initialState, action) => {\n  switch ( action.type ) {\n\n    case  LOG_IN:\n      return {\n        ...state,\n        loader: true,\n      }\n\n    case LOG_IN_SUCCESS:\n      return {\n        ...state,\n        admin: action.payload.data.permissions,\n        accessToke: action.payload.data.token,\n        permissions: action.payload.data.permissions,\n        loader: false,\n      };\n\n    case LOG_IN_FAIL:\n      return {\n        ...state,\n        loginErr: action.payload,\n        loader: false\n      };\n\n    case GET_RECOVERY_LINK :\n      return {\n        ...state,\n        getLinkLoading: true,\n      }\n\n    case GET_RECOVERY_LINK_SUCCESS :\n      return {\n        ...state,\n        getLinkLoading: false,\n        getLinkSuccess: true,\n      }\n\n    case GET_RECOVERY_LINK_FAIL :\n      return {\n        ...state,\n        getLinkLoading: false,\n        getLinkSuccess: false,\n      }\n\n    case GET_RECOVERY_LINK_TRY_AGAIN :\n      return {\n        ...state,\n        getLinkSuccess: null,\n      }\n\n    case RESET_PASSWORD_SUCCESS :\n      return {\n        ...state,\n        resetSuccess: true,\n        closeResetSuccess:'close'\n      }\n\n    case RESET_PASSWORD_CLEAR :\n      return {\n        ...state,\n        resetSuccess: false,\n        closeResetSuccess:'close'\n      }\n\n    case CLEAR_ERROR:\n      return {\n        ...state,\n        loginErr: []\n      };\n\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}