{"ast":null,"code":"import { call, put, takeLatest } from \"redux-saga/effects\";\nimport { authService } from \"./agent.service\";\nimport { CREATE_ADMIN, CREATE_AGENT, GET_ADMIN_BY_ID, GET_ADMIN_BY_ID_SUCCESS, GET_ADMINS, GET_ADMINS_SUCCESS, GET_AGENT_BY_ID, GET_AGENT_BY_ID_SUCCESS, GET_AGENTS, GET_AGENTS_SUCCESS } from \"./agent.types\";\n\nfunction* createAgent(action) {\n  try {\n    const res = yield call(authService.createAgentService, action.payload.body);\n    window.location.replace('/agents');\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nfunction* getAgents(action) {\n  try {\n    const res = yield call(authService.getAgentsService, action.payload);\n    yield put({\n      type: GET_AGENTS_SUCCESS,\n      payload: res.data.reverse()\n    });\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nfunction* getAgentById(action) {\n  try {\n    const res = yield call(authService.getAgentByIdService, action.payload);\n    yield put({\n      type: GET_AGENT_BY_ID_SUCCESS,\n      payload: res.data\n    });\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nexport const watchAgent = function* watchAgentSaga() {\n  yield takeLatest(CREATE_AGENT, createAgent);\n  yield takeLatest(GET_AGENTS, getAgents);\n  yield takeLatest(GET_AGENT_BY_ID, getAgentById);\n};","map":{"version":3,"sources":["/Users/eachbase5/Desktop/untitled folder/wellnessDaisy/client/src/store/agents/agent.saga.js"],"names":["call","put","takeLatest","authService","CREATE_ADMIN","CREATE_AGENT","GET_ADMIN_BY_ID","GET_ADMIN_BY_ID_SUCCESS","GET_ADMINS","GET_ADMINS_SUCCESS","GET_AGENT_BY_ID","GET_AGENT_BY_ID_SUCCESS","GET_AGENTS","GET_AGENTS_SUCCESS","createAgent","action","res","createAgentService","payload","body","window","location","replace","err","console","log","getAgents","getAgentsService","type","data","reverse","getAgentById","getAgentByIdService","watchAgent","watchAgentSaga"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,UAApB,QAAsC,oBAAtC;AACA,SAASC,WAAT,QAA4B,iBAA5B;AACA,SACEC,YADF,EAEEC,YAFF,EAGEC,eAHF,EAIEC,uBAJF,EAKEC,UALF,EAMEC,kBANF,EAOEC,eAPF,EAOmBC,uBAPnB,EAQEC,UARF,EAQcC,kBARd,QAUO,eAVP;;AAYA,UAAUC,WAAV,CAAsBC,MAAtB,EAA8B;AAC5B,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMhB,IAAI,CAAEG,WAAW,CAACc,kBAAd,EAAkCF,MAAM,CAACG,OAAP,CAAeC,IAAjD,CAAtB;AACAC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwB,SAAxB;AAGD,GALD,CAKE,OAAOC,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF;;AAED,UAAUG,SAAV,CAAoBX,MAApB,EAA4B;AAC1B,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMhB,IAAI,CAAEG,WAAW,CAACwB,gBAAd,EAAgCZ,MAAM,CAACG,OAAvC,CAAtB;AACA,UAAMjB,GAAG,CAAC;AACR2B,MAAAA,IAAI,EAAEf,kBADE;AAERK,MAAAA,OAAO,EAAEF,GAAG,CAACa,IAAJ,CAASC,OAAT;AAFD,KAAD,CAAT;AAKD,GAPD,CAOE,OAAOP,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF;;AAED,UAAUQ,YAAV,CAAuBhB,MAAvB,EAA+B;AAC7B,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMhB,IAAI,CAAEG,WAAW,CAAC6B,mBAAd,EAAmCjB,MAAM,CAACG,OAA1C,CAAtB;AACA,UAAMjB,GAAG,CAAC;AACR2B,MAAAA,IAAI,EAAEjB,uBADE;AAERO,MAAAA,OAAO,EAAEF,GAAG,CAACa;AAFL,KAAD,CAAT;AAKD,GAPD,CAOE,OAAON,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF;;AAED,OAAO,MAAMU,UAAU,GAAG,UAAUC,cAAV,GAA2B;AACnD,QAAMhC,UAAU,CAAEG,YAAF,EAAgBS,WAAhB,CAAhB;AACA,QAAMZ,UAAU,CAAEU,UAAF,EAAcc,SAAd,CAAhB;AACA,QAAMxB,UAAU,CAAEQ,eAAF,EAAmBqB,YAAnB,CAAhB;AACD,CAJM","sourcesContent":["import { call, put, takeLatest } from \"redux-saga/effects\";\nimport { authService } from \"./agent.service\";\nimport {\n  CREATE_ADMIN,\n  CREATE_AGENT,\n  GET_ADMIN_BY_ID,\n  GET_ADMIN_BY_ID_SUCCESS,\n  GET_ADMINS,\n  GET_ADMINS_SUCCESS,\n  GET_AGENT_BY_ID, GET_AGENT_BY_ID_SUCCESS,\n  GET_AGENTS, GET_AGENTS_SUCCESS,\n\n} from \"./agent.types\";\n\nfunction* createAgent(action) {\n  try {\n    const res = yield call( authService.createAgentService, action.payload.body );\n    window.location.replace('/agents')\n\n   \n  } catch (err) {\n    console.log(err)\n  }\n}\n\nfunction* getAgents(action) {\n  try {\n    const res = yield call( authService.getAgentsService, action.payload );\n    yield put({\n      type: GET_AGENTS_SUCCESS,\n      payload: res.data.reverse(),\n    });\n\n  } catch (err) {\n    console.log(err)\n  }\n}\n\nfunction* getAgentById(action) {\n  try {\n    const res = yield call( authService.getAgentByIdService, action.payload );\n    yield put({\n      type: GET_AGENT_BY_ID_SUCCESS,\n      payload: res.data,\n    });\n\n  } catch (err) {\n    console.log(err)\n  }\n}\n\nexport const watchAgent = function* watchAgentSaga() {\n  yield takeLatest( CREATE_AGENT, createAgent );\n  yield takeLatest( GET_AGENTS, getAgents );\n  yield takeLatest( GET_AGENT_BY_ID, getAgentById );\n};\n"]},"metadata":{},"sourceType":"module"}