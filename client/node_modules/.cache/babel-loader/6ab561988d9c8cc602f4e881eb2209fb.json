{"ast":null,"code":"var _jsxFileName = \"/Users/eachbase5/Desktop/untitled folder/wellnessDaisy/client/src/pages/single/Single.js\",\n    _s = $RefreshSig$();\n\n// export const Single = ({}) => {\n//     return (\n//         <div>\n//             single\n//         </div>\n//     )\n// }\nimport React, { useEffect, useState } from \"react\";\nimport { TableWrapper } from \"@eachbase/components\";\nimport { OfficesInfo, FundingSourceTable, CreateFundingSource } from \"@eachbase/fragments\";\nimport { useHistory } from \"react-router-dom\";\nimport { fundingSourceActions, officeActions } from \"@eachbase/store\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getFundingSource } from \"../../store/fundingSource/fundingSource.action\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Single = ({}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [open, setOpen] = useState(false);\n  useEffect(() => {\n    dispatch(fundingSourceActions.getFundingSource());\n  }, []);\n  const {\n    officeById\n  } = useSelector(state => ({\n    officeById: state.offices.officeById\n  }));\n\n  const handleOpenClose = () => {\n    setOpen(!open);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !officeById ? /*#__PURE__*/_jsxDEV(TableWrapper, {\n      firstButton: \"Active\",\n      secondButton: \"Inactive\",\n      addButton: \"Add Funding Source\",\n      buttonsTab: true,\n      buttonsTabAddButton: true,\n      addButtonText: 'Add Funding Source',\n      handleOpenClose: handleOpenClose,\n      openCloseInfo: open,\n      body: /*#__PURE__*/_jsxDEV(CreateFundingSource, {\n        handleClose: handleOpenClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 31\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(FundingSourceTable, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(OfficesInfo, {\n      info: officeById\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 20\n    }, this)\n  }, void 0, false);\n};\n\n_s(Single, \"9Eif15i464MFap1bRQuFYkmp6xo=\", false, function () {\n  return [useDispatch, useHistory, useSelector];\n});\n\n_c = Single;\n\nvar _c;\n\n$RefreshReg$(_c, \"Single\");","map":{"version":3,"sources":["/Users/eachbase5/Desktop/untitled folder/wellnessDaisy/client/src/pages/single/Single.js"],"names":["React","useEffect","useState","TableWrapper","OfficesInfo","FundingSourceTable","CreateFundingSource","useHistory","fundingSourceActions","officeActions","useDispatch","useSelector","getFundingSource","Single","dispatch","history","open","setOpen","officeById","state","offices","handleOpenClose"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,YAAT,QAA6B,sBAA7B;AACA,SAASC,WAAT,EAAsBC,kBAAtB,EAA0CC,mBAA1C,QAAsE,qBAAtE;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAAQC,oBAAR,EAA8BC,aAA9B,QAAkD,iBAAlD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAAQC,gBAAR,QAA+B,gDAA/B;;;AAEA,OAAO,MAAMC,MAAM,GAAG,CAAC,EAAD,KAAS;AAAA;;AAC3B,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAMK,OAAO,GAAGR,UAAU,EAA1B;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,KAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZa,IAAAA,QAAQ,CAACN,oBAAoB,CAACI,gBAArB,EAAD,CAAR;AACH,GAFQ,EAEN,EAFM,CAAT;AAIA,QAAM;AAAEM,IAAAA;AAAF,MAAiBP,WAAW,CAAEQ,KAAD,KAAY;AACvCD,IAAAA,UAAU,EAAEC,KAAK,CAACC,OAAN,CAAcF;AADa,GAAZ,CAAD,CAAlC;;AAIA,QAAMG,eAAe,GAAG,MAAM;AAC1BJ,IAAAA,OAAO,CAAC,CAACD,IAAF,CAAP;AACH,GAFD;;AAGA,sBACI;AAAA,cACK,CAACE,UAAD,gBAEO,QAAC,YAAD;AACI,MAAA,WAAW,EAAE,QADjB;AAEI,MAAA,YAAY,EAAE,UAFlB;AAGI,MAAA,SAAS,EAAE,oBAHf;AAII,MAAA,UAAU,EAAE,IAJhB;AAKI,MAAA,mBAAmB,EAAE,IALzB;AAMI,MAAA,aAAa,EAAE,oBANnB;AAOI,MAAA,eAAe,EAAEG,eAPrB;AAQI,MAAA,aAAa,EAAEL,IARnB;AASI,MAAA,IAAI,eAAE,QAAC,mBAAD;AAAqB,QAAA,WAAW,EAAEK;AAAlC;AAAA;AAAA;AAAA;AAAA,cATV;AAAA,6BAYI,QAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAZJ;AAAA;AAAA;AAAA;AAAA,YAFP,gBAkBM,QAAC,WAAD;AAAa,MAAA,IAAI,EAAEH;AAAnB;AAAA;AAAA;AAAA;AAAA;AAnBX,mBADJ;AAyBH,CAzCM;;GAAML,M;UACQH,W,EACDH,U,EAOOI,W;;;KATdE,M","sourcesContent":["// export const Single = ({}) => {\n//     return (\n//         <div>\n//             single\n//         </div>\n//     )\n// }\n\nimport React, { useEffect, useState } from \"react\";\nimport { TableWrapper } from \"@eachbase/components\";\nimport { OfficesInfo, FundingSourceTable, CreateFundingSource, } from \"@eachbase/fragments\";\nimport { useHistory } from \"react-router-dom\";\nimport {fundingSourceActions, officeActions} from \"@eachbase/store\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {getFundingSource} from \"../../store/fundingSource/fundingSource.action\";\n\nexport const Single = ({ }) => {\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const [open, setOpen] = useState(false)\n\n    useEffect(() => {\n        dispatch(fundingSourceActions.getFundingSource())\n    }, []);\n\n    const { officeById } = useSelector((state) => ({\n            officeById: state.offices.officeById,\n        })\n    )\n    const handleOpenClose = () => {\n        setOpen(!open)\n    }\n    return (\n        <>\n            {!officeById ?\n                (\n                    <TableWrapper\n                        firstButton={\"Active\"}\n                        secondButton={\"Inactive\"}\n                        addButton={\"Add Funding Source\"}\n                        buttonsTab={true}\n                        buttonsTabAddButton={true}\n                        addButtonText={'Add Funding Source'}\n                        handleOpenClose={handleOpenClose}\n                        openCloseInfo={open}\n                        body={<CreateFundingSource handleClose={handleOpenClose} />}\n                    >\n\n                        <FundingSourceTable />\n\n                    </TableWrapper>\n                )\n                : (<OfficesInfo info={officeById} />)\n\n            }\n        </>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}