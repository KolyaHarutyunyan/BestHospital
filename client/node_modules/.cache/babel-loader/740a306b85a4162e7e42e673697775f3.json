{"ast":null,"code":"var _jsxFileName = \"/Users/eachbase5/Desktop/untitled folder/wellnessDaisy/client/src/components/inputs/autocompleteSelectInput.js\";\nimport React from 'react';\nimport { Checkbox, TextField } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport { inputsStyle } from \"./styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst icon = /*#__PURE__*/_jsxDEV(CheckBoxOutlineBlankIcon, {\n  fontSize: \"small\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 8,\n  columnNumber: 14\n}, this);\n\nconst checkedIcon = /*#__PURE__*/_jsxDEV(CheckBoxIcon, {\n  fontSize: \"small\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 9,\n  columnNumber: 21\n}, this);\n\nexport const CheckboxesTags = ({\n  label,\n  permissionsList,\n  placeholder,\n  handleChange,\n  styles,\n  typeError\n}) => {\n  const classes = inputsStyle();\n  return /*#__PURE__*/_jsxDEV(Autocomplete, {\n    multiple: true,\n    style: { ...styles\n    },\n    id: \"checkboxes-tags-demo\",\n    options: permissionsList,\n    disableCloseOnSelect: true,\n    onChange: (event, value) => handleChange(value),\n    getOptionLabel: option => option.title,\n    renderOption: (option, {\n      selected\n    }) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n        icon: icon,\n        checkedIcon: checkedIcon,\n        style: {\n          marginRight: 8\n        },\n        checked: selected\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this), option.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this) // style={{ width: 500 }}\n    ,\n    renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n      error: typeError // inputProps={{ style : {height:'68px'}}}\n      ,\n      className: classes.inputTextFieldAutoHeight,\n      variant: \"outlined\",\n      label: label,\n      placeholder: placeholder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_c = CheckboxesTags;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckboxesTags\");","map":{"version":3,"sources":["/Users/eachbase5/Desktop/untitled folder/wellnessDaisy/client/src/components/inputs/autocompleteSelectInput.js"],"names":["React","Checkbox","TextField","Autocomplete","CheckBoxOutlineBlankIcon","CheckBoxIcon","inputsStyle","icon","checkedIcon","CheckboxesTags","label","permissionsList","placeholder","handleChange","styles","typeError","classes","event","value","option","title","selected","marginRight","params","inputTextFieldAutoHeight"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAkBC,SAAlB,QAAmC,mBAAnC;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,wBAAP,MAAqC,yCAArC;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,SAASC,WAAT,QAA4B,UAA5B;;;AAEA,MAAMC,IAAI,gBAAG,QAAC,wBAAD;AAA0B,EAAA,QAAQ,EAAC;AAAnC;AAAA;AAAA;AAAA;AAAA,QAAb;;AACA,MAAMC,WAAW,gBAAG,QAAC,YAAD;AAAc,EAAA,QAAQ,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA,QAApB;;AAEA,OAAO,MAAOC,cAAc,GAAE,CAAC;AAACC,EAAAA,KAAD;AAAOC,EAAAA,eAAP;AAAuBC,EAAAA,WAAvB;AAAmCC,EAAAA,YAAnC;AAAgDC,EAAAA,MAAhD;AAAuDC,EAAAA;AAAvD,CAAD,KAAuE;AACnG,QAAMC,OAAO,GAAGV,WAAW,EAA3B;AACA,sBACE,QAAC,YAAD;AACE,IAAA,QAAQ,MADV;AAEE,IAAA,KAAK,EAAE,EAAC,GAAGQ;AAAJ,KAFT;AAGE,IAAA,EAAE,EAAC,sBAHL;AAIE,IAAA,OAAO,EAAEH,eAJX;AAKE,IAAA,oBAAoB,MALtB;AAME,IAAA,QAAQ,EAAE,CAACM,KAAD,EAAQC,KAAR,KAAkBL,YAAY,CAACK,KAAD,CAN1C;AAOE,IAAA,cAAc,EAAGC,MAAD,IAAYA,MAAM,CAACC,KAPrC;AAQE,IAAA,YAAY,EAAE,CAACD,MAAD,EAAS;AAAEE,MAAAA;AAAF,KAAT,kBACZ,QAAC,KAAD,CAAO,QAAP;AAAA,8BACE,QAAC,QAAD;AACE,QAAA,IAAI,EAAEd,IADR;AAEE,QAAA,WAAW,EAAEC,WAFf;AAGE,QAAA,KAAK,EAAE;AAAEc,UAAAA,WAAW,EAAE;AAAf,SAHT;AAIE,QAAA,OAAO,EAAED;AAJX;AAAA;AAAA;AAAA;AAAA,cADF,EAOGF,MAAM,CAACC,KAPV;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ,CAmBE;AAnBF;AAoBE,IAAA,WAAW,EAAGG,MAAD,iBACX,QAAC,SAAD,OACMA,MADN;AAEE,MAAA,KAAK,EAAER,SAFT,CAGE;AAHF;AAIE,MAAA,SAAS,EAAEC,OAAO,CAACQ,wBAJrB;AAKE,MAAA,OAAO,EAAC,UALV;AAME,MAAA,KAAK,EAAEd,KANT;AAOE,MAAA,WAAW,EAAEE;AAPf;AAAA;AAAA;AAAA;AAAA;AArBJ;AAAA;AAAA;AAAA;AAAA,UADF;AAkCD,CApCM;KAAOH,c","sourcesContent":["import React from 'react';\nimport { Checkbox,TextField } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport { inputsStyle } from \"./styles\";\n\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\n\nexport const  CheckboxesTags =({label,permissionsList,placeholder,handleChange,styles,typeError}) => {\n  const classes = inputsStyle();\n  return (\n    <Autocomplete\n      multiple\n      style={{...styles}}\n      id=\"checkboxes-tags-demo\"\n      options={permissionsList}\n      disableCloseOnSelect\n      onChange={(event, value) => handleChange(value)}\n      getOptionLabel={(option) => option.title}\n      renderOption={(option, { selected }) => (\n        <React.Fragment>\n          <Checkbox\n            icon={icon}\n            checkedIcon={checkedIcon}\n            style={{ marginRight: 8 }}\n            checked={selected}\n          />\n          {option.title}\n        </React.Fragment>\n      )}\n      // style={{ width: 500 }}\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          error={typeError}\n          // inputProps={{ style : {height:'68px'}}}\n          className={classes.inputTextFieldAutoHeight}\n          variant=\"outlined\"\n          label={label}\n          placeholder={placeholder}\n        />\n      )}\n    />\n  );\n}"]},"metadata":{},"sourceType":"module"}