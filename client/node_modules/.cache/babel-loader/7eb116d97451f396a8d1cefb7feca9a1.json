{"ast":null,"code":"import { call, put, takeLatest } from 'redux-saga/effects';\nimport { authService } from './auth.service';\nimport { LOG_IN, LOG_IN_SUCCESS, LOG_IN_FAIL, LOG_OUT, GET_RECOVERY_LINK, GET_RECOVERY_LINK_SUCCESS, GET_RECOVERY_LINK_FAIL, RESET_PASSWORD_REQUEST, RESET_PASSWORD_SUCCESS, CHANGE_PASSWORD_REQUEST } from './auth.types';\nimport { httpRequestsOnErrorsActions } from \"../http_requests_on_errors\";\nimport { httpRequestsOnLoadActions } from \"../http_requests_on_load\";\n\nfunction* logIn(payload) {\n  try {\n    const res = yield call(authService.signIn, payload.payload);\n    localStorage.setItem('access-token', res.data.token);\n    localStorage.setItem('permissions', res.data.permissions);\n    localStorage.setItem('poloUserInfo', JSON.stringify(res.data.user));\n    window.location.replace('/');\n    yield put({\n      type: LOG_IN_SUCCESS,\n      payload: res.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_IN_FAIL,\n      payload: err.response.data.message\n    });\n  }\n}\n\nfunction* logOut() {\n  try {\n    const res = yield call(authService.logOut);\n    localStorage.removeItem('access-token');\n    localStorage.removeItem('poloUserInfo');\n    window.location.replace('/login');\n  } catch (err) {\n    if (err.response.data.statusCode === 401) {\n      localStorage.removeItem('access-token');\n      localStorage.removeItem('poloUserInfo');\n      window.location.replace('/login');\n    }\n  }\n}\n\nfunction* getLink(action) {\n  try {\n    const res = yield call(authService.getLink, action.payload.email);\n    yield put({\n      type: GET_RECOVERY_LINK_SUCCESS,\n      payload: res.data\n    });\n  } catch (err) {\n    yield put({\n      type: GET_RECOVERY_LINK_FAIL\n    });\n  }\n}\n\nfunction* resetPassword(action) {\n  try {\n    const res = yield call(authService.resetPass, action.payload.passwords);\n    localStorage.removeItem('Reset'); // window.location.reload()\n\n    yield put({\n      type: RESET_PASSWORD_SUCCESS,\n      payload: res.data\n    });\n  } catch (err) {// yield put({\n    //     type:GET_RECOVERY_LINK_FAIL,\n    // })\n  }\n}\n\nfunction* changePassword({\n  action,\n  type\n}) {\n  yield put(httpRequestsOnErrorsActions.removeError(type));\n  yield put(httpRequestsOnLoadActions.appendLoading(type));\n\n  try {\n    const res = yield call(authService.changePasswordService, action.payload.data);\n    localStorage.setItem('access-token', res.data.accessToken);\n    yield put(httpRequestsOnLoadActions.removeLoading(type));\n    yield put(httpRequestsOnErrorsActions.removeError(type));\n  } catch (err) {}\n}\n\nfunction* checkUser(action) {\n  try {\n    const res = yield call(authService.checkUser, action.payload.data);\n  } catch (err) {}\n}\n\nexport const watchAuth = function* watchUserAuth() {\n  yield takeLatest(LOG_IN, logIn);\n  yield takeLatest(LOG_OUT, logOut);\n  yield takeLatest(GET_RECOVERY_LINK, getLink);\n  yield takeLatest(RESET_PASSWORD_REQUEST, resetPassword);\n  yield takeLatest(CHANGE_PASSWORD_REQUEST, changePassword);\n};","map":{"version":3,"sources":["/Users/eachbase5/Desktop/untitled folder/wellnessDaisy/client/src/store/auth/auth.saga.js"],"names":["call","put","takeLatest","authService","LOG_IN","LOG_IN_SUCCESS","LOG_IN_FAIL","LOG_OUT","GET_RECOVERY_LINK","GET_RECOVERY_LINK_SUCCESS","GET_RECOVERY_LINK_FAIL","RESET_PASSWORD_REQUEST","RESET_PASSWORD_SUCCESS","CHANGE_PASSWORD_REQUEST","httpRequestsOnErrorsActions","httpRequestsOnLoadActions","logIn","payload","res","signIn","localStorage","setItem","data","token","permissions","JSON","stringify","user","window","location","replace","type","err","response","message","logOut","removeItem","statusCode","getLink","action","email","resetPassword","resetPass","passwords","changePassword","removeError","appendLoading","changePasswordService","accessToken","removeLoading","checkUser","watchAuth","watchUserAuth"],"mappings":"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","sourcesContent":["import { call, put, takeLatest } from 'redux-saga/effects';\nimport { authService } from './auth.service';\nimport {\n    LOG_IN,\n    LOG_IN_SUCCESS,\n    LOG_IN_FAIL,\n    LOG_OUT,\n    GET_RECOVERY_LINK,\n    GET_RECOVERY_LINK_SUCCESS,\n    GET_RECOVERY_LINK_FAIL,\n    RESET_PASSWORD_REQUEST,\n    RESET_PASSWORD_SUCCESS,\n    CHANGE_PASSWORD_REQUEST\n} from './auth.types';\nimport {httpRequestsOnErrorsActions} from \"../http_requests_on_errors\";\nimport {httpRequestsOnLoadActions} from \"../http_requests_on_load\";\n\nfunction* logIn(payload) {\n    try {\n        const res = yield call( authService.signIn, payload.payload );\n        localStorage.setItem('access-token', res.data.token);\n        localStorage.setItem('permissions', res.data.permissions);\n        localStorage.setItem('poloUserInfo', JSON.stringify(res.data.user) );\n\n        window.location.replace('/')\n\n        yield put({\n            type: LOG_IN_SUCCESS,\n            payload: res.data,\n        });\n\n    } catch (err) {\n\n        yield put({\n            type: LOG_IN_FAIL,\n            payload: err.response.data.message\n        });\n\n    }\n}\n\nfunction* logOut() {\n    try {\n        const res = yield call( authService.logOut, );\n        localStorage.removeItem('access-token');\n        localStorage.removeItem('poloUserInfo'  );\n        window.location.replace('/login')\n    } catch (err) {\n\n        if(err.response.data.statusCode === 401){\n            localStorage.removeItem('access-token');\n            localStorage.removeItem('poloUserInfo'  );\n            window.location.replace('/login')\n        }\n    }\n}\n\nfunction* getLink(action) {\n    try {\n        const res = yield call( authService.getLink, action.payload.email );\n\n        yield put({\n            type:GET_RECOVERY_LINK_SUCCESS,\n            payload: res.data,\n        })\n\n    } catch (err) {\n        yield put({\n            type:GET_RECOVERY_LINK_FAIL,\n        })\n\n    }\n}\n\nfunction* resetPassword(action) {\n    try {\n        const res = yield call( authService.resetPass, action.payload.passwords );\n\n        localStorage.removeItem('Reset')\n        // window.location.reload()\n        yield put({\n            type:RESET_PASSWORD_SUCCESS,\n            payload: res.data,\n        })\n\n    } catch (err) {\n        // yield put({\n        //     type:GET_RECOVERY_LINK_FAIL,\n        // })\n\n    }\n}\n\n\nfunction* changePassword({action, type}){\n    yield put(httpRequestsOnErrorsActions.removeError(type));\n    yield put(httpRequestsOnLoadActions.appendLoading(type));\n    try{\n\n        const res = yield call( authService.changePasswordService, action.payload.data );\n        localStorage.setItem('access-token', res.data.accessToken);\n        yield put(httpRequestsOnLoadActions.removeLoading(type));\n        yield put(httpRequestsOnErrorsActions.removeError(type));\n\n    }catch (err){\n\n    }\n}\n\n\nfunction* checkUser(action){\n    try{\n        const res = yield call( authService.checkUser, action.payload.data );\n\n\n\n    }catch (err){\n\n    }\n}\n\n\nexport const watchAuth = function* watchUserAuth() {\n    yield takeLatest( LOG_IN, logIn );\n    yield takeLatest( LOG_OUT, logOut );\n    yield takeLatest( GET_RECOVERY_LINK, getLink );\n    yield takeLatest( RESET_PASSWORD_REQUEST, resetPassword );\n    yield takeLatest( CHANGE_PASSWORD_REQUEST, changePassword );\n};\n"]},"metadata":{},"sourceType":"module"}